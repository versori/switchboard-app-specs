openapi: 3.0.1
info: 
  title: Collection API For Google Shopping 
  description: The collection message.
  contact:
    name: Collection APi 
    url: https://developers.google.com/shopping-content/reference/rest/v2.1/collections
  version: v 1.0.0
servers: 
  - url:  https://shoppingcontent.googleapis.com/content/v2.1/
paths: 
  /{merchantId}/collections:
    description: Uploads a collection to your Merchant Center account. If a collection with the same collectionId already exists, this method updates that entry. In each update, the collection is completely replaced by the fields in the body of the update request.
    post:
     parameters:
      - name: merchantId
        in: path
        description: 'Required. The ID of the account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     requestBody:
      content:
        application.json:
          schema:
            type: object
            items:
              $ref: '#/components/schemas/Collection'
     security:
      - OAuth2: [admin]
     responses:
       200:
        description: Uploads a collection to your Merchant Center account. 
        content:
          application.json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/Collection'
  /{merchantId}/collections/{collectionId}:
    description: Deletes a collection from your Merchant Center account.
    delete:
     parameters:
      - name: merchantId
        in: path
        description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: collectionId  
        in: path
        description: 'Required. The collectionId of the collection. CollectionId is the same as the REST ID of the collection.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     security:
      - OAuth2: [admin]
     responses:
       200:
        description: Deletes a collection from your Merchant Center account.
        content:
          application.json:
              schema:
                type: object
  /{merchantId}/collections/{collectionId}/collections.get:
    description: "Retrieves a collection from your Merchant Center account. "
    get:
     parameters:
      - name: merchantId
        in: path
        description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: collectionId  
        in: path
        description: Required. The REST ID of the collection'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     security:
       - OAuth2: [admin]          
     responses:
       200:
        description: Retrieves a collection from your Merchant Center account.  
        content:
          application.json:
            schema:
              type: object
              items: 
                $ref: '#/components/schemas/Collection'
  /{merchantId}/collections/collections.list  :
    description: Lists the collections in your Merchant Center account. The response might contain fewer items than specified by pageSize. Rely on nextPageToken to determine if there are more items to be requested.
    get: 
     parameters:
      - name: merchantId
        in: path
        description: 'Required. The ID of the account that contains the collection. This account cannot be a multi-client account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: pageSize
        in: query
        description: 'The maximum number of collections to return in the response, used for paging. Defaults to 50; values above 1000 will be coerced to 1000.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: pageToken
        in: query
        description: 'Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     security:
      - OAuth2: [admin]      
     responses:
       200:
        description: Updates the status of the BoG program for your Merchant Center account.
        content:
          application.json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    description: The collections listed.
                    items:
                      $ref: '#/components/schemas/Collection'
                  nextPageToken:
                    type: string
                    description: A token, which can be sent as pageToken to retrieve the next page. If this field is omitted, there are no subsequent pages.
components:
  schemas:
      Collection:
        type: object
        properties:
          id:
            type: string
            description: Required. The REST ID of the collection. Content API methods that operate on collections take this as their collectionId parameter. The REST ID for a collection is of the form collectionId. id attribute
          language:
            type: string
            description: The language of a collection and the language of any featured products linked to the collection. language attribute.
          productCountry:
            type: string 
            description: "productCountry attribute"
          imageLink:
            type: array
            description: The URL of a collection’s image. imageLink attribute.
            items:
              type: string
          featuredProduct:
            type: array 
            description: "This identifies one or more products associated with the collection. Used as a lookup to the corresponding product ID in your product feeds. Provide a maximum of 100 featuredProduct (for collections). Provide up to 10 featuredProduct (for Shoppable Images only) with ID and X and Y coordinates. featuredProduct attribute"
            items:
              $ref: '#/components/schemas/FeaturedProduct'
          link:
            type: string 
            description: "A collection’s landing page. URL directly linking to your collection's page on your website. link attribute"
          mobileLink:
            type: string
            description: A collection’s mobile-optimized landing page when you have a different URL for mobile and desktop traffic. mobileLink attribute.
          headline:
            type: array
            description: Your collection's name. headline attribute
            items:
              type: string 
          customLabel0:
            type: string 
            description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns. Custom label.
          customLabel1:
            type: string 
            description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          customLabel2:
            type: string 
            description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          customLabel3:
            type: string 
            description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          customLabel4:
            type: string 
            description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
      FeaturedProduct:
        type: object
        properties:
          offerId:
            type: string 
            description: The unique identifier for the product item.
          x:
            type: number 
            description: Required. X-coordinate of the product callout on the Shoppable Image.
          y:
            type: number 
            description: Required. Y-coordinate of the product callout on the Shoppable Image.
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations