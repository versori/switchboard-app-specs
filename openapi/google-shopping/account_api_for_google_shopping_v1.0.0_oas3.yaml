openapi: 3.0.1
info: 
  title: Account API For Google Shopping 
  description: Account data. After the creation of a new account it may take a few minutes before it's fully operational. The methods delete, insert, and update require the admin role. 
  contact:
    name: Google shopping Account APi 
    url: https://developers.google.com/
  version: v 1.0.0
servers: 
  - url:  https://developers.google.com/shopping-content/reference/rest/v2.1
paths: 
  /accounts/authinfo:
    description: Returns information about the authenticated user.
    get:
      security:
        - OAuth2: [admin]
      responses:
       200:
        description: Auth Info
        content:
          application.json:
            schema:
              type: object
              properties:
                accountIdentifiers:
                  type: array
                  items:
                    $ref: '#/components/schemas/AccountIdentifier'
                kind:
                  type: string
  /{merchantId}/accounts/{accountId}/claimwebsite:
    description: Claims the website of a Merchant Center sub-account.
    post:
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'The ID of the account whose website is claimed.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: overwrite  
        in: query 
        description: 'The ID of the account whose website is claimed.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string            
     security:
      - OAuth2: [admin]
     responses:
       200:
        description: Claim Website 
        content:
          application.json:
              schema:
                type: object
                properties:
                  kind: 
                    type: string
  /accounts/batch:
    description: Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request. 
    post:
     requestBody:
      content:
        application.json:
          schema:
            type: object
            items:
              $ref: '#/components/schemas/AccountsCustomBatchRequest'
     security:
      - OAuth2: [admin]          
     responses:
       200:
        description: Custom Batch  
        content:
          application.json:
            schema:
              type: object
              properties:
                entries:
                  type: array
                  description: "The result of the execution of the batch requests."
                  items:
                      $ref: '#/components/schemas/AccountsCustomBatchResponseEntry'
                kind:
                  type: string
                  description: "Identifies what kind of resource this is. Value: the fixed string content#accountsCustomBatchResponse."
  /{merchantId}/accounts/{accountId}/accounts.delete:
    description: deletes a merchant center subaccount
    delete: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'The ID of the account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: force  
        in: query 
        description: 'Option to delete sub-accounts with products. The default value is false.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: boolean
     security:
      - OAuth2: [admin]      
     responses:
       200:
        description: Deletes a Merchant 
        content:
          application.json:
              schema:
                type: object
  /{merchantId}/accounts/{accountId}/accounts.get:
    description: Retrieves a Merchant Center account.
    get: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'The ID of the account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: view  
        in: query 
        description: 'Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default value is "merchant".'
        required: true
        explode: false
        schema:
          type: string
          enum: [MERCHANT,CSS]
     security:
      - OAuth2: [admin]      
     responses:
       200:
        description: Retrieves a Merchant Center account.
        content:
          application.json:
              schema:
                type: object
                items:
                    $ref: '#/components/schemas/Account' 
  /{merchantId}/accounts:
    description: Creates a Merchant Center sub-account.
    post: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. This must be a multi-client account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     requestBody:
      content:
        application.json:
          schema:
            type: object
            items:
                    $ref: '#/components/schemas/Account'
     security:
      - OAuth2: [admin]                
     responses:
       200:
        description: Creates a Merchant 
        content:
          application.json:
              schema:
                type: object
                items:
                    $ref: '#/components/schemas/Account'
  /{merchantId}/accounts/{accountId}/link:
    description: Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.
    post: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'The ID of the account that should be linked.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     requestBody:
      content:
        application.json:
          schema:
            type: object
            items:
                    $ref: '#/components/schemas/AccountsLinkRequest'
     security:
      - OAuth2: [admin]                
     responses:
       200:
        description: Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.
        content:
          application.json:
            schema:
              type: object
              properties:
                kind:
                  type: string
                  description: "Identifies what kind of resource this is. Value: the fixed string content#accountsLinkResponse."
  /{merchantId}/accounts/accounts.list:
    description: Lists the sub-accounts in your Merchant Center account.
    get: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. This must be a multi-client account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: maxResults  
        in: query 
        description: 'The maximum number of accounts to return in the response, used for paging.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: integer
      - name: pageToken  
        in: query 
        description: 'The token returned by the previous request.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: view  
        in: query 
        description: 'Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default value is "merchant".'
        required: true
        explode: false
        schema:
          type: string
          enum: [MERCHANT, CSS]
      - name: label  
        in: query 
        description: 'If view is set to "css", only return accounts that are assigned label with given ID.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: name  
        in: query 
        description: 'If set, only the accounts with the given name (case sensitive) will be returned.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     security:
      - OAuth2: [admin]        
     responses:
       200:
        description: Lists the sub-accounts 
        content:
          application.json:
            schema:
              type: object
              properties:
                nextPageToken:
                  type: string
                kind:
                  type: string
                resources:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account'
  /{merchantId}/accounts/{accountId}/listlinks:                  
    description: Returns the list of accounts linked to your Merchant Center account.
    get: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'The ID of the account for which to list links.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: maxResults  
        in: query 
        description: 'The maximum number of links to return in the response, used for pagination. The minimum allowed value is 5 results per page. If provided value is lower than 5, it will be automatically increased to 5.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: integer
      - name: pageToken  
        in: query 
        description: 'The token returned by the previous request.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     security:
      - OAuth2: [admin]        
     responses:
       200:
        description: Returns the list of accounts linked to your Merchant Center account. 
        content:
         application.json:
            schema:
              type: object
              properties:
                nextPageToken:
                  type: string
                links:
                  type: array
                  items:
                    $ref: '#/components/schemas/LinkedAccount'
                kind:
                  type: string                 
  /{merchantId}/accounts/{accountId}/requestphoneverification:                
    description: Request verification code to start phone verification.
    post: 
     parameters:
      - name: merchantId
        in: path
        description: 'Required. The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'Required. The ID of the account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     requestBody:
      content:
        application.json:
          schema:
            type: object
            properties:
              phoneRegionCode:
                type: string
                description: "Required. Two letter country code for the phone number, for example CA for Canadian numbers. See the ISO 3166-1 alpha-2 officially assigned codes."
              phoneNumber: 
                type: string
                description: Phone number to be verified.
              phoneVerificationMethod:
                type: string
                enum: [PHONE_VERIFICATION_METHOD_UNSPECIFIED, SMS, PHONE_CALL]
                description: Verification method to receive verification code.
              languageCode:
                type: string
                description: Language code IETF BCP 47 syntax (for example, en-US). Language code is used to provide localized SMS and PHONE_CALL. Default language used is en-US if not provided.
     security:
      - OAuth2: [admin]            
     responses:
       200:
        description: Request verification code 
        content:
          application.json:
            schema:
              type: object
              properties:
                verificationId:
                  type: string
                  description: The verification ID to use in subsequent calls to verifyphonenumber.
  /{merchantId}/accounts/{accountId}:                
    description: Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.
    put: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'The ID of the account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     requestBody:
      content:
        application.json:
          schema:
            type: object
            items:
              $ref: '#/components/schemas/Account'
     security:
        - OAuth2: [admin]          
     responses:
       200:
        description: Updates a Merchant Center account.  
        content:
          application.json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/Account'
  /{merchantId}/accounts/{accountId}/updatelabels:              
    description: Updates labels that are assigned to the Merchant Center account by CSS user.
    post: 
     parameters:
      - name: merchantId
        in: path
        description: 'The ID of the managing account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'The ID of the account whose labels are updated.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     requestBody:
      content:
        application.json:
          schema:
            type: object
            items:
              $ref: '#/components/schemas/AccountsUpdateLabelsRequest'
     security:
        - OAuth2: [admin]          
     responses:
       200:
        description: Updates labels that are assigned to the Merchant Center account by CSS user. 
        content:
          application.json:
            schema:
              type: object
              properties:
                kind:
                  type: string
                  description: "Identifies what kind of resource this is. Value: the fixed string 'content#accountsUpdateLabelsResponse'."
  /{merchantId}/accounts/{accountId}/verifyphonenumber:
    description: Validates verification code to verify phone number for the account. If successful this will overwrite the value of accounts.businessinformation.phoneNumber. Only verified phone number will replace an existing verified phone number.
    post: 
     parameters:
      - name: merchantId
        in: path
        description: 'Required. The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: accountId  
        in: path
        description: 'Required. The ID of the account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     requestBody:
      content:
        application.json:
          schema:
            type: object
            properties:
              verificationId:
                type: string
                description: "The verification ID returned by requestphoneverification."
              verificationCode: 
                type: string
                description: The verification code that was sent to the phone number for validation.
              phoneVerificationMethod:
                type: string
                enum: [PHONE_VERIFICATION_METHOD_UNSPECIFIED, SMS, PHONE_CALL]
                description: Verification method used to receive verification code.
     security:
        - OAuth2: [admin]            
     responses:
       200:
        description: Validates verification code to verify phone number for the account.  
        content:
          application.json:
            schema:
              type: object
              properties:
                verifiedPhoneNumber:
                  type: string
                  description: Verified phone number if verification is successful. This phone number can only be replaced by another verified phone number.
components:
  schemas:
      AccountIdentifier:
        type: object
        properties:
          aggregatorId:
            type: string
            description: The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).
          merchantId:
            type: string
            description: The merchant account ID, set for individual accounts and subaccounts.
      AccountsCustomBatchResponseEntry:
        type: object
        properties:
          batchId:
            type: integer
            description: The ID of the request entry this entry responds to.
          kind: 
            type: string
            description: "Identifies what kind of resource this is. Value: the fixed string  content#accountsCustomBatchResponseEntry"
          account:
            type: object
            description: "The retrieved, created, or updated account. Not defined if the method was delete, claimwebsite or link"
            items:
                $ref: '#/components/schemas/Account'
          errors:
            type: object
            description: A list of errors defined if and only if the request failed.
            items:
                $ref: '#/components/schemas/Errors'
      AccountsCustomBatchRequest:
        type: object
        properties:
          entries:
            type: array
            description: The request entries to be processed in the batch.
            items:
                $ref: '#/components/schemas/AccountsCustomBatchRequestEntry'
      AccountsCustomBatchRequestEntry:
        type: object
        properties:
          batchId:
            type: integer
            description: An entry ID, unique within the batch request.
          merchantId:
            type: string 
            description: The ID of the managing account.
          method:
            type: string
            description: "The method of the batch entry. Acceptable values are: claimWebsite, delete, get, insert, link, update"
          accountId:
            type: string 
            description: The ID of the targeted account. Only defined if the method is not insert.
          account:
            type: object
            description: The account to create or update. Only defined if the method is insert or update.
            items:
                $ref: '#/components/schemas/Account'
          overwrite:
            type: boolean
            description: Only applicable if the method is claimwebsite. Indicates whether or not to take the claim from another account in case there is a conflict.
          force:
            type: boolean
            description: Whether the account should be deleted if the account has offers. Only applicable if the method is delete.
          linkRequest:
            type: object
            description: Details about the link request.
            items:
                $ref: '#/components/schemas/AccountsCustomBatchRequestEntryLinkRequest'
          view:
            type: string 
            description: "Controls which fields are visible. Only applicable if the method is 'get'."
          labelIds:
            type: array
            description: Label IDs for the 'updatelabels' request.
            items:
                type: string
      AccountsCustomBatchRequestEntryLinkRequest:
        type: object
        properties:
          action:
            type: string
            description: "Action to perform for this link. The request action is only available to select merchants. Acceptable values are: approve, remove, request"
          linkedAccountId:
            type: string
            description: The ID of the linked account.
          linkType:
            type: string
            description: "Type of the link between the two accounts. Acceptable values are: channelPartner, eCommercePlatform, paymentServiceProvider"
          services:
            type: array
            description: "Provided services. Acceptable values are: 'shoppingAdsProductManagement' 'shoppingActionsProductManagement' 'shoppingActionsOrderManagement' paymentProcessing"
            items:
                type: string
      Errors:
        type: object
        properties:
          errors:
            type: array
            description: A list of errors.
            items:
                 $ref: '#/components/schemas/Error'
          code:
            type: integer
            description: The HTTP status of the first error in errors.
          message:
            type: string
            description: The message of the first error in errors.
      Error:
        type: object
        properties:
          domain:
            type: string
            description: The domain of the error.
          reason:
            type: string
            description: The error code.
          message:
            type: string
            description: A description of the error.
      Account:
        type: object
        properties:
          name:
            type: string
            description: Required. Display name for the account.
          kind:
            type: string
            description: "Identifies what kind of resource this is. Value: the fixed string ,content#account. "
          websiteUrl:
            type: string
            description: The merchant's website.
          adultContent: 
            type: boolean
            description: Indicates whether the merchant sells adult content.
          sellerId: 
            type: string
            description: Client-specific, locally-unique, internal ID for the child account.
          users:
            type: array
            description: Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
            items:
                $ref: '#/components/schemas/AccountUser'
          id: 
            type: string
            description: "Required for update. Merchant Center account ID."
          youtubeChannelLinks:
            type: array
            description: "Linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status active to the list. It will remain in a pending state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list."
            items:
                $ref: '#/components/schemas/AccountYouTubeChannelLink'
          googleMyBusinessLink:
            type: object
            description: "The Business Profile which is linked or in the process of being linked with the Merchant Center account"
            items:
                $ref: '#/components/schemas/AccountGoogleMyBusinessLink'
          businessInformation:
            type: object
            description: "The business information of the account."
            items:
                $ref: '#/components/schemas/AccountBusinessInformation'
          automaticImprovements:
            type: object
            description: "The automatic improvements of the account can be used to automatically update items, improve images and shipping. Each section inside AutomaticImprovements is updated separately."
            items:
                $ref: '#/components/schemas/AccountAutomaticImprovements'
          adsLinks:
            type: array
            description: "Linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status active to the list. It will remain in a pending state until approved or rejected either in the Ads interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list."
            items:
                $ref: '#/components/schemas/AccountAdsLink'
          cssId:
            type: string
            description: ID of CSS the account belongs to.
          labelIds:
             type: array
             description: "Manually created label IDs that are assigned to the account by CSS."
             items: 
                type: string
          accountManagement:
            type: string
            description: "string Output only. How the account is managed. Acceptable values are: manual, automatic"
          automaticLabelIds:
            type: array
            description: "Automatically created label IDs that are assigned to the account by CSS Center."
            items:
                type: string
      AccountUser:
        type: object
        properties:
          emailAddress:
            type: string
            description: User's email address.
          admin:
            type: boolean
            description: Whether user is an admin.
          orderManager:
            type: boolean
            description: Whether user is an order manager.
          paymentsManager: 
            type: boolean
            description: Whether user can manage payment settings.
          paymentsAnalyst: 
            type: boolean
            description: Whether user can access payment statements.
      AccountYouTubeChannelLink:
        type: object
        properties: 
          channelId: 
            type: string
            description: Channel ID.
          status: 
            type: string
            description: "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either active if it was approved in YT Creator Studio or pending if it's pending approval. Upon insertion, it represents the intended status of the link. Re-uploading a link with status active when it's still pending or with status pending when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending."
      AccountGoogleMyBusinessLink:
        type: object
        properties:
          gmbEmail:
            type: string
            description: "The Business Profile email address of a specific account within a Business Profile. A sample account within a Business Profile could be a business account with set of locations, managed under the Business Profile."
          status: 
            type: string
            description: "Status of the link between this Merchant Center account and the Business Profile. Acceptable values are: active, pending"
          gmbAccountId:
            type: string
            description: "The ID of the Business Profile. If this is provided, then gmbEmail is ignored. The value of this field should match the accountId used by the Business Profile API."
      AccountBusinessInformation:
        type: object
        properties:
          address: 
            type: object 
            description: The address of the business.
            items:
                $ref: '#/components/schemas/AccountAddress'
          phoneNumber: 
            type: string
            description: "The phone number of the business. This can only be updated if a verified phone number is not already set. To replace a verified phone number use the Accounts.requestphoneverification and Accounts.verifyphonenumber."
          phoneVerificationStatus:
            type: string
            description: "Verification status of the phone number of the business. This status is read only and can be updated only by successful phone verification. Acceptable values are: verified, unverified"
          customerService:
            type: object 
            description: The customer service information of the business.
            items:
                $ref: '#/components/schemas/AccountCustomerService'
          koreanBusinessRegistrationNumber:
            type: string
            description: "The 10-digit Korean business registration number separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set."
      AccountAddress:
        type: object
        properties:
          streetAddress:
            type: string
            description: Street-level part of the address.
          locality: 
            type: string
            description: "City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs)."
          region:
            type: string
            description: "string Top-level administrative subdivision of the country. For example, a state like California CA or a province like Quebec QC"
          postalCode:
            type: string
            description: Postal code or ZIP (for example, "94043").
          country:
            type: string
            description: CLDR country code (for example, "US"). All MCA sub-accounts inherit the country of their parent MCA by default, however the country can be updated for individual sub-accounts.
      AccountCustomerService:
        type: object
        properties:
          url: 
            type: string
            description: Customer service URL.
          email: 
            type: string
            description: Customer service email.
          phoneNumber: 
            type: string
            description: Customer service phone number.
      AccountAutomaticImprovements:
        type: object 
        properties:
          itemUpdates:
            type: object
            description: "Turning on item updates allows Google to automatically update items for you. When item updates are on, Google uses the structured data markup on the website and advanced data extractors to update the price and availability of the items. When the item updates are off, items with mismatched data aren't shown. This field is only updated (cleared) if provided."
            items:
                $ref: '#/components/schemas/AccountItemUpdates'
          imageImprovements:
            type: object 
            description: "This improvement will attempt to automatically correct submitted images if they don't meet the image requirements, for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: Automatic image improvements This field is only updated (cleared) if provided."
            items:
                $ref: '#/components/schemas/AccountImageImprovements'
          shippingImprovements:
            type: object
            description: "Not available for MCAs accounts. By turning on automatic shipping improvements, you are allowing Google to improve the accuracy of your delivery times shown to shoppers using Google. More accurate delivery times, especially when faster, typically lead to better conversion rates. Google will improve your estimated delivery times based on various factors: Delivery address of an order Current handling time and shipping time settings Estimated weekdays or business days Parcel tracking data This field is only updated (cleared) if provided."
            items:
                $ref: '#/components/schemas/AccountShippingImprovements'
      AccountItemUpdates:
        type: object
        properties:
          accountItemUpdatesSettings:
            type: object 
            description: "Determines which attributes of the items should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator."
            items:
                $ref: '#/components/schemas/AccountItemUpdatesSettings'
          effectiveAllowPriceUpdates:
            type: boolean
            description: "Output only. The effective value of allowPriceUpdates. If accountItemUpdatesSettings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
          effectiveAllowAvailabilityUpdates:
            type: boolean
            description: "Output only. The effective value of allowAvailabilityUpdates. If accountItemUpdatesSettings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
          effectiveAllowStrictAvailabilityUpdates:
            type: boolean
            description: "Output only. The effective value of allowStrictAvailabilityUpdates. If accountItemUpdatesSettings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
          effectiveAllowConditionUpdates:
            type: boolean
            description: "Output only. The effective value of allowConditionUpdates. If accountItemUpdatesSettings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
      AccountItemUpdatesSettings:
        type: object
        properties:
          allowPriceUpdates:
            type: boolean
            description: "If price updates are enabled, Google always updates the active price with the crawled information."
          allowAvailabilityUpdates:
            type: boolean
            description: "If availability updates are enabled, any previous availability values get overwritten if Google finds an out-of-stock annotation on the offer's page. If additionally allowAvailabilityUpdates field is set to true, values get overwritten if Google finds an in-stock annotation on the offer’s page."
          allowStrictAvailabilityUpdates:
            type: boolean
            description: "If allowAvailabilityUpdates is enabled, items are automatically updated in all your Shopping target countries. By default, availability updates will only be applied to items that are 'out of stock' on your website but 'in stock' on Shopping. Set this to true to also update items that are 'in stock' on your website, but 'out of stock' on Google Shopping. In order for this field to have an effect, you must also allow availability updates."
          allowConditionUpdates:
            type: boolean
            description: "If condition updates are enabled, Google always updates item condition with the condition detected from the details of your product."
      AccountImageImprovements:
        type: object
        properties:
          accountImageImprovementsSettings:
            type: object 
            description: "Determines how the images should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator."
            items:
                $ref: '#/components/schemas/AccountImageImprovementsSettings'
          effectiveAllowAutomaticImageImprovements:
            type: boolean
            description: "Output only. The effective value of allowAutomaticImageImprovements. If accountImageImprovementsSettings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only."
      AccountImageImprovementsSettings:
        type: object
        properties:
          allowAutomaticImageImprovements:
            type: boolean
            description: Enables automatic image improvements.
      AccountShippingImprovements:
        type: object
        properties:
          allowShippingImprovements:
            type: boolean
            description: Enables automatic shipping improvements.
      AccountAdsLink:
        type: object 
        properties:
          adsId:
            type: string
            description: Customer ID of the Ads account.
          status:
            type: string
            description: "Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either active if it was approved in Google Ads or pending if it's pending approval. Upon insertion, it represents the intended status of the link. Re-uploading a link with status active when it's still pending or with status pending when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: active pending"
      AccountsLinkRequest:
        type: object 
        properties:
          action:
            type: string
            description: "Action to perform for this link. The request action is only available to select merchants.Acceptable values are: approve, remove, request."
          linkedAccountId:
            type: string
            description: The ID of the linked account.
          linkType:
            type: string
            description: "Type of the link between the two accounts. Acceptable values are: channelPartner, eCommercePlatform, paymentServiceProvider"
          services:
            type: array
            description: "Acceptable values are: shoppingAdsProductManagement, shoppingActionsProductManagement, shoppingActionsOrderManagement paymentProcessing"
            items:
              type: string
          paymentServiceProviderLinkInfo:
            type: object
            description: Additional information required for paymentServiceProvider link type.
            items:
                $ref: '#/components/schemas/PaymentServiceProviderLinkInfo'
          eCommercePlatformLinkInfo:
            type: object
            description: Additional information required for eCommercePlatform link type.
            items: 
                $ref: '#/components/schemas/ECommercePlatformLinkInfo'
      PaymentServiceProviderLinkInfo:
        type: object
        properties:
          externalAccountId:
            type: string
            description: The id used by the third party service provider to identify the merchant.
          externalAccountBusinessCountry:
            type: string
            description: "The business country of the merchant account as identified by the third party service provider."
      ECommercePlatformLinkInfo:
            type: string 
            properties:
              externalAccountId:
                type: string 
                description: The id used by the third party service provider to identify the merchant
      LinkedAccount:
        type: object 
        properties:
          linkedAccountId:
            type: string
            description: The ID of the linked account.
          services:
            type: array
            description: accounts.list of provided services.
            items:
                $ref: '#/components/schemas/LinkService'
      LinkService:
        type: object
        properties:
          service:
            type: string
            description: "Service provided to or by the linked account. Acceptable values are: shoppingActionsOrderManagement, shoppingActionsProductManagement, shoppingAdsProductManagement, paymentProcessing"
          status:
              type: string
              description: "Status of the link Acceptable values are: active, inactive, pending"
      AccountsUpdateLabelsRequest:
        type: object
        properties:
          labelIds: 
            type: array
            description: The IDs of labels that should be assigned to the account.
            items:
              type: string
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations