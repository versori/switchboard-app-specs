openapi: 3.0.1
info: 
  title: Collection Status API For Google Shopping 
  description: The collection status message..
  contact:
    name: Collection Status APi 
    url: https://developers.google.com/shopping-content/reference/rest/v2.1/collectionstatuses
  version: v 1.0.0
servers: 
  - url:  https://shoppingcontent.googleapis.com/content/v2.1
paths: 
  /{merchantId}/collectionstatuses/{collectionId}:
    description: Gets the status of a collection from your Merchant Center account.
    get:
     parameters:
      - name: merchantId
        in: path
        description: 'Required. The ID of the account that contains the collection. This account cannot be a multi-client account.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: collectionId
        in: path
        description: 'Required. The collectionId of the collection. CollectionId is the same as the REST ID of the collection.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     security:
      - OAuth2: [admin]
     responses:
       200:
        description: Gets the status of a collection from your Merchant Center account. 
        content:
          application.json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/CollectionStatus'
  /{merchantId}/collectionstatuses:
    description: Deletes a collection from your Merchant Center account.
    get:
     parameters:
      - name: merchantId
        in: path
        description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
      - name: pageSize  
        in: query
        description: 'The maximum number of collection statuses to return in the response, used for paging. Defaults to 50; values above 1000 will be coerced to 1000.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: integer
      - name: pageToken  
        in: query
        description: 'Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token.'
        required: true
        explode: false
        schema:
          type: object
          items:
            type: string
     security:
      - OAuth2: [admin]
     responses:
       200:
        description: Deletes a collection from your Merchant Center account.
        content:
          application.json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    description: The collectionstatuses listed.
                    items:
                      $ref: '#/components/schemas/CollectionStatus'
                  nextPageToken:
                    type: string
                    description: A token, which can be sent as pageToken to retrieve the next page. If this field is omitted, there are no subsequent pages.
components:
  schemas:
      CollectionStatus:
        type: object
        properties:
          id:
            type: string
            description: Required. The ID of the collection for which status is reported.
          destinationStatuses:
            type: array
            description: The intended destinations for the collection.
            items:
              $ref: '#/components/schemas/DestinationStatus'
          creationDate:
            type: string 
            description: "Date on which the collection has been created in ISO 8601 format: Date, time, and offset, e.g. '2020-01-02T09:00:00+01:00' or '2020-01-02T09:00:00Z'"
          lastUpdateDate:
            type: string
            description: "Date on which the collection has been last updated in ISO 8601 format: Date, time, and offset, e.g. '2020-01-02T09:00:00+01:00/ or '2020-01-02T09:00:00Z'"
          collectionLevelIssuses:
            type: array 
            description: "A list of all issues associated with the collection."
            items:
              $ref: '#/components/schemas/ItemLevelIssue'
      DestinationStatus:
        type: object
        properties:
          destination:
            type: string 
            description: The name of the destination
          status:
            type: string
            description: The status for the specified destination.
      ItemLevelIssue:
        type: object
        properties:
          code:
            type: string 
            description: The error code of the issue.
          servability:
            type: string 
            description: How this issue affects the serving of the collection.
          resolution:
            type: string 
            description: Whether the issue can be resolved by the merchant.
          attributeName:
            type: string 
            description: The attribute's name, if the issue is caused by a single attribute.
          destination:
            type: string
            description: The destination the issue applies to.
          description:
            type: string
            description: A short issue description in English.
          detail:
            type: string
            description: A detailed issue description in English.
          documentation:
            type: string
            description: The URL of a web page to help with resolving this issue.
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations