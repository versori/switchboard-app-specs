openapi: 3.0.1
info:
  title: BetterCommerce API 
  version: v2
  contact:
    name:  BetterCommerce APi  
    url: https://api20.bettercommerce.io/swagger/ui/index
servers:
- url: https://api20.bettercommerce.io/
paths:
  /api/v2/commerce/address/{customerId}:
    get:
      tags:
      - Address
      summary: Get complete customer address book
      operationId: AddressGetAll
      parameters:
      - name: customerId
        in: path
        description: (Guid) Customer/User id
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelListResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                - customerId: 2ecee944-dd70-458c-83bb-0c04b1d4b79d
                  isDefault: false
                  isDefaultDelivery: false
                  isDefaultForSubscription: false
                  isDefaultBilling: false
                  id: 0
                  title: Mr.
                  firstName: David
                  lastName: Smith
                  address1: Address Line 1
                  address2: Address Line 2
                  address3: Address Line 3
                  city: London
                  state: London
                  country: United Kingdom
                  countryCode: UK
                  postCode: XX55YY
                  phoneNo: "9999999999"
                  mobileNo: "888888888"
                  companyName: My Company
                - customerId: 257573c4-1f36-440a-a95d-c18bb6667467
                  isDefault: false
                  isDefaultDelivery: false
                  isDefaultForSubscription: false
                  isDefaultBilling: false
                  id: 0
                  title: Mr.
                  firstName: Mariya
                  lastName: John
                  address1: Add Line 1
                  address2: Line 2
                  address3: Line 3
                  city: London
                  state: London
                  country: United Kingdom
                  countryCode: UK
                  postCode: XX55YY
                  phoneNo: "9999999999"
                  mobileNo: "888888888"
                  companyName: My Company
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelListResponseModel'
  /api/v2/commerce/address/{customerId}/{id}:
    get:
      tags:
      - Address
      summary: Get a specific address record
      operationId: AddressGetById
      parameters:
      - name: customerId
        in: path
        description: (Guid) Customer/User id
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: (Numeric) address id
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  customerId: 9de93f29-626a-4b68-83e2-2e75b180bba6
                  isDefault: false
                  isDefaultDelivery: false
                  isDefaultForSubscription: false
                  isDefaultBilling: false
                  id: 0
                  title: Mr.
                  firstName: David
                  lastName: Smith
                  address1: Address Line 1
                  address2: Address Line 2
                  address3: Address Line 3
                  city: London
                  state: London
                  country: United Kingdom
                  countryCode: UK
                  postCode: XX55YY
                  phoneNo: "9999999999"
                  mobileNo: "888888888"
                  companyName: My Company
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModelResponseModel'
  /api/v2/commerce/address/create:
    post:
      tags:
      - Address
      summary: Create new address
      operationId: AddressCreate
      requestBody:
        description: Address model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: Success
                messageCode: "1000"
                result:
                  recordId: 00000000-0000-0000-0000-000000000000
                  id: 0
                  isValid: false
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: address
  /api/v2/commerce/address/{id}/update:
    put:
      tags:
      - Address
      summary: Update an address
      operationId: AddressUpdate
      parameters:
      - name: id
        in: path
        description: (Numeric) Address Id
        required: true
        schema:
          type: string
      requestBody:
        description: Updated address model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: Success
                messageCode: "1000"
                result:
                  recordId: 00000000-0000-0000-0000-000000000000
                  id: 0
                  isValid: false
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: address
  /api/v2/commerce/address/{customerId}/{id}/delete:
    delete:
      tags:
      - Address
      summary: Delete an address
      operationId: AddressDelete
      parameters:
      - name: customerId
        in: path
        description: (Guid) Customer/user id who is the owner of the address to be
          deleted. This is required to ensure data integrity.
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: (Numeric) addressId to be deleted.
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/address/{customerId}/{id}/setdefault:
    put:
      tags:
      - Address
      summary: Set the default billing/delivery address for Standard or Subscription
        order.
      operationId: AddressChangeDefault
      parameters:
      - name: customerId
        in: path
        description: Customer / UserId for whom the address is to be updated
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: (Numeric) Id of the address
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: 1=Standard Basket Billing Address, 2=Subscription Basket Address
        schema:
          type: integer
          format: int32
      - name: isDefaultBilling
        in: query
        description: True if this address to be set as default billing address, else
          false
        schema:
          type: boolean
      - name: isDefaultDelivery
        in: query
        description: True if this address to be set as default delivery address, else
          false
        schema:
          type: boolean
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/address/{customerId}/removedefault:
    put:
      tags:
      - Address
      summary: Remove all the 'defaults' from address for a customerId.
      operationId: AddressNoDefault
      parameters:
      - name: customerId
        in: path
        description: Customer / UserId for whom the address is to be updated
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/b2b/{userId}/quotes:
    get:
      tags:
      - B2B
      summary: Get list of quotes
      operationId: B2BGetUserQuotes
      parameters:
      - name: userId
        in: path
        description: UserId
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.QuoteInfoListResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                result:
                - id: 00000000-0000-0000-0000-000000000000
                  quoteId: 00000000-0000-0000-0000-000000000000
                  companyId: 00000000-0000-0000-0000-000000000000
                  companyName: Company Name
                  quoteName: My Quote
                  contactId: 00000000-0000-0000-0000-000000000000
                  purchaseOrderNo: PO00001
                  validUntil: 0001-01-01T00:00:00
                  validDays: 3
                  status: 1
                  customQuoteNo: JAN2022
                  shippingMethodCode: STD
                  shippingMethodName: Standerd
                  shippingCost: 10.99
                  email: myemail@example.com
                  customerId: a31116d8-1174-4995-8256-9f0c4c42b7c8
                  shippingAddress:
                    addressType: 0
                    userId: 00000000-0000-0000-0000-000000000000
                    title: Mr.
                    firstName: David
                    lastName: Smith
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    postCode: XX55YY
                    phoneNo: "9999999999"
                    isDefaultDelivery: false
                    isDefaultBilling: false
                    isDefault: false
                    isDefaultForSubscription: false
                    companyName: My Company
                    id: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                    orgId: 00000000-0000-0000-0000-000000000000
                    branchId: 00000000-0000-0000-0000-000000000000
                    domainId: 00000000-0000-0000-0000-000000000000
                    totalRecord: 0
                    currentPage: 1
                    pageSize: 0
                  billingAddress:
                    addressType: 0
                    userId: 00000000-0000-0000-0000-000000000000
                    title: Mr.
                    firstName: David
                    lastName: Smith
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    postCode: XX55YY
                    phoneNo: "9999999999"
                    isDefaultDelivery: false
                    isDefaultBilling: false
                    isDefault: false
                    isDefaultForSubscription: false
                    companyName: My Company
                    id: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                    orgId: 00000000-0000-0000-0000-000000000000
                    branchId: 00000000-0000-0000-0000-000000000000
                    domainId: 00000000-0000-0000-0000-000000000000
                    totalRecord: 0
                    currentPage: 1
                    pageSize: 0
                  userName: myemail@example.com
                  createdByAdmin: false
                  orderNo: 100001
                  orderId: 00000000-0000-0000-0000-000000000000
                  orderStatus: 1
                  isQuoteExpired: false
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.QuoteInfoListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.QuoteInfoListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.QuoteInfoListResponseModel'
  /api/v2/commerce/b2b/companies:
    get:
      tags:
      - B2B
      summary: Get list of companies
      operationId: B2BGetCompanies
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyNameListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyNameListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyNameListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyNameListResponseModel'
  /api/v2/commerce/b2b/{companyId}/users:
    get:
      tags:
      - B2B
      summary: Get all users linked to a company
      operationId: B2BGetLinkedUsers
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyUser'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyUser'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyUser'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyUser'
  /api/v2/commerce/b2b/{userId}/company:
    get:
      tags:
      - B2B
      summary: Get the company details by UserId
      operationId: B2BGetCompanyDetailByUserId
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.B2B.CompanyModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.B2B.CompanyModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.B2B.CompanyModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.B2B.CompanyModelResponseModel'
  /api/v2/commerce/b2b/quote/save:
    post:
      tags:
      - B2B
      operationId: SaveQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.QuoteModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.QuoteModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.QuoteModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.QuoteModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.QuoteModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Common.BoolResponseResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Common.BoolResponseResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Common.BoolResponseResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Common.BoolResponseResponseModel'
      x-codegen-request-body-name: quote
  /api/v2/commerce/b2b/create:
    post:
      tags:
      - B2B
      operationId: CustomerRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: value
  /api/v2/commerce/b2b/{id}/update:
    put:
      tags:
      - B2B
      operationId: CustomerUpdate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: value
  /api/v2/commerce/basket/{id}:
    get:
      tags:
      - Basket
      summary: Get basket based on id
      operationId: BasketGetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModelWithSnippets'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: d167b38a-cd08-4b85-8760-bc8cc9a34e0e
                  currencySymbol: €
                  currencyCode: EUR
                  userId: cd05a0d7-18a8-463f-b9a1-84e063d6ebb7
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: 8be85b27-d2a6-406d-93ea-65ed61337b61
                      categoryName: Shirt
                      parentCategoryId: b5473901-631d-475a-915b-7e2969f666b2
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.5982935Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                snippets: []
                slugType: 1
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModelWithSnippets'
  /api/v2/commerce/basket/{id}/campaign:
    put:
      tags:
      - Basket
      summary: Update campaign code for basket
      operationId: BasketUpdateCampaign
      parameters:
      - name: id
        in: path
        description: basketId
        required: true
        schema:
          type: string
      - name: campaignCode
        in: query
        description: campaign code
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  customerId: 38eaecfe-123e-46ee-9c0f-d0f3f360aa91
                  isDefault: false
                  isDefaultDelivery: false
                  isDefaultForSubscription: false
                  isDefaultBilling: false
                  id: 0
                  title: Mr.
                  firstName: David
                  lastName: Smith
                  address1: Address Line 1
                  address2: Address Line 2
                  address3: Address Line 3
                  city: London
                  state: London
                  country: United Kingdom
                  countryCode: UK
                  postCode: XX55YY
                  phoneNo: "9999999999"
                  mobileNo: "888888888"
                  companyName: My Company
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
  /api/v2/commerce/basket/{id}/custom-info:
    put:
      tags:
      - Basket
      summary: Update custom info fields for basket
      operationId: BasketUpdateCustomInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 14e4199b-f272-4106-9ce0-555fa3c0ef52
                  currencySymbol: €
                  currencyCode: EUR
                  userId: dbb74991-e996-49da-9dcd-750a214930f1
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: e705691d-efd3-4f24-99ee-cf9812be25d0
                      categoryName: Shirt
                      parentCategoryId: 635a0c31-f397-4343-85d0-dbcbfd3bf2fc
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6139189Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
      x-codegen-request-body-name: info
  /api/v2/commerce/basket/{id}/subscription/{productId}:
    put:
      tags:
      - Basket
      summary: Update item specific subscription info
      operationId: BasketUpdateSubscriptionInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: productId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionUserSetting'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionUserSetting'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionUserSetting'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionUserSetting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionUserSetting'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 9c14b896-6137-4f1a-8e9c-941654e71137
                  currencySymbol: €
                  currencyCode: EUR
                  userId: 404fa0e4-89b6-4aa5-a639-94f6beca54bc
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: ee9823ea-b591-4ee7-9e09-158552e30010
                      categoryName: Shirt
                      parentCategoryId: 42c55f0e-8ff4-4fec-9164-f1d771361d7e
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6139189Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
      x-codegen-request-body-name: userSetting
  /api/v2/commerce/basket/{id}/delete:
    delete:
      tags:
      - Basket
      summary: Delete basket
      operationId: BasketDelete
      parameters:
      - name: basketId
        in: query
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/basket/{id}/related-products:
    get:
      tags:
      - Basket
      summary: Get related products based on items in basket.
      operationId: BasketGetRelatedProducts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelIListResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                - isFeatured: false
                  uomValue: 0
                  displayOrder: 0
                  isDiscontinued: false
                  componentsInStock: false
                  subscriptionEnabled: false
                  itemType: 0
                  subscriptionPlanType: 0
                  currentStock: 0
                  fulfilFromWarehouse: false
                  fulfilFromStore: false
                  fulfilFromSupplier: false
                  trending: false
                  bestSeller: false
                  onSale: false
                  newLaunch: false
                  exclusive: false
                  isVisible: false
                  isActive: false
                  isMasterStock: false
                  hasVariant: false
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelIListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelIListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelIListResponseModel'
  /api/v2/commerce/basket/{id}/merge:
    put:
      tags:
      - Basket
      summary: Merge 2 different baskets into one basket
      operationId: BasketMerge
      parameters:
      - name: id
        in: path
        description: target basketId
        required: true
        schema:
          type: string
      - name: sourceBasketId
        in: query
        description: source basketId
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 83871bb2-ea95-4d7d-bbc4-2cc71a8cc8d7
                  currencySymbol: €
                  currencyCode: EUR
                  userId: 47072a21-c789-49e7-bafc-bde21ad125d7
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: 2058276d-ea25-4787-81b1-4d5566db0920
                      categoryName: Shirt
                      parentCategoryId: 8dae8330-c143-4c18-acac-2ad694d69446
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6295437Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
  /api/v2/commerce/basket/{id}/po:
    put:
      tags:
      - Basket
      summary: Update PO# in basket
      operationId: BasketUpdatePOReference
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: poReference
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: Success
                messageCode: "1000"
                result:
                  recordId: 00000000-0000-0000-0000-000000000000
                  id: 0
                  isValid: false
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
  /api/v2/commerce/basket/{id}/user:
    put:
      tags:
      - Basket
      summary: Update userId in basket
      operationId: BasketUpdateUser
      parameters:
      - name: id
        in: path
        description: basketid
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: userId
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 0f1b9bb0-ec37-44fa-9720-b922656335a6
                  currencySymbol: €
                  currencyCode: EUR
                  userId: 62b6646e-b2ed-4eda-87b2-7088aa28f510
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: bea7cae3-9b54-4895-96bb-8cc4d1921143
                      categoryName: Shirt
                      parentCategoryId: 58f234f2-70e2-4925-b627-4d23d40793c0
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6295437Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
  /api/v2/commerce/basket/user/{userId}/all:
    get:
      tags:
      - Basket
      summary: Gets all user baskets
      operationId: BasketGetAllForUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketBasicModelListResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                - id: 0f643370-280f-48a9-a4bc-8655e128ad33
                  currencySymbol: €
                  currencyCode: EUR
                  userId: e633ac6d-22c1-461f-879f-dd86ab1b0c01
                  userEmail: myemail@example.com
                  shippingMethodId: STD
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    slug: /product/SKU-0001
                    shortDescription: Polo Shirt Description
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    isSubscription: false
                    isMembership: false
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  isQuote: false
                  quoteStatus: 0
                  postCode: XX55YY
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketBasicModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketBasicModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketBasicModelListResponseModel'
  /api/v2/commerce/basket/{id}/items/add:
    put:
      tags:
      - Basket
      summary: Add item to basket
      operationId: BasketAddItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketAddModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketAddModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketAddModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketAddModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketAddModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 912876ee-f088-46cf-8f17-f08e094e2b7d
                  currencySymbol: €
                  currencyCode: EUR
                  userId: e5457936-dcf8-40b5-8978-daf0b593cc2d
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: b91238f7-878c-4b26-bf86-4d2d9bc14147
                      categoryName: Shirt
                      parentCategoryId: 509a8786-22f4-4b83-b13a-757ca404922a
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6295437Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
      x-codegen-request-body-name: basketLine
  /api/v2/commerce/basket/{id}/items/add-bulk:
    put:
      tags:
      - Basket
      summary: Bulk add items to basket. typically, used for adding personalisation
        / engraving item, 'buy look'
      operationId: BasketAddItemsBulk
      parameters:
      - name: id
        in: path
        description: id of basket
        required: true
        schema:
          type: string
      requestBody:
        description: items to be added
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BulkBasketItemAddModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BulkBasketItemAddModel'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BulkBasketItemAddModel'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BulkBasketItemAddModel'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BulkBasketItemAddModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 810f90d1-f9ca-40c6-90d2-c4ca0663a666
                  currencySymbol: €
                  currencyCode: EUR
                  userId: 23afa6f0-4700-4497-b2f7-7a734ba46fbd
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: b2f95a9e-892f-4b68-bdea-482f4c4bb8d8
                      categoryName: Shirt
                      parentCategoryId: d26ef48f-b53e-4c95-9294-e812d1a7e9ad
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6295437Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
        201:
          description: Created
          content: {}
      x-codegen-request-body-name: basketLine
  /api/v2/commerce/basket/{id}/items/{productId}/remove:
    delete:
      tags:
      - Basket
      summary: Remove item from basket
      operationId: BasketRemoveItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: productId
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 2ade3255-6368-4f3d-a474-b8a7e9e8dcdd
                  currencySymbol: €
                  currencyCode: EUR
                  userId: 9827a0a8-49b1-483e-ba3c-5e0d866e0001
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: d51f5bd9-d5a7-4ace-9dea-e4c48327c565
                      categoryName: Shirt
                      parentCategoryId: 423b75fc-b796-490b-9a0b-18aa2ba7cef6
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6295437Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
  /api/v2/commerce/basket/{id}/items/{productId}/{qty}:
    put:
      tags:
      - Basket
      summary: Update product qty in basket
      operationId: BasketUpdateProductQty
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: productId
        in: path
        required: true
        schema:
          type: string
      - name: qty
        in: path
        required: true
        schema:
          type: integer
          format: int32
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
              example:
                statusCode: 200
                status: OK
                errors: []
                success: true
                message: ""
                messageCode: ""
                result:
                  id: 65a8fde6-5ce5-4c0e-9751-f8ab96e5732a
                  currencySymbol: €
                  currencyCode: EUR
                  userId: 1e6996ad-7355-4c7b-8be9-fbc208fef96a
                  userEmail: myemail@example.com
                  grandTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  totalWithoutShipping:
                    currencySymbol: €
                    formatted:
                      withTax: €96.00000
                      withoutTax: €96.00000
                      tax: €.00000
                    raw:
                      withTax: 96
                      withoutTax: 96
                      tax: 0
                  shippingMethodId: STD
                  shippingCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €3.99000
                      withoutTax: €3.99000
                      tax: €.00000
                    raw:
                      withTax: 3.99
                      withoutTax: 3.99
                      tax: 0
                  subTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €99.99000
                      withoutTax: €99.99000
                      tax: €.00000
                    raw:
                      withTax: 99.99
                      withoutTax: 99.99
                      tax: 0
                  discount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  taxPercent: 0
                  additionalCharge:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  lineItems:
                  - id: "0"
                    stockCode: SKU-0001
                    name: Polo Shirt
                    productId: 1C5D16AB-0497-462D-A0D2-B2F8F67335A1
                    productIid: "0"
                    parentProductId: ""
                    brand: Tommy Hilfiger
                    subbrand: Tommy Hilfiger
                    price:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    subTotal:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    totalPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €96.00000
                        withoutTax: €96.00000
                        tax: €.00000
                      raw:
                        withTax: 96
                        withoutTax: 96
                        tax: 0
                    image: image1.jeg
                    qty: 4
                    displayOrder: 1
                    slug: /product/SKU-0001
                    itemType: 1
                    displayInBasket: false
                    categoryItems:
                    - categoryId: 8a17109f-6dbf-4bbf-92cd-345f9c796a46
                      categoryName: Shirt
                      parentCategoryId: 67ae785f-7562-4388-9fba-4ad66c578a61
                      parentCategoryName: Clothings
                    attributesJson: ""
                    customInfo1: cust info 1
                    customInfo2: cust info 2
                    customInfo3: cust info 3
                    customInfo4: cust info 4
                    customInfo5: cust info 5
                    discount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    additionalCharge:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    shortDescription: Polo Shirt Description
                    companyDiscount:
                      currencySymbol: €
                      formatted:
                        withTax: €.00000
                        withoutTax: €.00000
                        tax: €.00000
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    listPrice:
                      currencySymbol: €
                      formatted:
                        withTax: €24.00000
                        withoutTax: €24.00000
                        tax: €.00000
                      raw:
                        withTax: 24
                        withoutTax: 24
                        tax: 0
                    isSubscription: false
                    isMembership: false
                    subscriptionUserSettings:
                      subscriptionPlanId: 00000000-0000-0000-0000-000000000000
                      subscriptionTermId: 00000000-0000-0000-0000-000000000000
                      userPricingType: 0
                      authorizationAmount: 0
                    promotionsApplied:
                    - voucherCode: DISCOUNT15
                      discountPct: 0
                      discountAmt:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €.00000
                          withoutTax: €.00000
                          tax: €.00000
                        raw:
                          withTax: 0
                          withoutTax: 0
                          tax: 0
                      autoApply: false
                      promoCode: DISCOUNT15
                      name: Dummy Promo
                    isGiftWrapApplied: false
                    giftWrapId: 00000000-0000-0000-0000-000000000000
                    itemGroupId: 0
                    couponProvider: ""
                    isManualPrice: false
                    priceMatchReqId: 00000000-0000-0000-0000-000000000000
                    deliveryMessage: ' delivery message'
                    variantProducts:
                    - productId: 00000000-0000-0000-0000-000000000000
                      price:
                        minPrice: 0
                        minPriceWithoutTax: 0
                        maxPrice: 0
                        maxPriceWithoutTax: 0
                        currencyDecimalSeparator: "."
                        currencyDigitsAfterDecimal: 2
                        currencySymbol: €
                        formatted:
                          withTax: €15.99000
                          withoutTax: €15.99000
                          tax: €.00000
                        raw:
                          withTax: 15.99
                          withoutTax: 15.99
                          tax: 0
                      image: img.jpg
                      productName: Variant SKU
                      variantAttributes: []
                    variantProductsAttribute:
                    - fieldName: color
                      fieldCode: global.color
                      fieldValues: []
                    currentStock: 999
                  promotionsApplied:
                  - discountPct: 0
                    autoApply: false
                  shippingMethods:
                  - id: 00000000-0000-0000-0000-000000000000
                    enabled: false
                    displayOrder: 0
                    expectedDaysToDeliver: 0
                    expectedDeliveryDate: 0001-01-01T00:00:00
                    price:
                      currencySymbol: £
                      formatted:
                        withTax: £0.00
                        withoutTax: £0.00
                        tax: £0.00
                      raw:
                        withTax: 0
                        withoutTax: 0
                        tax: 0
                    isDefault: false
                    isNominated: false
                    type: 0
                    isPriceOnRequest: false
                    showRecomendation: false
                    isTaxable: false
                    shippingCostMethod: 0
                  created: 0001-01-01T00:00:00
                  lastUpdated: 0001-01-01T00:00:00
                  isQuote: false
                  quoteStatus: 0
                  customInfo1: cust info 1
                  customInfo2: cust info 2
                  customInfo3: cust info 3
                  customInfo4: cust info 4
                  customInfo5: cust info 5
                  shippingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  billingAddress:
                    id: 0
                    title: Mr.
                    firstName: FName
                    lastName: LName
                    address1: Address Line 1
                    address2: Address Line 2
                    address3: Address Line 3
                    city: London
                    state: London
                    country: United Kingdom
                    countryCode: UK
                    phoneNo: "9999999999"
                    companyName: My Company
                  postCode: XX55YY
                  maxDimensionMm: 0
                  companyDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  validUntil: 0001-01-01T00:00:00
                  isLocked: false
                  createdByAdmin: false
                  poNumber: PO00001
                  deliveryInstruction: Please read the give instructions
                  deliveryPlans:
                  - fulfilmentChannel: 0
                    deliveryType: 0
                    deliveryCenter:
                      recordId: 00000000-0000-0000-0000-000000000000
                      type: 0
                    items: []
                    shippingMethodId: 00000000-0000-0000-0000-000000000000
                    cost: 0
                    shippingSpeed: ' - '
                    deliveryDateTarget: 2022-06-30T10:59:09.6295437Z
                    deliveryDateActual: 0001-01-01T00:00:00
                    leadTime: 0
                    leadTimeUom: 0
                    leadTimeMin: 0
                    leadTimeMax: 0
                    pickupStoreId: 00000000-0000-0000-0000-000000000000
                    shippingType: 0
                    recordId: 00000000-0000-0000-0000-000000000000
                  hasSubscription: false
                  subscriptionTotal:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
                  isGiftWrapApplied: false
                  giftWrapId: 00000000-0000-0000-0000-000000000000
                  membershipPlanId: 00000000-0000-0000-0000-000000000000
                  hasMembership: false
                  exchangeRate: 1
                  baseCurrency: EUR
                  microSiteId: 00000000-0000-0000-0000-000000000000
                  baseCurrencyTotal: 99.99
                  membershipDiscount:
                    currencySymbol: €
                    formatted:
                      withTax: €.00000
                      withoutTax: €.00000
                      tax: €.00000
                    raw:
                      withTax: 0
                      withoutTax: 0
                      tax: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
  /api/v2/commerce/basket/{id}/items/display-order:
    put:
      tags:
      - Basket
      summary: Update display order of items in basket.
      operationId: BasketUpdateItemDiplayOrder
      parameters:
      - name: id
        in: path
        description: basket Id
        required: true
        schema:
          type: string
      requestBody:
        description: Basket Line items with desired display order
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineDisplayOrderModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineDisplayOrderModel'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineDisplayOrderModel'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineDisplayOrderModel'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineDisplayOrderModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: basketLines
  /api/v2/commerce/basket/{id}/promo/{promoCode}/validate:
    get:
      tags:
      - Basket
      summary: Check if promo code is valid for basket
      operationId: BasketValidatePromo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: promoCode
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/basket/{id}/promo/{promoCode}/apply:
    post:
      tags:
      - Basket
      summary: Apply promocode to basket
      operationId: BasketApplyPromo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: promoCode
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
  /api/v2/commerce/basket/{id}/promo/{promoCode}/remove:
    delete:
      tags:
      - Basket
      summary: Remove promo from basket
      operationId: BasketRemovePromo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: promoCode
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel'
  /api/v2/commerce/basket/{id}/delivery/shipping-method:
    put:
      tags:
      - Basket
      summary: Update  selected shipping method for basket
      operationId: BasketUpdateShippingMethod
      parameters:
      - name: id
        in: path
        description: BasketId
        required: true
        schema:
          type: string
      - name: shippingMethodId
        in: query
        description: selected shipping method id
        required: true
        schema:
          type: string
      - name: countryCode
        in: query
        description: country code
        required: true
        schema:
          type: string
      requestBody:
        description: details for nominated delivery, optional parameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
      x-codegen-request-body-name: nominatedDelivery
  /api/v2/commerce/basket/{id}/delivery/plan:
    put:
      tags:
      - Basket
      operationId: BasketUpdateDeliveryPlan
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: deliveryPlans
  /api/v2/commerce/basket/{id}/delivery/line-plan:
    put:
      tags:
      - Basket
      operationId: BasketUpdateLineDeliveryPlan
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: deliveryPlan
  /api/v2/commerce/basket/{id}/delivery/instructions:
    put:
      tags:
      - Basket
      summary: Update Delivery instruction in basket at time of checkout
      operationId: BasketUpdateDeliveryInstructions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.UpdateField'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.UpdateField'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.UpdateField'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.UpdateField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.UpdateField'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: deliveryInstruction
  /api/v2/commerce/basket/{id}/delivery/click-collect-store:
    put:
      tags:
      - Basket
      summary: Update selected store info for click and collect
      operationId: BasketUpdateClickCollectStore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: address
  /api/v2/commerce/basket/shipping-charges:
    patch:
      tags:
      - Basket
      operationId: shipping-charges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingChargesModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingChargesModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingChargesModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingChargesModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingChargesModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: model
  /api/v2/catalog/brand/all:
    get:
      tags:
      - Brand
      operationId: BrandGetAll
      parameters:
      - name: brandIds
        in: query
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModelPaginatedResultResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModelPaginatedResultResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModelPaginatedResultResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModelPaginatedResultResponseModelWithSnippets'
  /api/v2/catalog/brand/id/{id}:
    get:
      tags:
      - Brand
      summary: Get brand detail by Id
      operationId: BrandGetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
  /api/v2/catalog/brand/slug:
    post:
      tags:
      - Brand
      summary: Get brand by slug (brands/my-brand)
      operationId: BrandGetBySlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel'
  /api/v2/infra/cache/clear:
    get:
      tags:
      - Cache
      summary: Clear server side cache
      operationId: ClearCache
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v2/catalog/category:
    get:
      tags:
      - Category
      summary: Get all categories
      operationId: CategoryGetAll
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelListResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelListResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelListResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelListResponseModelWithSnippets'
  /api/v2/catalog/category/slug:
    post:
      tags:
      - Category
      summary: Get category by slug
      operationId: CategoryGetBySlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModelResponseModel'
  /api/v2/commerce/checkout/{basketId}/guest-checkout:
    post:
      tags:
      - Checkout
      summary: Guest checkout process, check email existence and update basket with
        email.
      operationId: CheckoutGuest
      parameters:
      - name: basketId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.GuestCheckoutRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.GuestCheckoutRequestModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.GuestCheckoutRequestModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.GuestCheckoutRequestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.GuestCheckoutRequestModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
      x-codegen-request-body-name: model
  /api/v2/commerce/checkout/{basketId}/login-checkout:
    post:
      tags:
      - Checkout
      summary: Logged-in users checkout process, authenticates user internally and
        update basket with userid.
      operationId: CheckoutLogin
      parameters:
      - name: basketId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.LoginCheckoutRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.LoginCheckoutRequestModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.LoginCheckoutRequestModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.LoginCheckoutRequestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModels.LoginCheckoutRequestModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
        401:
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/checkout/{basketId}/shipping-methods:
    get:
      tags:
      - Checkout
      summary: Get list of shipping methods for basket, country code and postcode.
      operationId: shipping-methods
      parameters:
      - name: basketId
        in: path
        description: basket Id
        required: true
        schema:
          type: string
      - name: countryCode
        in: query
        description: 2 letter ISO country code of destination. must be populated.
        required: true
        schema:
          type: string
      - name: postCode
        in: query
        description: post code of destination, used in scenarios where shipping methods
          are configured by postcodes. Not compulsory to pass.
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
  /api/v2/commerce/checkout/{id}/shipping-method:
    put:
      tags:
      - Checkout
      summary: Update  selected shipping method for basket
      operationId: update-basket-shipping
      parameters:
      - name: id
        in: path
        description: BasketId
        required: true
        schema:
          type: string
      - name: shippingMethodId
        in: query
        description: selected shipping method id
        required: true
        schema:
          type: string
      - name: countryCode
        in: query
        description: country code
        required: true
        schema:
          type: string
      requestBody:
        description: details for nominated delivery, optional parameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NominatedDeliveryModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModelResponseModel'
      x-codegen-request-body-name: nominatedDelivery
  /api/v2/commerce/checkout/{basketId}/address:
    put:
      tags:
      - Checkout
      summary: Update shipping and billing address for basket
      operationId: CheckoutUpdateAddress
      parameters:
      - name: basketId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Controllers.Commerce.BasketAddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Controllers.Commerce.BasketAddressModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Controllers.Commerce.BasketAddressModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Controllers.Commerce.BasketAddressModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Controllers.Commerce.BasketAddressModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: model
  /api/v2/commerce/checkout/{basketId}/address-shipping:
    put:
      tags:
      - Checkout
      summary: Update shipping address for basket
      operationId: CheckoutUpdateShippingAddress
      parameters:
      - name: basketId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: addressModel
  /api/v2/commerce/checkout/{basketId}/address-billing:
    put:
      tags:
      - Checkout
      summary: Update billing address for basket
      operationId: CheckoutUpdateBillingAddress
      parameters:
      - name: basketId
        in: path
        required: true
        schema:
          type: string
      - name: sameAsShipping
        in: query
        description: is it same as shipping
        required: true
        schema:
          type: boolean
      requestBody:
        description: billing address model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: addressModel
  /api/v2/commerce/checkout/payment-methods:
    get:
      tags:
      - Checkout
      summary: Gets payment methods by country and curency code. method can be used
        by either passing country + currency OR system code for payment gateway.
      operationId: GetPaymentMethods
      parameters:
      - name: country
        in: query
        description: country code. eg. GB
        required: true
        schema:
          type: string
      - name: currency
        in: query
        description: currency code. eg. GBP
        required: true
        schema:
          type: string
      - name: systemName
        in: query
        description: system code for payment gateway, if fetching details for 1 specific
          payment gateway
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Returns list of valid payment methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentMethodModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentMethodModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentMethodModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentMethodModelListResponseModel'
  /api/v2/commerce/checkout/{basketId}/convert:
    post:
      tags:
      - Checkout
      summary: Convert basket into an order
      operationId: CheckoutConvertBasket
      parameters:
      - name: basketId
        in: path
        description: basket Id
        required: true
        schema:
          type: string
      requestBody:
        description: checkout model with all details of order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CheckoutModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Newly created order model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
      x-codegen-request-body-name: checkout
  /api/v2/commerce/checkout/{orderId}/payment-response:
    put:
      tags:
      - Checkout
      summary: Update order payment response received from the PSP.
      description: "For scenario where PSP process is directly triggered from front\
        \ end \r\nand PSP response is captured by FrontEnd and details passed to API\
        \ \r\nvia this method for updating order / payment status."
      operationId: CheckoutUpdatePaymentResponse
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
      x-codegen-request-body-name: payment
  /api/v2/catalog/collection/all:
    get:
      tags:
      - Collection
      summary: Get all product collections
      operationId: CollectionGetAll
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CollectionModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CollectionModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CollectionModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CollectionModelListResponseModel'
  /api/v2/catalog/collection/id/{id}:
    get:
      tags:
      - Collection
      summary: Get product collection data based on collection Id
      operationId: CollectionGetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
  /api/v2/catalog/collection/slug:
    post:
      tags:
      - Collection
      summary: Get product collection data based on collection slug
      operationId: CollectionGetBySlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModelResponseModel'
  /api/v2/catalog/collection/slug-minimal:
    get:
      tags:
      - Collection
      summary: Get Collection details with minimal product object in response
      operationId: CollectionGetBySlugMinimal
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
  /api/v2/infra/config:
    get:
      tags:
      - Config
      summary: Gets all the store settings
      operationId: ConfigGetAll
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.ConfigContainerModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.ConfigContainerModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.ConfigContainerModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.ConfigContainerModelResponseModel'
  /api/v2/content/faq:
    get:
      tags:
      - Content
      summary: Get all FAQs
      operationId: ContentAllFaq
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
  /api/v2/content/faq/{categoryId}:
    get:
      tags:
      - Content
      summary: Gets Faq for specific category
      operationId: ContentFAQbyCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModelListResponseModel'
  /api/v2/content/faq/help-center:
    get:
      tags:
      - Content
      summary: Get helpcenter categories and faq items
      operationId: ContentHelpcenterFaq
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.HelpCenterModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.HelpCenterModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.HelpCenterModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.HelpCenterModelListResponseModel'
  /api/v2/content/faq/categories:
    get:
      tags:
      - Content
      summary: Get FAQ Categories
      operationId: ContentFaqCategories
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.StringSystem.StringKeyValuePairListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.StringSystem.StringKeyValuePairListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.StringSystem.StringKeyValuePairListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.StringSystem.StringKeyValuePairListResponseModel'
  /api/v2/content/nav:
    get:
      tags:
      - Content
      summary: Get site nav menu
      operationId: GetNavTree
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavContainerModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavContainerModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavContainerModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavContainerModelResponseModel'
  /api/v2/content/feed:
    get:
      tags:
      - Content
      summary: Get product feed based on slug
      operationId: GetFeedBySlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FeedModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FeedModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FeedModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.FeedModelResponseModel'
  /api/v2/content/redirects:
    get:
      tags:
      - Content
      summary: Get redirection rules
      operationId: Redirects
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.UrlMappingModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.UrlMappingModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.UrlMappingModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.UrlMappingModelListResponseModel'
  /api/v2/content/masterdata/{id}:
    get:
      tags:
      - Content
      summary: Get masterdata based on table Id
      operationId: GetMasterData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
          enum:
          - 6
          - 16
          - 17
          - 22
          - 23
          - 24
          - 25
          - 27
          - 28
          - 29
          - 30
          - 31
          - 34
          - 40
          - 41
          - 42
          - 438
          - 439
          - 440
          - 441
          - 442
          - 443
          - 444
          - 445
          - 446
          - 447
          - 448
          - 449
          - 450
          - 1001
          - 1002
          - 1003
          - 1005
          - 1006
          - 1007
          - 1009
          - 1010
          - 1011
          - 1012
          - 1013
          - 1014
          - 1015
          - 1016
          - 1017
          - 1018
          - 1019
          - 1020
          - 1021
          - 1022
          - 1023
          - 1025
          - 1026
          - 1027
          - 1028
          - 1029
          - 1030
          - 1031
          - 1032
          - 1033
          - 1034
          - 1035
          - 1036
          - 1037
          - 1038
          - 1039
          - 1040
          - 1041
          - 1101
          - 1102
          - 1103
          - 1104
          - 1105
          - 1200
          - 1302
          - 1304
          - 1305
          - 1306
          - 1307
          - 1308
          - 1400
          - 1401
          - 1500
          - 1600
          - 2000
          - 2001
          - 2002
          - 2003
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MasterDataModelIListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MasterDataModelIListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MasterDataModelIListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MasterDataModelIListResponseModel'
  /api/v2/content/get-content:
    post:
      tags:
      - Content
      operationId: GetContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.TemplateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.TemplateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.TemplateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.TemplateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.TemplateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/customer/{email}/exists:
    post:
      tags:
      - Customer
      summary: Get users based on email
      operationId: CustomerCheckExistingUser
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
  /api/v2/commerce/customer:
    post:
      tags:
      - Customer
      summary: Get users based on username, email, phone, name
      operationId: CustomerGetUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerExistModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerExistModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerExistModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerExistModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerExistModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelListResponseModel'
      x-codegen-request-body-name: model
  /api/v2/commerce/customer/authenticate:
    post:
      tags:
      - Customer
      summary: Authenticate user
      operationId: CustomerAuthenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.LoginModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.LoginModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.LoginModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.LoginModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.LoginModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/customer/{id}:
    get:
      tags:
      - Customer
      summary: Get user details by Id (Guid)
      operationId: CustomerGetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
  /api/v2/commerce/customer/create:
    post:
      tags:
      - Customer
      operationId: createCustomerRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: value
  /api/v2/commerce/customer/{id}/update:
    put:
      tags:
      - Customer
      operationId: commerceCustomerUpdate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerCreateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: value
  /api/v2/commerce/customer/{id}/delete:
    delete:
      tags:
      - Customer
      summary: Delete existing user
      operationId: CustomerDelete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/customer/newsletter/subscribe:
    post:
      tags:
      - Customer
      operationId: CustomerSubscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NewsletterCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NewsletterCreateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NewsletterCreateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NewsletterCreateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.NewsletterCreateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: newsletterModel
  /api/v2/commerce/customer/newsletter/unsubscribe:
    put:
      tags:
      - Customer
      summary: Unsubscribe newsletter
      operationId: CustomerUnsubscribe
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/customer/{id}/membership:
    get:
      tags:
      - Customer
      summary: Get customer's membership plan details
      operationId: CustomerGetUserMembershipBenefits
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Membership.SiteUserMembershipBenefitListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Membership.SiteUserMembershipBenefitListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Membership.SiteUserMembershipBenefitListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Membership.SiteUserMembershipBenefitListResponseModel'
  /api/v2/commerce/customer/{id}/membership/upgrade-options:
    get:
      tags:
      - Customer
      summary: Get upgrade options for customer's membership plan
      operationId: CustomerGetMembershipUpgradeOptions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanUpgradeOptionsModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanUpgradeOptionsModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanUpgradeOptionsModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanUpgradeOptionsModelListResponseModel'
  /api/v2/commerce/customer/{id}/wishlist:
    get:
      tags:
      - Customer
      summary: Gets customer's wishlist based on user id passed
      operationId: CustomerGetWishlist
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: saveForLater
        in: query
        required: true
        schema:
          type: boolean
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductBasicModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductBasicModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductBasicModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductBasicModelListResponseModel'
  /api/v2/commerce/customer/{id}/wishlist/add-item:
    post:
      tags:
      - Customer
      summary: Add item to user wishlist
      operationId: CustomerWishlistAddItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: productId
        in: query
        required: true
        schema:
          type: string
      - name: saveForLater
        in: query
        required: true
        schema:
          type: boolean
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/customer/{id}/wishlist/remove-item:
    delete:
      tags:
      - Customer
      summary: Remove item from user wishlist
      operationId: CustomerRemoveWishlistItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: productId
        in: query
        required: true
        schema:
          type: string
      - name: saveForLater
        in: query
        required: true
        schema:
          type: boolean
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/customer/{id}/orders:
    get:
      tags:
      - Customer
      operationId: CustomerGetOrders
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: hasMembership
        in: query
        schema:
          type: boolean
      - name: pageNumber
        in: query
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderListItemModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderListItemModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderListItemModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderListItemModelListResponseModel'
  /api/v2/commerce/customer/{id}/orders/{orderId}:
    get:
      tags:
      - Customer
      operationId: CustomerGetOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
  /api/v2/commerce/customer/{id}/returns:
    get:
      tags:
      - Customer
      summary: Get list of returns for customer
      operationId: CustomerGetAllReturns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelListResponseModel'
  /api/v2/commerce/customer/{id}/returns/{returnId}:
    get:
      tags:
      - Customer
      summary: Get return order details
      operationId: CustomerGetReturnDetails
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: returnId
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
  /api/v2/commerce/customer/{id}/subscription:
    get:
      tags:
      - Customer
      summary: Get list of subscription for customer.
      operationId: CustomerGetSubscriptions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModelListResponseModel'
  /api/v2/commerce/customer/{id}/subscription/orders:
    get:
      tags:
      - Customer
      summary: Get list of subscription fulfilment order for specific seed order
      operationId: CustomergetSubscriptionOrderDetail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: seedOrderId
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: showCancelled
        in: query
        required: true
        schema:
          type: boolean
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
  /api/v2/commerce/customer/password/forgot:
    post:
      tags:
      - Customer
      summary: Email token to user on forgot password
      operationId: forgotpassword
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
        403:
          description: Forbidden
          content: {}
  /api/v2/commerce/customer/validate-password-token:
    get:
      tags:
      - Customer
      operationId: ValidatePasswordToken
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
        403:
          description: Forbidden
          content: {}
  /api/v2/commerce/customer/password/reset:
    put:
      tags:
      - Customer
      summary: Validate forgot password token, changes password and expire token
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UserPasswordTokenModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UserPasswordTokenModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UserPasswordTokenModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UserPasswordTokenModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UserPasswordTokenModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
        403:
          description: Forbidden
          content: {}
      x-codegen-request-body-name: user
  /api/v2/commerce/customer/password/change:
    put:
      tags:
      - Customer
      summary: Change password for user based on old and new password + user Id
      operationId: CustomerChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.ChangePasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.ChangePasswordModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.ChangePasswordModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.ChangePasswordModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Common.ChangePasswordModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: model
  /api/v2/commerce/customer/{sessionId}/ghostuser:
    post:
      tags:
      - Customer
      summary: Ghost login as user without knowing password
      operationId: CustomerAuthenticateGhostUser
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModelResponseModel'
  /api/v2/commerce/customer/{Id}/PaymentTokens/{paymentMethod}:
    get:
      tags:
      - Customer
      operationId: PaymentTokens
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: paymentMethod
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
  /api/v2/commerce/customer/gdpr/personal-report:
    get:
      tags:
      - GDPR
      summary: 'Right of Access to personal data: Get customer''s Personal Data Report
        under the GDPR Rights'
      operationId: getGdprReport
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/customer/gdpr/forget:
    get:
      tags:
      - GDPR
      summary: 'Right to be forgotten: the user can request to be forgotten from the
        website and have all his data deleted.'
      operationId: forgetUser
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/customer/gdpr/anonymize:
    get:
      tags:
      - GDPR
      summary: 'Right to be Anonymous: the user can request to anonymize their personal
        data that is stored by the system.'
      operationId: anonymizeUser
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/catalog/lookbook:
    get:
      tags:
      - Lookbook
      summary: Get all lookbooks
      operationId: LookbookGetAll
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
  /api/v2/catalog/lookbook/{groupName}:
    get:
      tags:
      - Lookbook
      summary: Get lookbooks by collection / group name
      operationId: LookbookGetByGroup
      parameters:
      - name: groupName
        in: path
        description: name of lookbook collection / group name
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModelListResponseModel'
  /api/v2/catalog/lookbook/slug:
    get:
      tags:
      - Lookbook
      summary: Get lookbook by slug
      operationId: LookbookGetBySlug
      parameters:
      - name: slug
        in: query
        description: lookbook slug based on which it is fetched (mandatory)
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel'
        404:
          description: NotFound
          content: {}
  /api/v2/commerce/membership/plans:
    post:
      tags:
      - Membership
      summary: Get membership plans
      operationId: getmembershipplans
      requestBody:
        description: can be passed as null as well.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionFilter'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionFilter'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionFilter'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanModelListResponseModel'
      x-codegen-request-body-name: membershipFilter
  /api/v2/content/microsite/all:
    get:
      tags:
      - Microsite
      summary: Get list of active microsites
      operationId: GetMicrosites
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.MicrositeModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.MicrositeModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.MicrositeModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.MicrositeModelListResponseModel'
  /api/v2/commerce/order/{id}:
    get:
      tags:
      - Order
      summary: Get order details by id
      operationId: OrderGetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
  /api/v2/commerce/order:
    post:
      tags:
      - Order
      summary: Get order detail based on request parameters
      operationId: OrderDetailGetByRequestModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderDetailRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderDetailRequestModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderDetailRequestModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderDetailRequestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderDetailRequestModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
      x-codegen-request-body-name: orderDetailRequestModel
  /api/v2/commerce/order/email:
    get:
      tags:
      - Order
      summary: Get most recent order detail by user email
      operationId: OrderDetailGetByEmail
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets'
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
  /api/v2/commerce/order/service-job:
    post:
      tags:
      - Order
      summary: Get service jobs
      operationId: OrderGetServiceJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobFilter'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobFilter'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobFilter'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJobListResponseModel'
      x-codegen-request-body-name: filter
  /api/v2/commerce/order/service-job/status:
    post:
      tags:
      - Order
      summary: Update service job status
      operationId: OrderUpdateServiceJobStatus
      parameters:
      - name: jobId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        required: true
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
  /api/v2/commerce/order/{id}/invoice:
    get:
      tags:
      - Order
      summary: Get invoice details
      operationId: OrderGetInvoiceDetail
      parameters:
      - name: id
        in: path
        description: invoice id
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/order/create:
    post:
      tags:
      - Order
      summary: Create new order
      operationId: OrderCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
      x-codegen-request-body-name: order
  /api/v2/commerce/order/{id}/email:
    put:
      tags:
      - Order
      summary: Update user email in order
      operationId: OrderUpdateEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateOrderEmail'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateOrderEmail'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateOrderEmail'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateOrderEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateOrderEmail'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: model
  /api/v2/commerce/order/{id}/cancel:
    put:
      tags:
      - Order
      operationId: OrderCancel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
  /api/v2/commerce/order/{id}/status:
    put:
      tags:
      - Order
      summary: Update order status
      operationId: OrderUpdateStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderStatusModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderStatusModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderStatusModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderStatusModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderStatusModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: orderStatusModel
  /api/v2/commerce/order/{id}/address:
    put:
      tags:
      - Order
      summary: Update billing or shipping address
      operationId: OrderUpdateAddress
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: addressType
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: address
  /api/v2/commerce/order/{id}/custom-info:
    put:
      tags:
      - Order
      summary: Update custom info
      operationId: OrderUpdateCustomInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Common.HeaderCustomInfo'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: info
  /api/v2/commerce/order/{id}/resolve-exception:
    put:
      tags:
      - Order
      summary: Resolve exception with updated shipping plan
      operationId: OrderResolveException
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanLineModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanLineModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanLineModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanLineModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanLineModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: orderLine
  /api/v2/commerce/order/{id}/delivery-plan:
    put:
      tags:
      - Order
      summary: Update delivery plan
      operationId: OrderUpdateDeliveryPlan
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.DeliveryPlanStatusModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.DeliveryPlanStatusModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.DeliveryPlanStatusModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.DeliveryPlanStatusModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.DeliveryPlanStatusModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: deliveryPlan
  /api/v2/commerce/order/update-delivery-plan:
    put:
      tags:
      - Order
      operationId: UpdateDeliveyPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/order/update-shipment:
    put:
      tags:
      - Order
      operationId: UpdateShipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/order/update-bulk-shipment:
    put:
      tags:
      - Order
      operationId: UpdateBulkShipment
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShipmentUpdate'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/order/insert-delivery-plan:
    post:
      tags:
      - Order
      operationId: InsertDeliveyPlan
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/order/delete-invoice-line:
    delete:
      tags:
      - Order
      operationId: DeleteInvoiceLine
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/order/update-oms-confirmation:
    put:
      tags:
      - Order
      operationId: UpdateOmsConfirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderOMSConfirmationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderOMSConfirmationModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderOMSConfirmationModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderOMSConfirmationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderOMSConfirmationModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: model
  /api/v2/commerce/order/invoice-date:
    put:
      tags:
      - Order
      summary: Update invoice date explicitly
      operationId: OrderUpdateInvoiceDate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateInvoiceDate'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateInvoiceDate'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateInvoiceDate'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateInvoiceDate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateInvoiceDate'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: model
  /api/v2/commerce/order/{id}/items/remove:
    delete:
      tags:
      - Order
      summary: Remove lineitem from order
      operationId: OrderRemoveItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: productId
        in: query
        required: true
        schema:
          type: string
      - name: lineId
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
  /api/v2/commerce/order/{id}/items/qty:
    put:
      tags:
      - Order
      summary: Update item qty in order
      operationId: OrderUpdateItemQty
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: productId
        in: query
        required: true
        schema:
          type: string
      - name: qty
        in: query
        required: true
        schema:
          type: integer
          format: int32
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModelResponseModel'
  /api/v2/commerce/order/{id}/items/display-order:
    put:
      tags:
      - Order
      summary: Update lineitem display order
      operationId: OrderUpdateLineDisplayOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: orderLines
  /api/v2/commerce/order/{id}/items/status:
    put:
      tags:
      - Order
      summary: Update line level status
      operationId: OrderUpdateLineStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OmsOrderResponse'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OmsOrderResponse'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OmsOrderResponse'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OmsOrderResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OmsOrderResponse'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: orderResponse
  /api/v2/commerce/order/{id}/items/refund:
    put:
      tags:
      - Order
      summary: Create refund for specific line
      operationId: OrderCreateLineRefund
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CreateRefundModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CreateRefundModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CreateRefundModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CreateRefundModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CreateRefundModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: refund
  /api/v2/commerce/order/{id}/promo/{promoCode}/apply:
    put:
      tags:
      - Order
      summary: Apply promotion to order
      operationId: OrderApplyPromo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: promoCode
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/order/{id}/promo/{promoCode}/remove:
    delete:
      tags:
      - Order
      summary: Remove promotion from order
      operationId: OrderRemovePromo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: promoCode
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderPromoResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderPromoResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderPromoResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderPromoResponseModelResponseModel'
  /api/v2/commerce/order/{id}/promo/{promoCode}/validate:
    get:
      tags:
      - Order
      summary: Validate promotion against order
      operationId: OrderValidatePromo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: promoCode
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/order/{id}/status-email:
    post:
      tags:
      - Order
      summary: Resend email as per current status
      operationId: OrderStatusEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.OrderStatusEmailModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.OrderStatusEmailModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.OrderStatusEmailModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.OrderStatusEmailModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Content.OrderStatusEmailModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: orderStatusEmailModel
  /api/v2/commerce/order/subscription/status:
    post:
      tags:
      - Order
      summary: Update subscription order status
      operationId: OrderUpdateSubscriptionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateSubscriptionStatusModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateSubscriptionStatusModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateSubscriptionStatusModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateSubscriptionStatusModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.UpdateSubscriptionStatusModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel'
      x-codegen-request-body-name: subscriptionUpdateStatus
  /api/v2/commerce/order/{id}/subscription/item-display-order:
    put:
      tags:
      - Order
      summary: Update line items display order in subscription order
      operationId: OrderUpdateSubscriptionLineItemDisplayOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
      x-codegen-request-body-name: orderLines
  /api/v2/commerce/order/{id}/subscription/lapsed:
    put:
      tags:
      - Order
      summary: Update lapsed subscription
      operationId: OrderupdateLapsedSubscription
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/order/{id}/subscription/prepaid-count:
    put:
      tags:
      - Order
      summary: Update the prepaid orders count for subscription
      operationId: OrderUpdatePrepaid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: prepaidCount
        in: query
        required: true
        schema:
          type: integer
          format: int32
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
  /api/v2/catalog/product/preview:
    post:
      tags:
      - Product
      summary: Get product details for preview on website before product is published.
      operationId: Preview
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
  /api/v2/catalog/product/slug:
    post:
      tags:
      - Product
      summary: Get product details by slug
      operationId: ProductGetByslug
      parameters:
      - name: slug
        in: query
        description: product slug without hostname (eg. www.example.com)
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
  /api/v2/catalog/product/{id}:
    get:
      tags:
      - Product
      summary: Get product details by ID
      operationId: ProductGetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel'
  /api/v2/catalog/product/{id}/related-products:
    get:
      tags:
      - Product
      summary: Get related products for a specific product
      operationId: GetRelatedProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelListResponseModel'
  /api/v2/catalog/product/{id}/review:
    post:
      tags:
      - Product
      summary: Post product review
      operationId: PostReview
      parameters:
      - name: id
        in: path
        description: product GUID identifier
        required: true
        schema:
          type: string
      requestBody:
        description: review object model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewAddModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewAddModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewAddModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewAddModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewAddModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: model
  /api/v2/catalog/product/{id}/notifyme:
    post:
      tags:
      - Product
      summary: Save user email for notification email when product is back in stock
      operationId: NotifyMe
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.BooleanResponseModel'
  /api/v2/commerce/return/{orderid}:
    get:
      tags:
      - Return
      summary: Get order detail for new return request
      operationId: ReturnGetById
      parameters:
      - name: orderid
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnModelResponseModel'
  /api/v2/commerce/return/create:
    post:
      tags:
      - Return
      operationId: ReturnCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnCreateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnCreateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnCreateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnCreateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel'
      x-codegen-request-body-name: value
  /api/v2/commerce/return/{id}/update:
    post:
      tags:
      - Return
      operationId: ReturnUpdate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnUpdateModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnUpdateModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnUpdateModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnUpdateModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModelResponseModel'
      x-codegen-request-body-name: value
  /api/v2/catalog/search/freetext:
    post:
      tags:
      - Search
      operationId: FreeTextSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchModelBase'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchModelBase'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchModelBase'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchModelBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchModelBase'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
        404:
          description: NotFound
          content: {}
      x-codegen-request-body-name: searchModel
  /api/v2/catalog/search/{freeText}:
    post:
      tags:
      - Search
      summary: Free text search
      operationId: catalogFreeTextSearch
      parameters:
      - name: freeText
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.TypeAheadSearchResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.TypeAheadSearchResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.TypeAheadSearchResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.TypeAheadSearchResponseModel'
  /api/v2/catalog/search/suggestion/{freeText}:
    post:
      tags:
      - Search
      summary: Search suggestion based on free text
      operationId: Suggestion
      parameters:
      - name: freeText
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductForIndexSuggestionResultListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductForIndexSuggestionResultListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductForIndexSuggestionResultListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductForIndexSuggestionResultListResponseModel'
  /api/v2/catalog/search/advanced:
    post:
      tags:
      - Search
      summary: Advanced faceted search
      operationId: SearchGetByFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelPaginatedResultResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelPaginatedResultResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelPaginatedResultResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelPaginatedResultResponseModelWithSnippets'
      x-codegen-request-body-name: search
  /api/v2/catalog/search/advanced/minimal:
    post:
      tags:
      - Search
      summary: Advanced faceted search with minimal return object
      operationId: SearchGetByFilterMinimal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SearchCriteriaModel'
        required: true
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResultResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResultResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResultResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResultResponseModelWithSnippets'
      x-codegen-request-body-name: search
  /api/v2/catalog/search/keyword-redirections:
    get:
      tags:
      - Search
      summary: Get keyword redirection rules
      operationId: KeywordRedirections
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
  /api/v2/commerce/shipping-method:
    get:
      tags:
      - ShippingMethod
      summary: Get the active shipping methods. if no parameters passed, it gets all
        the active shipping methods
      operationId: GetActiveShippingMethods
      parameters:
      - name: basketId
        in: query
        schema:
          type: string
      - name: shipToCountryIso
        in: query
        schema:
          type: string
      - name: postCode
        in: query
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModelListResponseModel'
  /api/v2/commerce/shipping-method/click-collect-stores:
    get:
      tags:
      - ShippingMethod
      summary: Get click and collect stores for the basket + postcode combination
      operationId: ShippingGetClickandcollectStores
      parameters:
      - name: basketId
        in: query
        required: true
        schema:
          type: string
      - name: postCode
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
  /api/v2/content/siteview/slug:
    post:
      tags:
      - SiteView
      summary: Get site view widgets and content by slug for CMS pages
      operationId: SiteViewGetBySlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
  /api/v2/content/siteview/dynamic-slug:
    post:
      tags:
      - SiteView
      summary: Get entity specific data based on slug passed - product, brand, siteview,
        category, product collection
      operationId: SiteViewGetByDynamicSlug
      parameters:
      - name: slug
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content: {}
  /api/v2/content/siteview/id/{id}:
    get:
      tags:
      - SiteView
      summary: Get site view by id, lang, version
      operationId: SiteViewGetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: langCulture
        in: query
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets'
  /api/v2/content/siteview/all:
    get:
      tags:
      - SiteView
      summary: Get all slugs
      operationId: GetAllSlug
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.StringListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/System.StringListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.StringListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/System.StringListResponseModel'
  /api/v2/content/siteview/schedule/active:
    get:
      tags:
      - SiteView
      summary: Get page schedule list
      operationId: GetActiveSchedule
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.ScheduleModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.ScheduleModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.ScheduleModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Content.ScheduleModelListResponseModel'
  /api/v2/stores/all:
    get:
      tags:
      - StoreLocator
      summary: Get all physical stores
      operationId: StoreLocator_GetAll
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
  /api/v2/stores/{postCode}:
    post:
      tags:
      - StoreLocator
      summary: Search store based on postcode
      operationId: GetNearbyStore
      parameters:
      - name: postCode
        in: path
        required: true
        schema:
          type: string
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel'
components:
  schemas:
    Omnicx.API20.Models.Commerce.AddressModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
    Omnicx.API20.Models.Commerce.AddressModel:
      type: object
      properties:
        customerId:
          type: string
        isDefault:
          type: boolean
        isDefaultDelivery:
          type: boolean
        isDefaultForSubscription:
          type: boolean
        isDefaultBilling:
          type: boolean
        id:
          type: integer
          format: int64
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        countryCode:
          type: string
        postCode:
          type: string
        phoneNo:
          type: string
        mobileNo:
          type: string
        companyName:
          type: string
      example:
        customerId: e4f9e57c-f247-499b-9098-aadf6e9d2bec
        isDefault: false
        isDefaultDelivery: false
        isDefaultForSubscription: false
        isDefaultBilling: false
        id: 0
        title: Mr.
        firstName: David
        lastName: Smith
        address1: Address Line 1
        address2: Address Line 2
        address3: Address Line 3
        city: London
        state: London
        country: United Kingdom
        countryCode: UK
        postCode: XX55YY
        phoneNo: "9999999999"
        mobileNo: "888888888"
        companyName: My Company
    Omnicx.API20.Models.Commerce.AddressModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
    Omnicx.API20.Models.Common.BoolResponseModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Common.BoolResponseModel'
    Omnicx.API20.Models.Common.BoolResponseModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        id:
          type: integer
          format: int64
        isValid:
          type: boolean
    System.BooleanResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: boolean
    Omnicx.Entities.SiteBasket.QuoteInfoListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.SiteBasket.QuoteInfo'
    Omnicx.Entities.SiteBasket.QuoteInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        quoteId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyName:
          type: string
        quoteName:
          type: string
        contactId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        purchaseOrderNo:
          type: string
        validUntil:
          type: string
          format: date-time
        validDays:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        customQuoteNo:
          type: string
        shippingMethodCode:
          type: string
        shippingMethodName:
          type: string
        shippingCost:
          type: number
          format: double
        email:
          type: string
        customerId:
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Omnicx.Entities.Customer.Address'
        billingAddress:
          $ref: '#/components/schemas/Omnicx.Entities.Customer.Address'
        userName:
          type: string
        createdByAdmin:
          type: boolean
        orderNo:
          type: integer
          format: int64
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderStatus:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        isQuoteExpired:
          type: boolean
    Omnicx.Entities.Customer.Address:
      type: object
      properties:
        addressType:
          type: integer
          format: int32
        companyWebsite:
          type: string
        tradingCurrency:
          type: string
        userId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        countryCode:
          type: string
        postCode:
          type: string
        phoneNo:
          type: string
        isDefaultDelivery:
          type: boolean
        isDefaultBilling:
          type: boolean
        isDefault:
          type: boolean
        isDefaultForSubscription:
          type: boolean
        companyName:
          type: string
        companyId:
          type: string
        fax:
          type: string
        email:
          type: string
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.Entities.B2b.CompanyNameListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyName'
    Omnicx.Entities.B2b.CompanyName:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
    Omnicx.Entities.B2b.CompanyUser:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        firstName:
          type: string
        lastName:
          type: string
        title:
          type: string
        phoneNo:
          type: string
        gender:
          type: string
        telephone:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        salt:
          type: string
        lastIpAddress:
          type: string
        isBlocked:
          type: boolean
        userSourceType:
          type: string
        companyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        address:
          $ref: '#/components/schemas/Omnicx.Entities.Customer.Address'
        companyUserRole:
          type: string
        culture:
          type: string
        isRegistered:
          type: boolean
        notifyByEmail:
          type: boolean
        notifyBySMS:
          type: boolean
        notifyByPost:
          type: boolean
        browserName:
          type: string
        sourceProcess:
          type: string
        sessionId:
          type: string
        deviceId:
          type: string
        externalAccountingId:
          type: string
        isWelcomeEmailSent:
          type: boolean
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.API20.Models.B2B.CompanyModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.B2B.CompanyModel'
    Omnicx.API20.Models.B2B.CompanyModel:
      type: object
      properties:
        email:
          type: string
        companyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        businessType:
          type: string
        companyName:
          type: string
        telephone:
          type: string
        mobile:
          type: string
        companyAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        addresses:
          type: array
          description: All addresses for the company
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        customerGroup:
          type: string
        erpCompanyCode:
          type: string
        companyCode:
          type: string
        companyRegNo:
          type: string
        taxRegNo:
          type: string
        tradingCurrency:
          type: string
        creditLimit:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        creditAvailable:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        usedCredit:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        creditLimitLastRefreshed:
          type: string
          format: date-time
        cheque:
          type: boolean
        accountCredit:
          type: boolean
        priceListId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        notifyByEmail:
          type: boolean
        notifyBySMS:
          type: boolean
        notifyByPost:
          type: boolean
    Omnicx.Entities.Common.Amount:
      type: object
      properties:
        minPrice:
          type: number
          format: double
        minPriceWithoutTax:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        maxPriceWithoutTax:
          type: number
          format: double
        currencyDecimalSeparator:
          type: string
        currencyDigitsAfterDecimal:
          type: integer
          format: int32
        currencySymbol:
          type: string
        formatted:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountFormatted'
        raw:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountRaw'
    Omnicx.Entities.Common.AmountFormatted:
      type: object
      properties:
        withTax:
          type: string
        withoutTax:
          type: string
        tax:
          type: string
    Omnicx.Entities.Common.AmountRaw:
      type: object
      properties:
        withTax:
          type: number
          format: double
        withoutTax:
          type: number
          format: double
        tax:
          type: number
          format: double
    Omnicx.API20.Models.Commerce.QuoteModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        purchaseOrderNo:
          type: string
        quoteName:
          type: string
        email:
          type: string
        companyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        shippingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        billingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
    Omnicx.Entities.Common.BoolResponseResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.Entities.Common.BoolResponse'
    Omnicx.Entities.Common.BoolResponse:
      type: object
      properties:
        acknowledge:
          type: integer
          format: int32
          enum:
          - 0
          - 1
        isValid:
          type: boolean
        message:
          type: string
        messageCode:
          type: string
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.API20.Models.Commerce.CompanyCustomerCreateModel:
      type: object
      properties:
        companyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        businessType:
          type: string
        registeredNumber:
          type: string
        priceListId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyUserRole:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        customerGroupId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        address:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressBasicModel'
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        title:
          type: string
        telephone:
          type: string
        mobile:
          type: string
        gender:
          type: string
        password:
          type: string
        nickName:
          type: string
        dayOfBirth:
          type: string
        monthOfBirth:
          type: string
        yearOfBirth:
          type: string
        birthDate:
          type: string
        postCode:
          type: string
        newsLetterSubscribed:
          type: boolean
        userSourceType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 7
          - 8
          - 9
          - 10
        referralType:
          type: string
          enum:
          - Direct
          - PayPerClick
          - Froogle
          - Portals
          - Bing
          - Store
          - PhoneOrder
          - TrxEmail
          - Facebook
          - Email
          - SearchEngine
          - Webgains
          - Hsbc
          - All
        userReferrer:
          type: string
        companyName:
          type: string
        notifyByEmail:
          type: boolean
        notifyBySMS:
          type: boolean
        notifyByPost:
          type: boolean
        registrationSource:
          type: string
    Omnicx.API20.Models.Commerce.AddressBasicModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        countryCode:
          type: string
        postCode:
          type: string
        phoneNo:
          type: string
        mobileNo:
          type: string
        companyName:
          type: string
    Omnicx.API20.Models.Commerce.BasketModelResponseModelWithSnippets:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModel'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
    Omnicx.API20.Models.Commerce.BasketModel:
      type: object
      properties:
        id:
          type: string
        currencySymbol:
          type: string
        currencyCode:
          type: string
        userId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        userEmail:
          type: string
        grandTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        totalWithoutShipping:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        shippingMethodId:
          type: string
        shippingCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        discount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        taxPercent:
          type: number
          format: double
        additionalCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineModel'
        promotionsApplied:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PromotionModel'
        shippingMethods:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModel'
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        isQuote:
          type: boolean
        quoteStatus:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customInfo4:
          type: string
        customInfo5:
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressBasicModel'
        billingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressBasicModel'
        postCode:
          type: string
        maxDimensionMm:
          type: number
          format: double
        companyDiscount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        validUntil:
          type: string
          format: date-time
        isLocked:
          type: boolean
        createdByAdmin:
          type: boolean
        poNumber:
          type: string
        deliveryInstruction:
          type: string
        deliveryPlans:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanModel'
        hasSubscription:
          type: boolean
          description: True if basket contains subscription product
        subscriptionTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        isGiftWrapApplied:
          type: boolean
        giftWrapId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        giftWrapOption:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.GiftWrap'
        membershipPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        hasMembership:
          type: boolean
        exchangeRate:
          type: number
          format: double
        baseCurrency:
          type: string
        microSiteId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        baseCurrencyTotal:
          type: number
          format: double
        membershipDiscount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
    Omnicx.API20.Models.Content.SnippetModel:
      type: object
      properties:
        name:
          type: string
        type:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
        placement:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
        content:
          type: string
        excludedUrl:
          type: string
        microsites:
          type: array
          items:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000000
    Omnicx.Entities.Common.AmountBasic:
      type: object
      properties:
        currencySymbol:
          type: string
        formatted:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountFormatted'
        raw:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountRaw'
    Omnicx.API20.Models.Commerce.BasketLineModel:
      type: object
      properties:
        id:
          type: string
        stockCode:
          type: string
        name:
          type: string
        productId:
          type: string
        productIid:
          type: string
        parentProductId:
          type: string
        brand:
          type: string
        subbrand:
          type: string
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        totalPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        image:
          type: string
        qty:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
        slug:
          type: string
        itemType:
          type: integer
          format: int32
        displayInBasket:
          type: boolean
        categoryItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryItemModel'
        attributesJson:
          type: string
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customInfo4:
          type: string
        customInfo5:
          type: string
        discount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        additionalCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        shortDescription:
          type: string
        companyDiscount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        isSubscription:
          type: boolean
        isMembership:
          type: boolean
        subscriptionUserSettings:
          $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionUserSetting'
        promotionsApplied:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PromotionModel'
        isGiftWrapApplied:
          type: boolean
        giftWrapId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        itemGroupId:
          type: integer
          format: int32
        couponProvider:
          type: string
        isManualPrice:
          type: boolean
        priceMatchReqId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        deliveryMessage:
          type: string
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductsModelBase'
        variantProductsAttribute:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductAttributesBase'
        currentStock:
          type: integer
          format: int32
        hsnCode:
          type: string
        countryOfOrigin:
          type: string
    Omnicx.API20.Models.Commerce.PromotionModel:
      type: object
      properties:
        voucherCode:
          type: string
        discountPct:
          type: number
          format: double
        discountAmt:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        autoApply:
          type: boolean
        promoCode:
          type: string
        name:
          type: string
    Omnicx.API20.Models.Commerce.ShippingModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        enabled:
          type: boolean
        systemName:
          type: string
        shippingCode:
          type: string
        displayName:
          type: string
        description:
          type: string
        displayOrder:
          type: integer
          format: int32
        expectedDaysToDeliver:
          type: integer
          format: int32
        expectedDeliveryDate:
          type: string
          format: date-time
        deliveryOnOrBefore:
          type: string
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        isDefault:
          type: boolean
        isNominated:
          type: boolean
        type:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        carrierCode:
          type: string
        countryCode:
          type: string
        isPriceOnRequest:
          type: boolean
        showRecomendation:
          type: boolean
        recomendation:
          type: string
        isTaxable:
          type: boolean
        shippingCostMethod:
          type: integer
          format: int32
          enum:
          - 1
          - 4
          - 7
          - 8
        cutOffTimes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CutOffTime'
        countryCsv:
          type: string
    Omnicx.API20.Models.Commerce.ShippingPlanModel:
      type: object
      properties:
        fulfilmentChannel:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        deliveryType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        deliveryCenter:
          $ref: '#/components/schemas/Omnicx.Entities.Shipping.DeliveryCenterBasic'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlanLine'
        distanceInMiles:
          type: number
          description: Distance in miles from the Destination Post Code
          format: double
        shippingMethodId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        shippingMethodName:
          type: string
        cost:
          type: number
          format: double
        shippingSpeed:
          type: string
          readOnly: true
        deliveryDateTarget:
          type: string
          description: The target delivery date. to be specified when the delivery
            leadtime unit is in days
          format: date-time
          readOnly: true
        deliveryDateActual:
          type: string
          description: Actual delivery date recorded for SLA reporting purposes.
          format: date-time
        leadTime:
          type: integer
          description: Lead time for the goods to be available at the delivery center
          format: int32
        leadTimeUom:
          type: integer
          description: Units of measure for lead time to pickup from the delivery
            center - minutes, hours, days, weeks
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        leadTimeMin:
          type: integer
          description: Minimum lead time
          format: int32
        leadTimeMax:
          type: integer
          description: Maximum lead time
          format: int32
        pickupStoreId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        refStoreId:
          type: string
        pickupStoreCode:
          type: string
        shippingType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineModel'
        created:
          type: string
          format: date-time
          readOnly: true
        recordId:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.API20.Models.Commerce.GiftWrap:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: string
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        allowGiftMessage:
          type: boolean
        isVisible:
          type: boolean
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.API20.Models.Catalog.CategoryItemModel:
      type: object
      properties:
        categoryId:
          type: string
        categoryName:
          type: string
        parentCategoryId:
          type: string
        parentCategoryName:
          type: string
    Omnicx.Entities.Subscription.SubscriptionUserSetting:
      type: object
      properties:
        subscriptionPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subscriptionTermId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        userPricingType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        subscriptionJson:
          type: string
        authorizationAmount:
          type: number
          format: double
      example:
        subscriptionPlanId: 1a2e9e33-a675-4e23-8dc9-e6c24491b04d
        subscriptionTermId: 83209399-0fa2-45ed-bb55-152d4b978897
        userPricingType: 1
        subscriptionJson: '{}'
        authorizationAmount: 0
    Omnicx.API20.Models.Catalog.VariantProductsModelBase:
      type: object
      properties:
        stockCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        slug:
          type: string
        image:
          type: string
        productName:
          type: string
        variantAttributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantAttributesModelBase'
    Omnicx.API20.Models.Catalog.VariantProductAttributesBase:
      type: object
      properties:
        fieldName:
          type: string
        fieldCode:
          type: string
        fieldValues:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantAttributesModelBase'
    Omnicx.API20.Models.Commerce.CutOffTime:
      type: object
      properties:
        day:
          type: string
        hour:
          type: string
        minute:
          type: string
    Omnicx.Entities.Shipping.DeliveryCenterBasic:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        code:
          type: string
        name:
          type: string
        type:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        postCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
    Omnicx.Entities.Shipping.ShippingPlanLine:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        basketLineId:
          type: integer
          format: int64
        orderLineRecordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        parentProductId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        qty:
          type: integer
          format: int32
        shippedQty:
          type: integer
          format: int32
        shippingCharge:
          type: number
          format: double
        productName:
          type: string
        imageUrl:
          type: string
        attributesXml:
          type: string
        photo:
          type: string
          readOnly: true
        fulfilmentChannel:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        created:
          type: string
          format: date-time
        deliveryType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        shippingMethodName:
          type: string
        leadTime:
          type: integer
          format: int32
        leadTimeUom:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        shippingSpeed:
          type: string
          readOnly: true
        deliveryDateTarget:
          type: string
          format: date-time
          readOnly: true
        comment:
          type: string
        exceptionType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        notifyType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        lineTotal:
          type: number
          format: double
        productExpectedDate:
          type: string
          format: date-time
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        actionType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        resolutionOption:
          $ref: '#/components/schemas/Omnicx.Entities.Shipping.ResolutionOption'
        resolutionOptions:
          type: string
        acManagerResolveOption:
          type: string
        customerResolveOption:
          type: string
        refundLine:
          $ref: '#/components/schemas/Omnicx.Entities.Order.RefundOrderLine'
        replaceLines:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Order.ReplaceOrderLine'
        isUseInFuture:
          type: boolean
        supplierCountry:
          type: string
        supplierCountryCode:
          type: string
        childLineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlanLine'
        returnQtyRequested:
          type: integer
          format: int32
        availableQty:
          type: integer
          format: int32
          readOnly: true
        inventoryType:
          type: integer
          format: int32
        poolCode:
          type: string
        lineDeliveryCenterId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        lineDeliveryCenterCode:
          type: string
        customInfo1Formatted:
          type: string
    Omnicx.API20.Models.Catalog.VariantAttributesModelBase:
      type: object
      properties:
        fieldCode:
          type: string
        fieldValue:
          type: string
    Omnicx.Entities.Shipping.ResolutionOption:
      type: object
      properties:
        isRefund:
          type: boolean
        isWaitForDelivery:
          type: boolean
        isSuggestAlternative:
          type: boolean
    Omnicx.Entities.Order.RefundOrderLine:
      type: object
      properties:
        orderLineId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Payment.OrderPayment'
        currencySymbol:
          type: string
        refundAmount:
          type: number
          format: double
        lineTotal:
          type: number
          format: double
        paymentGateway:
          type: string
        paymentSummary:
          type: string
        lastUpdatedBy:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productName:
          type: string
        productDisplayName:
          type: string
        attributeXml:
          type: string
        imageUrl:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: string
        companyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.Entities.Order.ReplaceOrderLine:
      type: object
      properties:
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        lineId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        oldStockCode:
          type: string
        ip:
          type: string
        logType:
          type: integer
          format: int32
          enum:
          - 2
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 207
          - 208
          - 209
          - 210
        lastUpdatedBy:
          type: string
        isSelected:
          type: boolean
        isNew:
          type: boolean
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productName:
          type: string
        productDisplayName:
          type: string
        attributeXml:
          type: string
        imageUrl:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: string
        companyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.Entities.Payment.OrderPayment:
      type: object
      properties:
        cardNo:
          type: string
        orderNo:
          type: integer
          format: int64
        orderAmount:
          type: number
          format: double
        paidAmount:
          type: number
          format: double
        balanceAmount:
          type: number
          format: double
        refundCharge:
          type: number
          format: double
        refundPaymentId:
          type: string
        rmaId:
          type: string
        directFromOrder:
          type: boolean
        createdByAdmin:
          type: boolean
        isRecurring:
          type: boolean
        refOrderNo:
          type: number
          format: double
        refPaymentId:
          type: number
          format: double
        orderId:
          type: string
        isValid:
          type: boolean
        status:
          type: integer
          format: int32
        authCode:
          type: string
        issuerUrl:
          type: string
        paRequest:
          type: string
        pspSessionCookie:
          type: string
        pspResponseCode:
          type: string
        pspResponseMessage:
          type: string
        paymentGatewayId:
          type: integer
          format: int32
        paymentGateway:
          type: string
        tokenId:
          type: string
        payerId:
          type: string
        cardType:
          type: string
        userIPAddress:
          type: string
        fraudScore:
          type: string
        isChargeBack:
          type: boolean
        paymentMethod:
          type: string
        cvcResult:
          type: string
        avsResult:
          type: string
        secure3DResult:
          type: string
        cardHolderName:
          type: string
        issuerCountry:
          type: string
        info1:
          type: string
        settingKey:
          type: string
        postAuthRequestDate:
          type: string
          format: date-time
        postAuthResponseDate:
          type: string
          format: date-time
        isAdditional:
          type: boolean
        orderCustomNo:
          type: string
        adminEmail:
          type: string
        reason:
          type: string
        requestXml:
          type: string
        responseXml:
          type: string
        currencyCode:
          type: string
        refundAmount:
          type: number
          format: double
        isVerify:
          type: boolean
        isValidAddress:
          type: boolean
        paymentStatus:
          type: integer
          format: int32
          readOnly: true
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
        token:
          type: string
        expiryMonth:
          type: string
        expiryYear:
          type: string
        receivedDate:
          type: string
          format: date-time
        comment:
          type: string
        poNumber:
          type: string
        operatorId:
          type: string
        refStoreId:
          type: string
        tillNumber:
          type: string
        externalRefNo:
          type: string
        retryCount:
          type: integer
          format: int32
        isMoto:
          type: boolean
        refundedLines:
          type: string
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.Entities.Common.HeaderCustomInfo:
      type: object
      properties:
        basketId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customInfo4:
          type: string
        customInfo5:
          type: string
        lineInfo:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.LineCustomInfo'
      example:
        basketId: 00000000-0000-0000-0000-000000000000
        customInfo1: cust info 1
        customInfo2: cust info 2
        customInfo3: cust info 3
        customInfo4: cust info 4
        customInfo5: cust info 5
        lineInfo:
        - productId: c61dc642-1f5d-4a3b-8401-f1e1d087ac4c
          parentProductId: 1f0663ba-b054-40c0-b6a8-53f9cd8236e4
          lineId: 123
          customInfo1: cust info 1
          customInfo2: cust info 2
          customInfo3: cust info 3
          customInfo4: cust info 4
          customInfo5: cust info 5
          customInfo1Formatted: <b>cust info 1<b>
          customInfo2Formatted: <i>cust info 2<i>
          customInfo3Formatted: cust info 3
          customInfo4Formatted: cust info 4
          customInfo5Formatted: cust info 5
          qty: 1
          additionalCharge: 0
          serviceType: ""
          lengthMm: 0
          additionalServiceCost: 0
    Omnicx.Entities.Common.LineCustomInfo:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        parentProductId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        lineId:
          type: integer
          format: int64
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customInfo4:
          type: string
        customInfo5:
          type: string
        customInfo1Formatted:
          type: string
        customInfo2Formatted:
          type: string
        customInfo3Formatted:
          type: string
        customInfo4Formatted:
          type: string
        customInfo5Formatted:
          type: string
        qty:
          type: integer
          format: int32
        additionalCharge:
          type: number
          format: double
        serviceType:
          type: string
        lengthMm:
          type: integer
          format: int32
        additionalServiceCost:
          type: number
          format: double
    Omnicx.API20.Models.Commerce.BasketModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModel'
    Omnicx.API20.Models.Catalog.ProductModelIListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModel'
    Omnicx.API20.Models.Catalog.ProductModel:
      type: object
      properties:
        id:
          type: string
        seoName:
          type: string
        barcode:
          type: string
        isFeatured:
          type: boolean
        uom:
          type: string
        uomValue:
          type: number
          format: double
        variant:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.VariantForIndex'
        attributeSet:
          type: string
        relatedProducts:
          type: array
          description: "used to define the display order in which the products have\
            \ to be displayed / rendered in front end.\r\nthis will be useful in relatedProducts,\
            \ basket Upsell/cross sell and eventually when searchandising capability\
            \ is implemented."
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.RelatedProductModel'
        displayOrder:
          type: integer
          format: int32
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        flags:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.FlagForIndex'
        isDiscontinued:
          type: boolean
        freeProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.FreeProductModel'
        link:
          type: string
        componentProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductBundle'
        componentsInStock:
          type: boolean
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductsModel'
        variantProductsAttribute:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductAttributes'
        subscriptionEnabled:
          type: boolean
          description: enable when sell product as subscription
        minPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        maxPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        displayTemplate:
          type: string
        brandLogo:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductAttributeModel'
        recordId:
          type: string
        name:
          type: string
        slug:
          type: string
        stockCode:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        image:
          type: string
        itemType:
          type: integer
          format: int32
        shortDescription:
          type: string
        subscriptionPlanType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        groupName:
          type: string
        brand:
          type: string
        brandSlug:
          type: string
        subBrand:
          type: string
        sku:
          type: string
        priceFrom:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        classification:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.ClassficationForIndex'
        currentStock:
          type: integer
          format: int32
        description:
          type: string
        fulfilFromWarehouse:
          type: boolean
        fulfilFromStore:
          type: boolean
        fulfilFromSupplier:
          type: boolean
        deliveryMessage:
          type: string
        stockAvailabilityMessage:
          type: string
        trending:
          type: boolean
        bestSeller:
          type: boolean
        onSale:
          type: boolean
        newLaunch:
          type: boolean
        exclusive:
          type: boolean
        extendedDescription:
          type: string
        variantProductsMinimal:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductsModelBase'
        variantProductsAttributeMinimal:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductAttributesBase'
        isVisible:
          type: boolean
        isActive:
          type: boolean
        isMasterStock:
          type: boolean
        hasVariant:
          type: boolean
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PromotionModelMinimal'
        preOrder:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PreOrderModelMinimal'
    Omnicx.Entities.Catalog.VariantForIndex:
      type: object
      properties:
        variantInputType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
        listType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
        independentProductUrl:
          type: boolean
        displayInProductWidget:
          type: boolean
        displayInProductDetail:
          type: boolean
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.VariantAttributeForIndex'
        variantInputTypes:
          type: string
    Omnicx.API20.Models.Catalog.RelatedProductModel:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        stockCode:
          type: string
        relatedTypeCode:
          type: string
        relationDirectionCode:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        shortDescription:
          type: string
        description:
          type: string
        image:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        slug:
          type: string
        currentStock:
          type: integer
          format: int32
        brand:
          type: string
        subBrand:
          type: string
        hasVariant:
          type: boolean
        itemType:
          type: integer
          format: int32
        sku:
          type: string
    Omnicx.Entities.Catalog.FlagForIndex:
      type: object
      properties:
        isFreeDelivery:
          type: boolean
        sellWithoutInventory:
          type: boolean
    Omnicx.API20.Models.Catalog.FreeProductModel:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        name:
          type: string
        slug:
          type: string
        brand:
          type: string
        subBrand:
          type: string
        shortDescription:
          type: string
        description:
          type: string
        stockCode:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        image:
          type: string
    Omnicx.API20.Models.Catalog.ProductBundle:
      type: object
      properties:
        productId:
          type: string
        qty:
          type: integer
          format: int32
        id:
          type: string
        recordId:
          type: string
        productCode:
          type: string
        stockCode:
          type: string
        name:
          type: string
        link:
          type: string
        brand:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        image:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductImageModel'
        currentStock:
          type: integer
          format: int32
        rating:
          type: number
          format: double
        isVisible:
          type: boolean
        classification:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ClassficationModel'
        flags:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.FlagModel'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductAttributeModel'
        variantAttributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductAttributes'
        bundleType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
    Omnicx.API20.Models.Catalog.VariantProductsModel:
      type: object
      properties:
        stockCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        slug:
          type: string
        image:
          type: string
        productName:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        isDefault:
          type: boolean
        isPreOrderEnabled:
          type: boolean
        sellWithoutInventory:
          type: boolean
        currentStock:
          type: integer
          format: int32
        description:
          type: string
          description: variant level product description, if its different for variant
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantAttributesModel'
    Omnicx.API20.Models.Catalog.VariantProductAttributes:
      type: object
      properties:
        fieldName:
          type: string
        fieldCode:
          type: string
        fieldLabel:
          type: string
        inputType:
          type: string
        fieldValues:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantAttributesModelMinimal'
        displayInProductDetail:
          type: boolean
        displayInProductWidget:
          type: boolean
    Omnicx.API20.Models.Catalog.ProductAttributeModel:
      type: object
      properties:
        key:
          type: string
        customkey:
          type: string
          readOnly: true
        display:
          type: string
        value:
          type: string
        originalValue:
          type: string
        isVariantAttribute:
          type: boolean
        displayInProductDetail:
          type: boolean
        displayInProductList:
          type: boolean
        groupDisplayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Catalog.ImageModel:
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
        image:
          type: string
        imageTypes:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        url:
          type: string
        mobileUrl:
          type: string
        alt:
          type: string
        link:
          type: string
        description:
          type: string
        subTitle:
          type: string
        linkType:
          type: string
        buttonText:
          type: string
        eventCategory:
          type: string
        eventAction:
          type: string
        gaValue:
          type: string
        isActive:
          type: boolean
        cssClass:
          type: string
        title:
          type: string
        displayOrder:
          type: integer
          format: int32
        imageTags:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.ImageTagModel'
    Omnicx.Entities.Catalog.ClassficationForIndex:
      type: object
      properties:
        categoryId:
          type: string
        categoryCode:
          type: string
        mainCategoryId:
          type: string
        mainCategoryName:
          type: string
        category:
          type: string
        itemTypeCode:
          type: string
        itemType:
          type: string
        attributeSet:
          type: string
        attributeSetId:
          type: string
    Omnicx.API20.Models.Commerce.PromotionModelMinimal:
      type: object
      properties:
        promoCode:
          type: string
        name:
          type: string
    Omnicx.API20.Models.Catalog.PreOrderModelMinimal:
      type: object
      properties:
        isEnabled:
          type: boolean
        launchDateTime:
          type: string
          format: date-time
    Omnicx.Entities.Catalog.VariantAttributeForIndex:
      type: object
      properties:
        fieldName:
          type: string
        fieldCode:
          type: string
        inputType:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.VariantProductForIndex'
    Omnicx.API20.Models.Catalog.ProductImageModel:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        alt:
          type: string
    Omnicx.API20.Models.Catalog.ClassficationModel:
      type: object
      properties:
        categoryCode:
          type: string
        category:
          type: string
        itemTypeCode:
          type: string
        itemType:
          type: string
        attributeSet:
          type: string
        attributeSetId:
          type: string
        mainCategoryId:
          type: string
        mainCategoryName:
          type: string
    Omnicx.API20.Models.Catalog.FlagModel:
      type: object
      properties:
        sellWithoutInventory:
          type: boolean
        isFreeDelivery:
          type: boolean
    Omnicx.API20.Models.Catalog.VariantAttributesModel:
      type: object
      properties:
        fieldCode:
          type: string
        fieldName:
          type: string
        fieldValue:
          type: string
        fieldLabel:
          type: string
    Omnicx.API20.Models.Catalog.VariantAttributesModelMinimal:
      type: object
      properties:
        fieldValue:
          type: string
        fieldLabel:
          type: string
    Omnicx.API20.Models.Content.ImageTagModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        src:
          type: string
        text:
          type: string
        name:
          type: string
        link:
          type: string
        shapes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.Shapes'
        productType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
    Omnicx.Entities.Catalog.VariantProductForIndex:
      type: object
      properties:
        stockCode:
          type: string
        barCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isDefault:
          type: boolean
        fieldValue:
          type: string
        image:
          type: string
        fieldLabel:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        sellPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        productName:
          type: string
        slug:
          type: string
        defaultForFrontend:
          type: boolean
        sellWithoutInventory:
          type: boolean
        currentStock:
          type: integer
          format: int32
        isPreOrderEnabled:
          type: boolean
        enableNotifyMe:
          type: boolean
        isActive:
          type: boolean
        isVisible:
          type: boolean
        description:
          type: string
    Omnicx.Entities.Catalog.Shapes:
      type: object
      properties:
        type:
          type: string
        units:
          type: string
        geometry:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.Geometry'
    Omnicx.Entities.Catalog.Geometry:
      type: object
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double
        width:
          type: number
          format: double
        height:
          type: number
          format: double
    Omnicx.API20.Models.Commerce.BasketBasicModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketBasicModel'
    Omnicx.API20.Models.Commerce.BasketBasicModel:
      type: object
      properties:
        id:
          type: string
        currencySymbol:
          type: string
        currencyCode:
          type: string
        userId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        userEmail:
          type: string
        shippingMethodId:
          type: string
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        shippingCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        discount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        additionalCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        grandTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketLineBasicModel'
        isLocked:
          type: boolean
        createdByAdmin:
          type: boolean
        poNumber:
          type: string
        isQuote:
          type: boolean
        quoteStatus:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        postCode:
          type: string
        hasMembership:
          type: boolean
        exchangeRate:
          type: number
          format: double
        baseCurrency:
          type: string
        microSiteId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        baseCurrencyTotal:
          type: number
          format: double
        membershipDiscount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    Omnicx.API20.Models.Commerce.BasketLineBasicModel:
      type: object
      properties:
        id:
          type: string
        stockCode:
          type: string
        name:
          type: string
        slug:
          type: string
        shortDescription:
          type: string
        productId:
          type: string
        productIid:
          type: string
        parentProductId:
          type: string
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        discount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        additionalCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        totalPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        image:
          type: string
        qty:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
        isSubscription:
          type: boolean
        isMembership:
          type: boolean
        hsnCode:
          type: string
        countryOfOrigin:
          type: string
    Omnicx.API20.Models.Commerce.BasketAddModel:
      type: object
      properties:
        basketId:
          type: string
        productId:
          type: string
        qty:
          type: integer
          format: int32
        manualUnitPrice:
          type: number
          format: double
        displayOrder:
          type: integer
          format: int32
        stockCode:
          type: string
        itemType:
          type: integer
          format: int32
        postCode:
          type: string
        parentProductId:
          type: string
        isSubscription:
          type: boolean
        subscriptionPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subscriptionTermId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        userSubscriptionPricing:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        giftWrapId:
          type: string
        isGiftWrapApplied:
          type: boolean
        lineItemType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
          description: Used for Price Match Request id
        customInfo4:
          type: string
        customInfo5:
          type: string
        priceMatchReqId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isMembership:
          type: boolean
    Omnicx.API20.Models.Commerce.BulkBasketItemAddModel:
      type: object
      properties:
        productId:
          type: string
        stockCode:
          type: string
        productName:
          type: string
        parentProductId:
          type: string
        qty:
          type: integer
          format: int32
        itemType:
          type: integer
          format: int32
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customInfo4:
          type: string
        customInfo5:
          type: string
        customInfo1Formatted:
          type: string
        customInfo2Formatted:
          type: string
        customInfo3Formatted:
          type: string
        customInfo4Formatted:
          type: string
        customInfo5Formatted:
          type: string
        postCode:
          type: string
        isSubscription:
          type: boolean
        subscriptionPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subscriptionTermId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        userSubscriptionPricing:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        displayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Commerce.BasketLineDisplayOrderModel:
      type: object
      properties:
        id:
          type: string
        displayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Commerce.BasketPromoResponseModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketPromoResponseModel'
    Omnicx.API20.Models.Commerce.BasketPromoResponseModel:
      type: object
      properties:
        isVaild:
          type: boolean
        message:
          type: string
        basket:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.BasketModel'
    Omnicx.API20.Models.Commerce.NominatedDeliveryModel:
      type: object
      properties:
        dayText:
          type: string
        dayNo:
          type: integer
          format: int32
        cutOffTime:
          type: integer
          format: int32
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        carrierCode:
          type: string
        deliveryDate:
          type: string
          format: date-time
    Omnicx.API20.Models.Commerce.ShippingPlanUpdateModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        deliveryType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        fulfilmentChannel:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        shippingType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        shippingMethodId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        shippingCharge:
          type: number
          format: double
        pickupStoreId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        refStoreId:
          type: string
        pickupStoreCode:
          type: string
        deliveryCenter:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.DeliveryCenterUpdateModel'
        leadTime:
          type: integer
          format: int32
        leadTimeUom:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        poolCode:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingPlanLineUpdateModel'
    Omnicx.API20.Models.Commerce.DeliveryCenterUpdateModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        code:
          type: string
        name:
          type: string
    Omnicx.API20.Models.Commerce.ShippingPlanLineUpdateModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        basketLineId:
          type: integer
          format: int64
        parentProductId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderLineRecordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        qty:
          type: integer
          format: int32
        fulfilmentChannel:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        created:
          type: string
          format: date-time
        leadTime:
          type: integer
          format: int32
        leadTimeUom:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        deliveryType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        inventoryType:
          type: integer
          format: int32
        poolCode:
          type: string
        lineDeliveryCenterCode:
          type: string
        lineDeliveryCenterId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.Entities.SiteBasket.UpdateField:
      type: object
      properties:
        fieldValue:
          type: string
    Omnicx.API20.Models.Catalog.PhysicalStoreModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postCode:
          type: string
        yourId:
          type: string
        distanceFromPostCode:
          type: number
          format: double
        distanceUnit:
          type: string
        shippingPlanId:
          type: string
        type:
          type: string
        leadTimeUnit:
          type: string
        leadTimeMin:
          type: integer
          format: int32
        leadTimeMax:
          type: integer
          format: int32
        deliveryOption:
          type: string
        shippingAddressId:
          type: string
        openingHours:
          type: string
        slots:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Corporate.DeliverySlot'
        whyDelayMsg1:
          type: string
        whyDelayMsg2:
          type: string
        whyDelayMsg3:
          type: string
        selectedSlot:
          type: string
        phoneNo:
          type: string
        timeslotActual:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        image:
          type: string
        country:
          type: string
        hdnCode:
          type: string
        enableClickCollect:
          type: boolean
    Omnicx.Entities.Corporate.DeliverySlot:
      type: object
      properties:
        slot:
          type: string
        slotMessage:
          type: string
    Omnicx.API20.Models.Commerce.ShippingChargesModel:
      type: object
      properties:
        basketId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingChargesLineModel'
        shippingCharge:
          type: number
          format: double
        tax1:
          type: number
          format: double
        tax2:
          type: number
          format: double
        tax3:
          type: number
          format: double
        tax4:
          type: number
          format: double
        tax5:
          type: number
          format: double
    Omnicx.API20.Models.Commerce.ShippingChargesLineModel:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        tax1:
          type: number
          format: double
        tax2:
          type: number
          format: double
        tax3:
          type: number
          format: double
        tax4:
          type: number
          format: double
        tax5:
          type: number
          format: double
    Omnicx.API20.Models.Catalog.BrandModelPaginatedResultResponseModelWithSnippets:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModelPaginatedResult'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
    Omnicx.API20.Models.Catalog.BrandModelPaginatedResult:
      type: object
      properties:
        total:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        prevPageUrl:
          type: string
        nextPageUrl:
          type: string
        sortList:
          type: array
          items:
            $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
        sortBy:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.ImageItem'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.IndexSearchFilterModel'
        groups:
          type: array
          items:
            type: string
    System.StringSystem.StringKeyValuePair:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        value:
          type: string
          readOnly: true
    Omnicx.Entities.Common.ImageItem:
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
        image:
          type: string
        imageTypes:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        url:
          type: string
        mobileUrl:
          type: string
        id:
          type: string
        alt:
          type: string
        link:
          type: string
        description:
          type: string
        subTitle:
          type: string
        linkType:
          type: string
        buttonText:
          type: string
        eventCategory:
          type: string
        eventAction:
          type: string
        gaValue:
          type: string
        isActive:
          type: boolean
        cssClass:
          type: string
        segment:
          type: string
        title:
          type: string
        displayOrder:
          type: integer
          format: int32
        data:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        imageTags:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ImageTag'
    Omnicx.API20.Models.Catalog.BrandModel:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        manufacturerName:
          type: string
        parentManufacturerName:
          type: string
        logoImageName:
          type: string
        logo:
          type: string
        excludeFromSearch:
          type: boolean
        productImage:
          type: string
        description:
          type: string
        link:
          type: string
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        langCulture:
          type: string
        categoryCode:
          type: string
        displayOrder:
          type: integer
          format: int32
        isActive:
          type: boolean
        isHighlighted:
          type: boolean
        widgetsConfig:
          type: string
    Omnicx.Entities.Common.IndexSearchFilterModel:
      type: object
      properties:
        name:
          type: string
        key:
          type: string
        displayOrder:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.IndexFacetKeyValueModel'
    Omnicx.Entities.Catalog.ImageTag:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        editable:
          type: boolean
        productType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        type:
          type: string
        body:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.AnnotationBody'
        target:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.AnnotationTarget'
        name:
          type: string
        src:
          type: string
        link:
          type: string
    Omnicx.Entities.Common.IndexFacetKeyValueModel:
      type: object
      properties:
        name:
          type: string
        from:
          type: string
        to:
          type: string
        count:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
    Omnicx.Entities.Catalog.AnnotationBody:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
        purpose:
          type: string
        modified:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        creator:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.AnnotationCreator'
    Omnicx.Entities.Catalog.AnnotationTarget:
      type: object
      properties:
        source:
          type: string
        text:
          type: string
        type:
          type: string
        selector:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.AnnotationSelector'
    Omnicx.Entities.Catalog.AnnotationCreator:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
    Omnicx.Entities.Catalog.AnnotationSelector:
      type: object
      properties:
        conformsTo:
          type: string
        type:
          type: string
        value:
          type: string
    Omnicx.API20.Models.Catalog.BrandDetailModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandDetailModel'
    Omnicx.API20.Models.Catalog.BrandDetailModel:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        name:
          type: string
        link:
          type: string
        logoImageName:
          type: string
        productImage:
          type: string
        description:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        parentManufacturerName:
          type: string
        subBrands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SubBrandModel'
        showLandingPage:
          type: boolean
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        productList:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelPaginatedResult'
        displayTemplate:
          type: string
        parentId:
          type: string
        parentIid:
          type: integer
          format: int32
        categoryCode:
          type: string
        isCustomUrl:
          type: boolean
        customURL:
          type: string
        langCulture:
          type: string
        shortDescription:
          type: string
        premiumBrandLogo:
          type: string
        manufacturerSettings:
          type: string
        excludeFromSearch:
          type: boolean
        showSiteStrip:
          type: boolean
        enableMoreAbout:
          type: boolean
        hideBrandVisibility:
          type: boolean
        hideSubbrandVisibility:
          type: boolean
        privateBrandImage:
          type: string
        parentManufSlug:
          type: string
        parentLogoImageName:
          type: string
        isActive:
          type: boolean
        isHighlighted:
          type: boolean
        widgetsConfig:
          type: string
    Omnicx.API20.Models.Catalog.SubBrandModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        link:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModel'
        categoryCode:
          type: string
        displayOrder:
          type: integer
          format: int32
        isActive:
          type: boolean
    Omnicx.API20.Models.Catalog.ProductModelPaginatedResult:
      type: object
      properties:
        total:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        prevPageUrl:
          type: string
        nextPageUrl:
          type: string
        sortList:
          type: array
          items:
            $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
        sortBy:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.ImageItem'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModel'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.IndexSearchFilterModel'
        groups:
          type: array
          items:
            type: string
    Omnicx.API20.Models.Catalog.CategoryModelListResponseModelWithSnippets:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
    Omnicx.API20.Models.Catalog.CategoryModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        link:
          type: string
        description:
          type: string
        isFeatured:
          type: boolean
        breadCrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LocalizedSlugModel'
        image:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        linkGroups:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryLinkGroupModel'
        langCulture:
          type: string
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        displayText:
          type: string
    Omnicx.API20.Models.Catalog.LocalizedSlugModel:
      type: object
      properties:
        slugType:
          type: string
        slug:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.SlugForIndex'
    Omnicx.API20.Models.Catalog.CategoryLinkGroupModel:
      type: object
      properties:
        name:
          type: string
        groupType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        displayOrder:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryLinkModel'
        attributeInputType:
          type: integer
          format: int32
        breadCrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.LocalizedSlugForIndex'
    Omnicx.Entities.Catalog.SlugForIndex:
      type: object
      properties:
        title:
          type: string
        slug:
          type: string
        childSlug:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.SlugForIndex'
    Omnicx.API20.Models.Catalog.CategoryLinkModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        link:
          type: string
        displayOrder:
          type: integer
          format: int32
        info1:
          type: string
        ingo2:
          type: string
    Omnicx.Entities.Catalog.LocalizedSlugForIndex:
      type: object
      properties:
        langCulture:
          type: string
        value:
          type: string
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
        slug:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.SlugForIndex'
    Omnicx.API20.Models.Catalog.CategoryModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
    Omnicx.API20.Models.Commerce.CheckoutModels.GuestCheckoutRequestModel:
      type: object
      properties:
        email:
          type: string
          description: Customer email
        notifyByEmail:
          type: boolean
          description: Notify by email flag
        notifyBySms:
          type: boolean
          description: Notify by SMS flag based on user selection
        notifyByPost:
          type: boolean
          description: Notify by POST flag based on user selection
      description: Model to represent the request object for Guest Checkout
    Omnicx.API20.Models.Commerce.CheckoutModels.LoginCheckoutRequestModel:
      type: object
      properties:
        email:
          type: string
          description: Customer email
        password:
          type: string
          description: Password
      description: Model to represent the request object for Login Checkout
    Omnicx.API20.Models.Commerce.ShippingModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModel'
    Omnicx.API20.Controllers.Commerce.BasketAddressModel:
      type: object
      properties:
        billingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        shippingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
    Omnicx.API20.Models.Commerce.PaymentMethodModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentMethodModel'
    Omnicx.API20.Models.Commerce.PaymentMethodModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        systemName:
          type: string
        displayName:
          type: string
        slug:
          type: string
        isOnsite:
          type: boolean
        enabled:
          type: boolean
        isBillingAddressRequired:
          type: boolean
        displayOrder:
          type: integer
          format: int32
        iconCssClass:
          type: string
        description:
          type: string
        enableImmediateCapture:
          type: boolean
        forSubscription:
          type: boolean
        inputType:
          type: integer
          format: int32
          enum:
          - 10
          - 15
          - 20
        notificationUrl:
          type: string
          description: The Url on which the PSP shall send a confirmation (success
            / failure)
        settings:
          type: array
          items:
            $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
        basicSettings:
          type: array
          items:
            $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
    Omnicx.API20.Models.Commerce.CheckoutModel:
      type: object
      properties:
        id:
          type: string
        basketId:
          type: string
        customerId:
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressBasicModel'
        billingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressBasicModel'
        selectedShipping:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModel'
        storeAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModel'
        selectedPayment:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentMethodModel'
        payment:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
        paymentOptions:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentMethodModel'
        balanceAmount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        paidAmount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        giftOrMe:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        stage:
          type: integer
          format: int32
        companyId:
          type: string
        createdBy:
          type: string
        refStoreId:
          type: string
        tillNumber:
          type: string
        externalRefNo:
          type: string
        membershipDiscountUsed:
          type: boolean
        orderType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
        parentOrderNo:
          type: string
    Omnicx.API20.Models.Commerce.PaymentModel:
      type: object
      properties:
        id:
          type: string
        cardNo:
          type: string
        orderNo:
          type: integer
          format: int64
        orderAmount:
          type: number
          format: double
        paidAmount:
          type: number
          format: double
        balanceAmount:
          type: number
          format: double
        isValid:
          type: boolean
        status:
          type: integer
          format: int32
        authCode:
          type: string
        issuerUrl:
          type: string
        paRequest:
          type: string
        pspSessionCookie:
          type: string
        pspResponseCode:
          type: string
        pspResponseMessage:
          type: string
        paymentGatewayId:
          type: integer
          format: int32
        paymentGateway:
          type: string
        token:
          type: string
        payerId:
          type: string
        cvcResult:
          type: string
        avsResult:
          type: string
        secure3DResult:
          type: string
        cardHolderName:
          type: string
        issuerCountry:
          type: string
        info1:
          type: string
        fraudScore:
          type: string
        paymentMethod:
          type: string
        cardType:
          type: string
        operatorId:
          type: string
        refStoreId:
          type: string
        tillNumber:
          type: string
        externalRefNo:
          type: string
        expiryYear:
          type: string
        expiryMonth:
          type: string
        isMoto:
          type: boolean
        upFrontPayment:
          type: boolean
        upFrontAmount:
          type: number
          format: double
        upFrontTerm:
          type: integer
          format: int32
        isPrePaid:
          type: boolean
        refundAmount:
          type: number
          format: double
    Omnicx.API20.Models.Commerce.OrderModelResponseModelWithSnippets:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
    Omnicx.API20.Models.Commerce.OrderModel:
      type: object
      properties:
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PromotionModel'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineModel'
        shipping:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModel'
        paymentMethod:
          type: string
          description: System name for the selected payment gateway
        payment:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
        customer:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerBasicModel'
        basketId:
          type: string
        customerId:
          type: string
        currencyCode:
          type: string
        currencySymbol:
          type: string
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customInfo4:
          type: string
        customInfo5:
          type: string
        additionalCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        companyDiscount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        trackingNo:
          type: string
        trackingLink:
          type: string
        hasSubscription:
          type: boolean
        isRecurringOrder:
          type: boolean
        isSeedOrder:
          type: boolean
        seedOrderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subscriptionPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subscriptionTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        refStoreId:
          type: string
        tillNumber:
          type: string
        externalRefNo:
          type: string
        isPrepaid:
          type: boolean
        externalStatus:
          type: string
        shippingPlanId:
          type: string
        shipmentDate:
          type: string
          format: date-time
        customNo:
          type: string
        exchangeRate:
          type: number
          format: double
        baseCurrency:
          type: string
        microSiteId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        rmAs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicInfoModel'
        externalAccountingId:
          type: string
        id:
          type: string
        orderNo:
          type: string
        orderDate:
          type: string
          format: date-time
        orderStatus:
          type: string
        grandTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        taxPercent:
          type: number
          format: double
        createdBy:
          type: string
        createdByAdmin:
          type: boolean
        shippingCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        discount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        balanceAmount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        paidAmount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        itemsBasic:
          type: array
          description: List of items containing basic details of the items that are
            sufficient to display in a listing
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineBasicModel'
        billingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        shippingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        membershipPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        hasMembership:
          type: boolean
        membershipTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        deliveryPlans:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
        orderType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
        carrierShippingMethodCode:
          type: string
        carrierShippingMethodName:
          type: string
        shippingMethodId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      description: Object to represent the detailed Order Model
    Omnicx.API20.Models.Commerce.OrderLineModel:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        productIId:
          type: string
        stockCode:
          type: string
        name:
          type: string
        manufacturer:
          type: string
        subManufacturer:
          type: string
        qty:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        discountAmt:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        shippedQty:
          type: integer
          format: int32
        totalPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        image:
          type: string
        availableQty:
          type: integer
          format: int32
        slug:
          type: string
        categoryItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryItemModel'
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customInfo4:
          type: string
        customInfo5:
          type: string
        customInfo1Formatted:
          type: string
        customInfo2Formatted:
          type: string
        customInfo3Formatted:
          type: string
        customInfo4Formatted:
          type: string
        customInfo5Formatted:
          type: string
        additionalCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        parentProductId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        itemType:
          type: integer
          format: int32
        displayInBasket:
          type: boolean
        companyDiscount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        shortDescription:
          type: string
        isSubscription:
          type: boolean
        isGiftWrapApplied:
          type: boolean
        giftWrapId:
          type: string
        giftWrapConfig:
          type: string
        couponProvider:
          type: string
        priceMatchReqId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isMembership:
          type: boolean
        priceWithoutTax:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        externalStatus:
          type: string
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        statusCode:
          type: string
    Omnicx.API20.Models.Commerce.CustomerBasicModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        companyId:
          type: string
          description: Company properties populated ONLY when the order is placed
            by a company
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyName:
          type: string
        companyRegNo:
          type: string
        companyTaxRegNo:
          type: string
    Omnicx.API20.Models.Commerce.ReturnBasicInfoModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        customNo:
          type: string
    Omnicx.API20.Models.Commerce.OrderLineBasicModel:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        stockCode:
          type: string
        name:
          type: string
        manufacturer:
          type: string
        subManufacturer:
          type: string
        qty:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
        image:
          type: string
        slug:
          type: string
        price:
          type: number
          format: double
        discountAmt:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        listPrice:
          type: number
          format: double
        priceWithoutTax:
          type: number
          format: double
        displayInBasket:
          type: boolean
        shippedQty:
          type: integer
          format: int32
        returnQty:
          type: integer
          format: int32
        availableQty:
          type: integer
          format: int32
        itemType:
          type: integer
          format: int32
        companyDiscount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        shortDescription:
          type: string
        isSubscription:
          type: boolean
        isMembership:
          type: boolean
        statusCode:
          type: string
    Omnicx.Entities.Shipping.ShippingPlan:
      type: object
      properties:
        fulfilmentChannel:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        deliveryType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        deliveryCenter:
          $ref: '#/components/schemas/Omnicx.Entities.Shipping.DeliveryCenterBasic'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlanLine'
        distanceInMiles:
          type: number
          format: double
        shippingMethodId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        shippingMethodName:
          type: string
        cost:
          type: number
          format: double
        shippingCharge:
          type: number
          format: double
        shippingSpeed:
          type: string
          readOnly: true
        deliveryDateTarget:
          type: string
          format: date-time
          readOnly: true
        deliveryDateActual:
          type: string
          format: date-time
        leadTime:
          type: integer
          format: int32
        leadTimeUom:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        leadTimeMin:
          type: integer
          format: int32
        leadTimeMax:
          type: integer
          format: int32
        pickupStoreId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        refStoreId:
          type: string
        pickupStoreCode:
          type: string
        shippingType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        trackingLink:
          type: string
        trackingNo:
          type: string
        deliveryOption:
          type: string
        shippingPlanId:
          type: string
        orderNo:
          type: string
        poolCode:
          type: string
        statusTypeLabel:
          type: string
        carrierCode:
          type: string
        carrierServiceKey:
          type: string
        isLabelGenerated:
          type: boolean
        invoiceId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        invoiceNo:
          type: string
        statusType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        targetDate:
          type: string
          format: date-time
        availableQty:
          type: integer
          format: int32
        shippingMethodCode:
          type: string
        refStoreName:
          type: string
        deliveryFulfilmentCenter:
          type: string
        numberOfBoxes:
          type: integer
          format: int32
        shipWithoutTrackingNo:
          type: boolean
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.API20.Models.Commerce.OrderModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
    Omnicx.API20.Models.Catalog.CollectionModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CollectionModel'
    Omnicx.API20.Models.Catalog.CollectionModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        dataSource:
          type: integer
          format: int32
        ruleType:
          type: integer
          format: int32
        noOfRecords:
          type: integer
          format: int32
        sortBy:
          type: integer
          format: int32
        products:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModel'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        subBrands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        link:
          type: string
        mainImage:
          type: string
    Omnicx.API20.Models.Catalog.DynamicListModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListModel'
    Omnicx.API20.Models.Catalog.DynamicListModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        listType:
          type: integer
          format: int32
        products:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelPaginatedResult'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        subBrands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        blogs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.BlogModel'
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        allowFacets:
          type: boolean
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.IndexSearchFilterModel'
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ListDatasetFilter'
        pageSize:
          type: integer
          format: int32
        sortBy:
          type: string
        link:
          type: string
        groupSeparator:
          type: string
        groupCode:
          type: string
        displayTitle:
          type: boolean
        groups:
          type: array
          items:
            type: string
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customFieldValue:
          type: string
        customFieldDisplayOrder:
          type: string
        description:
          type: string
        mainImage:
          type: string
        image1:
          type: string
        image2:
          type: string
        image3:
          type: string
        image4:
          type: string
        imageAnnotationsJson:
          type: string
        imageAnnotationsJson1:
          type: string
        imageAnnotationsJson2:
          type: string
        imageAnnotationsJson3:
          type: string
        imageAnnotationsJson4:
          type: string
        displayGroupName:
          type: string
        imageBy:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        createdBy:
          type: string
        customLinks:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.DynamicListCustomLinks'
        categoryId:
          type: integer
          format: int32
    Omnicx.API20.Models.Content.BlogModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        title:
          type: string
        body:
          type: string
        author:
          type: string
        authorId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        category:
          type: string
        categoryId:
          type: string
        tag:
          type: string
        url:
          type: string
        isPublish:
          type: boolean
        abstract:
          type: string
        blogImage:
          type: string
        editorImage:
          type: string
        editorBio:
          type: string
        typeId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        blogTypeName:
          type: string
        created:
          type: string
          format: date-time
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        blogSummary:
          type: string
        canonicalTags:
          type: string
        link:
          type: string
        categorySlug:
          type: string
        editorSlug:
          type: string
    Omnicx.Entities.Catalog.ListDatasetFilter:
      type: object
      properties:
        attributeType:
          type: integer
          format: int32
        operand:
          type: string
        groupId:
          type: integer
          format: int32
        operator:
          type: string
        attributeValue:
          type: string
        attributeText:
          type: string
        fieldCode:
          type: string
        fieldName:
          type: string
    Omnicx.Entities.Catalog.DynamicListCustomLinks:
      type: object
      properties:
        label:
          type: string
        link:
          type: string
        displayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Catalog.DynamicListProductMinimalModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DynamicListProductMinimalModel'
    Omnicx.API20.Models.Catalog.DynamicListProductMinimalModel:
      type: object
      properties:
        products:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResult'
        id:
          type: string
        name:
          type: string
        listType:
          type: integer
          format: int32
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        subBrands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        blogs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.BlogModel'
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        allowFacets:
          type: boolean
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.IndexSearchFilterModel'
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ListDatasetFilter'
        pageSize:
          type: integer
          format: int32
        sortBy:
          type: string
        link:
          type: string
        groupSeparator:
          type: string
        groupCode:
          type: string
        displayTitle:
          type: boolean
        groups:
          type: array
          items:
            type: string
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
        customFieldValue:
          type: string
        customFieldDisplayOrder:
          type: string
        description:
          type: string
        mainImage:
          type: string
        image1:
          type: string
        image2:
          type: string
        image3:
          type: string
        image4:
          type: string
        imageAnnotationsJson:
          type: string
        imageAnnotationsJson1:
          type: string
        imageAnnotationsJson2:
          type: string
        imageAnnotationsJson3:
          type: string
        imageAnnotationsJson4:
          type: string
        displayGroupName:
          type: string
        imageBy:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        createdBy:
          type: string
        customLinks:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.DynamicListCustomLinks'
        categoryId:
          type: integer
          format: int32
    Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResult:
      type: object
      properties:
        total:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        prevPageUrl:
          type: string
        nextPageUrl:
          type: string
        sortList:
          type: array
          items:
            $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
        sortBy:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.ImageItem'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductMinimal'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Common.IndexSearchFilterModel'
        groups:
          type: array
          items:
            type: string
    Omnicx.API20.Models.Catalog.ProductMinimal:
      type: object
      properties:
        recordId:
          type: string
        name:
          type: string
        slug:
          type: string
        stockCode:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        image:
          type: string
        itemType:
          type: integer
          format: int32
        shortDescription:
          type: string
        subscriptionPlanType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        groupName:
          type: string
        brand:
          type: string
        brandSlug:
          type: string
        subBrand:
          type: string
        sku:
          type: string
        priceFrom:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        classification:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.ClassficationForIndex'
        currentStock:
          type: integer
          format: int32
        description:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductAttributeModelMinimal'
        fulfilFromWarehouse:
          type: boolean
        fulfilFromStore:
          type: boolean
        fulfilFromSupplier:
          type: boolean
        deliveryMessage:
          type: string
        stockAvailabilityMessage:
          type: string
        trending:
          type: boolean
        bestSeller:
          type: boolean
        onSale:
          type: boolean
        newLaunch:
          type: boolean
        exclusive:
          type: boolean
        extendedDescription:
          type: string
        variantProductsMinimal:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductsModelBase'
        variantProductsAttributeMinimal:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductAttributesBase'
        isVisible:
          type: boolean
        isActive:
          type: boolean
        isMasterStock:
          type: boolean
        hasVariant:
          type: boolean
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PromotionModelMinimal'
        preOrder:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PreOrderModelMinimal'
        seoName:
          type: string
    Omnicx.API20.Models.Catalog.ProductAttributeModelMinimal:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        display:
          type: string
    Omnicx.API20.Models.Infrastructure.ConfigContainerModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.ConfigContainerModel'
    Omnicx.API20.Models.Infrastructure.ConfigContainerModel:
      type: object
      properties:
        configSettings:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.ConfigModel'
        shippingCountries:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.CountryModel'
        billingCountries:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.CountryModel'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.CurrencyModel'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.LanguageModel'
        reviewSettings:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewSectionModel'
        geoLocators:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.GeoLocatorModel'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
    Omnicx.API20.Models.Infrastructure.ConfigModel:
      type: object
      properties:
        configType:
          type: string
        configKeys:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Infrastructure.ConfigKeyModel'
    Omnicx.API20.Models.Infrastructure.CountryModel:
      type: object
      properties:
        name:
          type: string
        twoLetterIsoCode:
          type: string
          description: Gets or sets the 2 letter currency code
    Omnicx.API20.Models.Infrastructure.CurrencyModel:
      type: object
      properties:
        name:
          type: string
        currencyCode:
          type: string
          description: Gets or sets the 3 letter currency code
        currencySymbol:
          type: string
          description: Gets or sets the currency symbol
    Omnicx.API20.Models.Infrastructure.LanguageModel:
      type: object
      properties:
        name:
          type: string
        languageCode:
          type: string
        languageCulture:
          type: string
          description: Gets or sets the language culture
    Omnicx.API20.Models.Catalog.ProductReviewSectionModel:
      type: object
      properties:
        sectionName:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.SectionOptionModel'
    Omnicx.API20.Models.Infrastructure.GeoLocatorModel:
      type: object
      properties:
        pluginCode:
          type: string
        accessKey:
          type: string
        userName:
          type: string
        password:
          type: string
        url:
          type: string
        enableDeliverySlot:
          type: boolean
    Omnicx.API20.Models.Infrastructure.ConfigKeyModel:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Omnicx.API20.Models.Catalog.SectionOptionModel:
      type: object
      properties:
        name:
          type: string
        isChecked:
          type: boolean
    Omnicx.API20.Models.Content.FaqModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqModel'
    Omnicx.API20.Models.Content.FaqModel:
      type: object
      properties:
        categoryId:
          type: string
        categoryName:
          type: string
        id:
          type: integer
          format: int64
        question:
          type: string
        answer:
          type: string
    Omnicx.API20.Models.Content.HelpCenterModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.HelpCenterModel'
    Omnicx.API20.Models.Content.HelpCenterModel:
      type: object
      properties:
        categoryId:
          type: string
        categoryName:
          type: string
        childItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.FaqBaseModel'
    Omnicx.API20.Models.Content.FaqBaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        question:
          type: string
        answer:
          type: string
    System.StringSystem.StringKeyValuePairListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
    Omnicx.API20.Models.Content.SiteNavContainerModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavContainerModel'
    Omnicx.API20.Models.Content.SiteNavContainerModel:
      type: object
      properties:
        header:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavModel'
        footer:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavModel'
    Omnicx.API20.Models.Content.SiteNavModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        caption:
          type: string
        navPosition:
          type: integer
          format: int32
        widthPct:
          type: integer
          format: int32
        alignmentType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
        displayOrder:
          type: integer
          format: int32
        columnCount:
          type: integer
          format: int32
        isTopNav:
          type: boolean
        headerContent:
          type: string
        footerCotent:
          type: string
        htmlAttrinutes:
          type: string
        hyperlink:
          type: string
        channels:
          type: string
        navBlocks:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavBlockModel'
        childSiteNavs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavModel'
        siteNavVersion:
          type: integer
          format: int32
    Omnicx.API20.Models.Content.SiteNavBlockModel:
      type: object
      properties:
        itemIds:
          type: string
        boxTitle:
          type: string
        navBlockType:
          type: integer
          format: int32
          enum:
          - 1
          - 3
          - 6
          - 7
          - 8
          - 9
        widthPct:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
        columnCount:
          type: integer
          format: int32
        showImages:
          type: boolean
        showViewAllLink:
          type: boolean
        contentBody:
          type: string
        placementRow:
          type: integer
          format: int32
        placementColumn:
          type: integer
          format: int32
        navItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteNavBlockItemModel'
    Omnicx.API20.Models.Content.SiteNavBlockItemModel:
      type: object
      properties:
        caption:
          type: string
        itemType:
          type: string
        itemId:
          type: string
        parentItemId:
          type: string
        itemLink:
          type: string
        itemImageSrc:
          type: string
        alternateText:
          type: string
        target:
          type: string
        highlightItem:
          type: string
        highlightCssClass:
          type: string
        displayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Content.FeedModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Content.FeedModel'
    Omnicx.API20.Models.Content.FeedModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        feedName:
          type: string
        slug:
          type: string
        blobPath:
          type: string
        downloadLink:
          type: string
    Omnicx.API20.Models.Content.UrlMappingModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.UrlMappingModel'
    Omnicx.API20.Models.Content.UrlMappingModel:
      type: object
      properties:
        oldUrl:
          type: string
        newUrl:
          type: string
        redirectTypeValue:
          type: integer
          format: int32
    Omnicx.API20.Models.Commerce.MasterDataModelIListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MasterDataModel'
    Omnicx.API20.Models.Commerce.MasterDataModel:
      type: object
      properties:
        table:
          type: integer
          description: Table Id for the record
          format: int32
          enum:
          - 6
          - 16
          - 17
          - 22
          - 23
          - 24
          - 25
          - 27
          - 28
          - 29
          - 30
          - 31
          - 34
          - 40
          - 41
          - 42
          - 438
          - 439
          - 440
          - 441
          - 442
          - 443
          - 444
          - 445
          - 446
          - 447
          - 448
          - 449
          - 450
          - 1001
          - 1002
          - 1003
          - 1005
          - 1006
          - 1007
          - 1009
          - 1010
          - 1011
          - 1012
          - 1013
          - 1014
          - 1015
          - 1016
          - 1017
          - 1018
          - 1019
          - 1020
          - 1021
          - 1022
          - 1023
          - 1025
          - 1026
          - 1027
          - 1028
          - 1029
          - 1030
          - 1031
          - 1032
          - 1033
          - 1034
          - 1035
          - 1036
          - 1037
          - 1038
          - 1039
          - 1040
          - 1041
          - 1101
          - 1102
          - 1103
          - 1104
          - 1105
          - 1200
          - 1302
          - 1304
          - 1305
          - 1306
          - 1307
          - 1308
          - 1400
          - 1401
          - 1500
          - 1600
          - 2000
          - 2001
          - 2002
          - 2003
        isActive:
          type: boolean
        customField1:
          type: string
        customField2:
          type: string
        customField3:
          type: string
        customField4:
          type: string
        itemValue:
          type: string
        itemText:
          type: string
        displayOrder:
          type: integer
          format: int32
        parentItemValue:
          type: string
        isDefault:
          type: boolean
    Omnicx.API20.Models.Content.TemplateModel:
      type: object
      properties:
        domainId:
          type: string
        selectedCulture:
          type: string
        templateType:
          type: integer
          format: int32
    Omnicx.API20.Models.Commerce.CustomerModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModel'
    Omnicx.API20.Models.Commerce.CustomerModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        title:
          type: string
        telephone:
          type: string
        mobile:
          type: string
        gender:
          type: string
        nickName:
          type: string
        dayOfBirth:
          type: string
        monthOfBirth:
          type: string
        yearOfBirth:
          type: string
        birthDate:
          type: string
        postCode:
          type: string
        newsLetterSubscribed:
          type: boolean
        userSourceType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 7
          - 8
          - 9
          - 10
        referralType:
          type: string
          enum:
          - Direct
          - PayPerClick
          - Froogle
          - Portals
          - Bing
          - Store
          - PhoneOrder
          - TrxEmail
          - Facebook
          - Email
          - SearchEngine
          - Webgains
          - Hsbc
          - All
        userReferrer:
          type: string
        address:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressBasicModel'
        companyId:
          type: string
          description: Company details populated in case its a B2B user.
        companyName:
          type: string
        businessType:
          type: string
        registeredNumber:
          type: string
        priceListId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyUserRole:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        isRegistered:
          type: boolean
        notifyByEmail:
          type: boolean
        notifyBySMS:
          type: boolean
        notifyByPost:
          type: boolean
        sourceProcess:
          type: string
        isWelcomeEmailSent:
          type: boolean
        isPromptPasswordChange:
          type: boolean
        isForcePasswordChange:
          type: boolean
        isCreatedByAdmin:
          type: boolean
        isConvertCompanyRequest:
          type: boolean
        hasSubscription:
          type: boolean
        hasMembership:
          type: boolean
        externalAccountingId:
          type: string
        registrationSource:
          type: string
        hasSubscribed:
          type: boolean
        customerGroupId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        urlReferrer:
          type: string
        sourceSection:
          type: string
    Omnicx.API20.Models.Commerce.CustomerExistModel:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
    Omnicx.API20.Models.Common.LoginModel:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Omnicx.API20.Models.Commerce.CustomerModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CustomerModel'
    Omnicx.API20.Models.Commerce.CustomerCreateModel:
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        title:
          type: string
        telephone:
          type: string
        mobile:
          type: string
        gender:
          type: string
        password:
          type: string
        nickName:
          type: string
        dayOfBirth:
          type: string
        monthOfBirth:
          type: string
        yearOfBirth:
          type: string
        birthDate:
          type: string
        postCode:
          type: string
        newsLetterSubscribed:
          type: boolean
        userSourceType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 7
          - 8
          - 9
          - 10
        referralType:
          type: string
          enum:
          - Direct
          - PayPerClick
          - Froogle
          - Portals
          - Bing
          - Store
          - PhoneOrder
          - TrxEmail
          - Facebook
          - Email
          - SearchEngine
          - Webgains
          - Hsbc
          - All
        userReferrer:
          type: string
        companyName:
          type: string
        notifyByEmail:
          type: boolean
        notifyBySMS:
          type: boolean
        notifyByPost:
          type: boolean
        registrationSource:
          type: string
    Omnicx.API20.Models.Commerce.NewsletterCreateModel:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        notifyByEmail:
          type: boolean
        notifyBySMS:
          type: boolean
        notifyByPost:
          type: boolean
        urlReferrer:
          type: string
        sourceSection:
          type: string
        sourceProcess:
          type: string
    Omnicx.Entities.Membership.SiteUserMembershipBenefitListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Membership.SiteUserMembershipBenefit'
    Omnicx.Entities.Membership.SiteUserMembershipBenefit:
      type: object
      properties:
        siteUserMembershipId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        userId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        email:
          type: string
        promoCode:
          type: string
        voucher:
          type: string
        promoName:
          type: string
        orderNo:
          type: string
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        validityStart:
          type: string
          format: date-time
        validityEnd:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        claimDate:
          type: string
          format: date-time
        membershipBarcodeUrl:
          type: string
        voucherBarCodeUrl:
          type: string
        discountPct:
          type: integer
          format: int32
        membershipOrderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.API20.Models.Commerce.MembershipPlanUpgradeOptionsModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanUpgradeOptionsModel'
    Omnicx.API20.Models.Commerce.MembershipPlanUpgradeOptionsModel:
      type: object
      properties:
        shippingMethodMappings:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Membership.MembershipShippingMethodMapping'
        membershipBenefits:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Membership.MembershipPromotionBenefits'
        membershipPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        membershipPlanName:
          type: string
        stockCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        noOfVouchers:
          type: integer
          format: int32
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        membershipPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        membershipSKU:
          type: string
        displayOrder:
          type: integer
          format: int32
        upgradeFromMembershipId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        upgradeFromMembershipName:
          type: string
    Omnicx.Entities.Membership.MembershipShippingMethodMapping:
      type: object
      properties:
        membershipPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        shippingMethodId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        price:
          type: number
          format: double
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.Entities.Membership.MembershipPromotionBenefits:
      type: object
      properties:
        code:
          type: string
        noOfVoucher:
          type: integer
          format: int32
        voucher:
          type: string
        promotionId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.API20.Models.Catalog.ProductBasicModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductBasicModel'
    Omnicx.API20.Models.Catalog.ProductBasicModel:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        name:
          type: string
        slug:
          type: string
        stockCode:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductImageModel'
        image:
          type: string
        itemType:
          type: integer
          format: int32
        shortDescription:
          type: string
        groupName:
          type: string
        brand:
          type: string
        brandSlug:
          type: string
        subBrand:
          type: string
        sku:
          type: string
        priceFrom:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        classification:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.ClassficationForIndex'
        currentStock:
          type: integer
          format: int32
        description:
          type: string
        deliveryMessage:
          type: string
        stockAvailabilityMessage:
          type: string
        extendedDescription:
          type: string
        isVisible:
          type: boolean
        isActive:
          type: boolean
        seoName:
          type: string
    Omnicx.API20.Models.Commerce.OrderListItemModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderListItemModel'
    Omnicx.API20.Models.Commerce.OrderListItemModel:
      type: object
      properties:
        id:
          type: string
        orderNo:
          type: string
        orderDate:
          type: string
          format: date-time
        orderStatus:
          type: string
        grandTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        taxPercent:
          type: number
          format: double
        createdBy:
          type: string
        createdByAdmin:
          type: boolean
        shippingCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        discount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        balanceAmount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        paidAmount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        itemsBasic:
          type: array
          description: List of items containing basic details of the items that are
            sufficient to display in a listing
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderLineBasicModel'
        billingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        shippingAddress:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.AddressModel'
        shipping:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ShippingModel'
        paymentMethod:
          type: string
          description: System name for the selected payment gateway
        customerId:
          type: string
        currencyCode:
          type: string
        currencySymbol:
          type: string
        trackingNo:
          type: string
        trackingLink:
          type: string
        membershipPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        hasMembership:
          type: boolean
        membershipTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        deliveryPlans:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Shipping.ShippingPlan'
        orderType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
        carrierShippingMethodCode:
          type: string
        carrierShippingMethodName:
          type: string
        shippingMethodId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      description: Object to represent Order for displaying list of orders in My Account
    Omnicx.API20.Models.Commerce.ReturnBasicModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModel'
    Omnicx.API20.Models.Commerce.ReturnBasicModel:
      type: object
      properties:
        returnId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        returnNo:
          type: string
        returnDate:
          type: string
          format: date-time
        returnRequestedBy:
          type: string
        email:
          type: string
        returnStatusLabel:
          type: string
        returnStatus:
          type: integer
          format: int32
        reasonForReturn:
          type: string
        requiredAction:
          type: string
        comment:
          type: string
        refundAmount:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        refundCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        orderId:
          type: string
        orderNumber:
          type: string
        orderDate:
          type: string
          format: date-time
        orderStatus:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        orderStatusLabel:
          type: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnLineBasicModel'
        currencyCode:
          type: string
        currencySymbol:
          type: string
        grandTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        shippingCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        tax:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
    Omnicx.API20.Models.Commerce.ReturnLineBasicModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        productId:
          type: string
        stockCode:
          type: string
        name:
          type: string
        manufacturer:
          type: string
        subManufacturer:
          type: string
        orderQty:
          type: integer
          format: int32
        shippedQty:
          type: integer
          format: int32
        returnQtyRequested:
          type: integer
          format: int32
        returnQtyRecd:
          type: integer
          format: int32
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        discountAmt:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        totalPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        slug:
          type: string
        image:
          type: string
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        statusCode:
          type: string
        reasonForReturn:
          type: string
        requiredAction:
          type: string
        comment:
          type: string
    Omnicx.API20.Models.Commerce.ReturnBasicModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnBasicModel'
    Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModel'
    Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyOrderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: integer
          format: int32
        subscriptionPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subscriptionPlanName:
          type: string
        planType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        interval:
          $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionInterval'
        maxPauseUnit:
          type: integer
          format: int32
        pauseDuration:
          type: integer
          format: int32
        termType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
        pricingType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        userTerm:
          $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionInterval'
        userPricingPreference:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        orderTriggerDayOfWeek:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        orderTriggerMonth:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
        orderTriggerType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
        autoRenewal:
          type: boolean
        allowPause:
          type: boolean
        enableOneTimeFee:
          type: boolean
        isTaxInclusive:
          type: boolean
        allowCancellation:
          type: boolean
        allowOrderEditing:
          type: boolean
        editOrderBeforeDays:
          type: integer
          format: int32
        renewalAlertDays:
          type: integer
          format: int32
        orderTriggerDayOfMonth:
          type: string
        recurringPaymentDayOfMonth:
          type: integer
          format: int32
        minQty:
          type: integer
          format: int32
        maxQty:
          type: integer
          format: int32
        totalFee:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        oneTimeFee:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        recurringFee:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        signUpFee:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        cancellationFee:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        createdOn:
          type: string
          format: date-time
    Omnicx.Entities.Subscription.SubscriptionInterval:
      type: object
      properties:
        duration:
          type: integer
          format: int32
        intervalType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 5
    Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModel'
    Omnicx.API20.Models.Commerce.SubscriptionFulfilmentOrderModel:
      type: object
      properties:
        seedOrderDetail:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionSeedOrderModel'
        orderSchedule:
          type: array
          description: Contains the schedule for which we are generating fulfilment
            order.
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.SubscriptionOrderScheduleModel'
        subscriptionOrderLine:
          type: array
          description: Contains the subscription items ordered by customer.
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionOrderLine'
        deliveredItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Subscription.SubscriptionOrderLine'
        userId:
          type: string
          description: User for which we are creating fulfillment order.
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        cancellationOptions:
          type: array
          items:
            type: string
      description: Contains Request to generate fulfilment order for seed order.
    Omnicx.API20.Models.Commerce.SubscriptionOrderScheduleModel:
      type: object
      properties:
        parentOrderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        seedOrderId:
          type: string
          description: Foreign Key Reference to the SubscriptionSeedOrder.Id. Reference
            to the Seed Order
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          description: "OrderId for the order generated against this specific scheduled\
            \ order.\r\nThis field shall remain blank until the order is generated\
            \ on the scheduled date"
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderCustomNo:
          type: string
          description: Order No. with reference to OrderId
        scheduledGenerationDate:
          type: string
          format: date-time
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productName:
          type: string
        imageUrl:
          type: string
        manufacturerName:
          type: string
        subManufacturerName:
          type: string
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
        companyOrderLineId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayOrder:
          type: integer
          format: int32
        isDiscounted:
          type: boolean
        discountPct:
          type: number
          format: double
    Omnicx.Entities.Subscription.SubscriptionOrderLine:
      type: object
      properties:
        productId:
          type: string
        stockCode:
          type: string
        productName:
          type: string
        displayOrder:
          type: integer
          format: int32
        paidOrderSequence:
          type: integer
          format: int32
        lineId:
          type: string
        image:
          type: string
        manufacturerName:
          type: string
        subManufacturerName:
          type: string
        imageUrl:
          type: string
        attributeXml:
          type: string
        scheduledOn:
          type: string
          format: date-time
        dispatchedOn:
          type: string
          format: date-time
        review:
          $ref: '#/components/schemas/Omnicx.Entities.Subscription.ProductReview'
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        isPrepaid:
          type: boolean
        isManualPrice:
          type: boolean
        manualPrice:
          type: number
          format: double
        companyOrderLineId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isDiscounted:
          type: boolean
        discountPct:
          type: number
          format: double
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.Entities.Subscription.ProductReview:
      type: object
      properties:
        title:
          type: string
        rating:
          type: integer
          format: int32
        comment:
          type: string
        postedBy:
          type: string
    Omnicx.API20.Models.Commerce.UserPasswordTokenModel:
      type: object
      properties:
        token:
          type: string
        userName:
          type: string
        password:
          type: string
    Omnicx.API20.Models.Common.ChangePasswordModel:
      type: object
      properties:
        userId:
          type: string
        oldPassword:
          type: string
        newPassword:
          type: string
    Omnicx.API20.Models.Catalog.LookbookModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LookbookModel'
    Omnicx.API20.Models.Catalog.LookbookModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        groupName:
          type: string
        description:
          type: string
        slug:
          type: string
        mainImage:
          type: string
        customInfo1:
          type: string
        customInfo2:
          type: string
        customInfo3:
          type: string
    Omnicx.Entities.Subscription.SubscriptionFilter:
      type: object
      properties:
        searchText:
          type: string
        pricingType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
        name:
          type: string
        termType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
        isActive:
          type: integer
          format: int32
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        categoryId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        manufacturerId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subManufacturerId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        planType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        isMembership:
          type: boolean
        currencyCode:
          type: string
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.API20.Models.Commerce.MembershipPlanModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MembershipPlanModel'
    Omnicx.API20.Models.Commerce.MembershipPlanModel:
      type: object
      properties:
        recordId:
          type: string
          description: ""
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        isActive:
          type: boolean
        stockCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        isMembership:
          type: boolean
        shippingMethodMappings:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Membership.MembershipShippingMethodMapping'
        membershipBenefits:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Membership.MembershipPromotionBenefits'
        intervalDurationType:
          type: integer
          format: int32
        noOfVouchers:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Content.MicrositeModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.MicrositeModel'
    Omnicx.API20.Models.Content.MicrositeModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        slug:
          type: string
        logo:
          type: string
        isPrimary:
          type: boolean
        priority:
          type: integer
          format: int32
        displayOrder:
          type: integer
          format: int32
        siteType:
          type: integer
          format: int32
        countryCode:
          type: string
        defaultLangCode:
          type: string
        defaultLangCulture:
          type: string
        defaultCurrencyCode:
          type: string
        isActive:
          type: boolean
        disableAccess:
          type: boolean
    Omnicx.API20.Models.Commerce.OrderDetailRequestModel:
      type: object
      properties:
        orderNo:
          type: string
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        trackingNo:
          type: string
    Omnicx.Entities.Order.OrderServiceJobFilter:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.Entities.Order.OrderServiceJobListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Order.OrderServiceJob'
    Omnicx.Entities.Order.OrderServiceJob:
      type: object
      properties:
        jobId:
          type: integer
          format: int64
        orderNo:
          type: string
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        productName:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        relatedProductId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        relatedProductStockCode:
          type: string
        itemType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 4
          - 6
          - 7
          - 8
          - 10
          - 20
          - 189
          - 202
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        statusMessage:
          type: string
        customInfo1:
          type: string
        customInfo1Formatted:
          type: string
        customInfo2:
          type: string
        customInfo2Formatted:
          type: string
        customInfo3:
          type: string
        customInfo3Formatted:
          type: string
        customInfo4:
          type: string
        customInfo4Formatted:
          type: string
        customInfo5:
          type: string
        customInfo5Formatted:
          type: string
        paymentStatus:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
        paymentStatusMessage:
          type: string
          readOnly: true
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.API20.Models.Commerce.UpdateOrderEmail:
      type: object
      properties:
        email:
          type: string
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.API20.Models.Commerce.OrderStatusModel:
      type: object
      properties:
        orderNo:
          type: string
        deliveryPlans:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Order.DeliveryPlanStatusUpdate'
        status:
          type: string
        externalStatus:
          type: string
        comment:
          type: string
        lastUpdatedBy:
          type: string
        ignoreEmailTrigger:
          type: boolean
        shouldCreateInvoice:
          type: boolean
    Omnicx.Entities.Order.DeliveryPlanStatusUpdate:
      type: object
      properties:
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        deliveryPlanNo:
          type: string
        statusCode:
          type: string
        statusType:
          type: integer
          format: int32
        numberOfBoxes:
          type: integer
          format: int32
        totalWeight:
          type: number
          format: double
        carrierName:
          type: string
        carrierShippingMethodName:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Order.UpdateItems'
    Omnicx.Entities.Order.UpdateItems:
      type: object
      properties:
        stockCode:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        parentProductId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        exceptionType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        notifyType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
        productExpectedDate:
          type: string
          format: date-time
        comment:
          type: string
        supplierCountry:
          type: string
        supplierCountryCode:
          type: string
    Omnicx.API20.Models.Commerce.ShippingPlanLineModel:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        stockCode:
          type: string
        name:
          type: string
        totalPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        image:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        resolutionOption:
          $ref: '#/components/schemas/Omnicx.Entities.Shipping.ResolutionOption'
        customerResolveOption:
          type: string
        comment:
          type: string
        productExpectedDate:
          type: string
          format: date-time
        refundLine:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.RefundOrderLineModel'
        replaceLines:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReplaceOrderLineModel'
        actionType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
    Omnicx.API20.Models.Commerce.RefundOrderLineModel:
      type: object
      properties:
        orderLineId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
        currencySymbol:
          type: string
        refundAmount:
          type: number
          format: double
        lineTotal:
          type: number
          format: double
        paymentGateway:
          type: string
        paymentSummary:
          type: string
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productName:
          type: string
        productDisplayName:
          type: string
        attributeXml:
          type: string
        imageUrl:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: string
    Omnicx.API20.Models.Commerce.ReplaceOrderLineModel:
      type: object
      properties:
        lineId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        oldStockCode:
          type: string
        isSelected:
          type: boolean
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productName:
          type: string
        productDisplayName:
          type: string
        attributeXml:
          type: string
        imageUrl:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: string
    Omnicx.API20.Models.DeliveryPlanStatusModel:
      type: object
      properties:
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        status:
          type: string
        comment:
          type: string
        lastUpdatedBy:
          type: string
    Omnicx.Entities.Shipping.ShipmentUpdate:
      type: object
      properties:
        orderNo:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        deliveryPlanNo:
          type: string
        carrierName:
          type: string
        carrierCode:
          type: string
        carrierLogo:
          type: string
        carrierShippingMethodName:
          type: string
        carrierShippingMethodCode:
          type: string
        shippingCost:
          type: number
          format: float
        trackingNo:
          type: string
        shipWithoutTrackingNo:
          type: boolean
        trackingLink:
          type: string
        numberOfBoxes:
          type: integer
          format: int32
        trackingLinkValidity:
          type: integer
          format: int32
        totalWeight:
          type: number
          format: double
        updatedBy:
          type: string
    Omnicx.API20.Models.Commerce.DeleteInvoiceLineModel:
      type: object
      properties:
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        createdBy:
          type: string
    Omnicx.API20.Models.Commerce.OrderOMSConfirmationModel:
      type: object
      properties:
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: string
        isFailed:
          type: boolean
        omsFailureComments:
          type: string
        createdBy:
          type: string
    Omnicx.API20.Models.Commerce.UpdateInvoiceDate:
      type: object
      properties:
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        invoiceId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        invoiceDate:
          type: string
          format: date-time
        updatedBy:
          type: string
        dueDate:
          type: string
          format: date-time
    Omnicx.API20.Models.Commerce.OrderLineDisplayOrderModel:
      type: object
      properties:
        id:
          type: string
        companyOrderLineId:
          type: string
        displayOrder:
          type: integer
          format: int32
        productId:
          type: string
    Omnicx.API20.Models.Commerce.OmsOrderResponse:
      type: object
      properties:
        stockCode:
          type: string
        status:
          type: string
        qty:
          type: string
    Omnicx.API20.Models.Commerce.CreateRefundModel:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PaymentModel'
        currencySymbol:
          type: string
        refundAmount:
          type: number
          format: double
        paymentGateway:
          type: string
        paymentSummary:
          type: string
        lastUpdatedBy:
          type: string
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        refundLines:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.CreateRefundLineModel'
    Omnicx.API20.Models.Commerce.CreateRefundLineModel:
      type: object
      properties:
        orderLineId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        lineTotal:
          type: number
          format: double
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockCode:
          type: string
        productName:
          type: string
        productDisplayName:
          type: string
        attributeXml:
          type: string
        imageUrl:
          type: string
        deliveryPlanId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        orderNo:
          type: string
    Omnicx.API20.Models.Commerce.OrderPromoResponseModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderPromoResponseModel'
    Omnicx.API20.Models.Commerce.OrderPromoResponseModel:
      type: object
      properties:
        isVaild:
          type: boolean
        message:
          type: string
        order:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.OrderModel'
    Omnicx.API20.Models.Content.OrderStatusEmailModel:
      type: object
      properties:
        templateType:
          type: integer
          format: int32
        deliverPlanIds:
          type: array
          items:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000000
    Omnicx.API20.Models.Commerce.UpdateSubscriptionStatusModel:
      type: object
      properties:
        seedOrderId:
          type: string
          description: "SeedOrderId for which the subscription order is placed. \r\
            \nIdentifier the unique subscription order."
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        userId:
          type: string
          description: User id against the current subscription.
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        status:
          type: integer
          description: Status of subscription
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        recurringOrderStatus:
          type: integer
          description: Status of Subscription recurring Order
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        pauseDuration:
          type: integer
          description: Duration till when the subscription will pause
          format: int32
        autoRenew:
          type: boolean
          description: Auto Renewal for perticular subscription order
        recurringPaymentDayOfMonth:
          type: integer
          format: int32
        cancellationReasons:
          type: string
    Omnicx.API20.Models.Catalog.ProductDetailModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductDetailModel'
    Omnicx.API20.Models.Catalog.ProductDetailModel:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        productCode:
          type: string
        stockCode:
          type: string
        barcode:
          type: string
        name:
          type: string
        fullName:
          type: string
        seoName:
          type: string
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        canonicalTags:
          type: string
        link:
          type: string
        shortDescription:
          type: string
        description:
          type: string
        notes:
          type: string
        brand:
          type: string
        brandLogo:
          type: string
        brandId:
          type: integer
          format: int32
        brandRecordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        subBrand:
          type: string
        subBrandId:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        attributeSet:
          type: string
        uom:
          type: string
        uomValue:
          type: string
        dimensions:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.DimensionsModel'
        image:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductImageModel'
        videos:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VideoModel'
        pdFs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PDFModel'
        availability:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        seoAvailability:
          type: string
        deliveryMessage:
          type: string
        stockAvailabilityMessage:
          type: string
        fulfilFromWarehouse:
          type: boolean
        fulfilFromStore:
          type: boolean
        fulfilFromSupplier:
          type: boolean
        fulfilFromWarehouseDays:
          type: integer
          format: int32
        fulfilFromSupplierDays:
          type: integer
          format: int32
        fulfilFromInstoreDays:
          type: integer
          format: int32
        currentStock:
          type: integer
          format: int32
        rating:
          type: number
          format: double
        displayTemplate:
          type: string
        isDiscontinued:
          type: boolean
        isVisible:
          type: boolean
        breadCrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.LocalizedSlugModel'
        classification:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ClassficationModel'
        isGiftWrapApplied:
          type: boolean
        giftWrapConfig:
          type: string
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.PromotionModelMinimal'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ProductCollectionModel'
        flags:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.FlagModel'
        preOrder:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PreOrderModel'
        couponProvider:
          type: string
        customAttributes:
          type: array
          description: list of custom attributes and the product specific information.
            these attributes are not used for variants
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductAttributeModel'
        variantAttributes:
          type: array
          description: List of attributes based on which the variants are created
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductAttributes'
        variantProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.VariantProductsModel'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewModel'
        relatedProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.RelatedProductModel'
        freeProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.FreeProductModel'
        subscriptionEnabled:
          type: boolean
          description: True if product is enabled for subscription.
        subscriptionPlanType:
          type: integer
          description: Stores the subscription plan type to distinguish with fetch
            from db.
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        componentProducts:
          type: array
          description: list of components added in bundle product
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductBundle'
        soldIndependently:
          type: boolean
        componentsInStock:
          type: boolean
          description: calculate current stock of bundle product(virtual product).
            if true find min stock if false find max stock and assign.
        displayInBasket:
          type: boolean
          description: manage component products show or not in front
    Omnicx.API20.Models.Catalog.DimensionsModel:
      type: object
      properties:
        weight:
          type: number
          format: double
        height:
          type: number
          format: double
        length:
          type: number
          format: double
        width:
          type: number
          format: double
    Omnicx.API20.Models.Catalog.VideoModel:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        url:
          type: string
        isDefault:
          type: boolean
        displayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Catalog.PDFModel:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        url:
          type: string
        name:
          type: string
        displayOrder:
          type: integer
          format: int32
    Omnicx.API20.Models.Commerce.ProductCollectionModel:
      type: object
      properties:
        collectionId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
    Omnicx.API20.Models.Catalog.PreOrderModel:
      type: object
      properties:
        shortMessage:
          type: string
        message:
          type: string
        currentStock:
          type: integer
          format: int32
        maxStock:
          type: integer
          format: int32
        isEnabled:
          type: boolean
        launchDateTime:
          type: string
          format: date-time
    Omnicx.API20.Models.Catalog.ProductReviewModel:
      type: object
      properties:
        title:
          type: string
        rating:
          type: integer
          format: int32
        comment:
          type: string
        postedBy:
          type: string
        postedOn:
          type: string
          format: date-time
        nickName:
          type: string
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Cms.ProductReviewSection'
    Omnicx.Entities.Cms.ProductReviewSection:
      type: object
      properties:
        id:
          type: string
        sectionName:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Cms.SectionOption'
    Omnicx.Entities.Cms.SectionOption:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isChecked:
          type: boolean
        parentItemValue:
          type: string
    Omnicx.API20.Models.Catalog.ProductModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModel'
    Omnicx.API20.Models.Catalog.ProductReviewAddModel:
      type: object
      properties:
        title:
          type: string
        rating:
          type: integer
          format: int32
        comment:
          type: string
        isRecommended:
          type: boolean
        reviewSections:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductReviewSectionModel'
        userId:
          type: string
        additionalData:
          $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
        remainAnonymous:
          type: boolean
        nickname:
          type: string
        location:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
        userEmail:
          type: string
    Omnicx.API20.Models.Commerce.ReturnModelResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnModel'
    Omnicx.API20.Models.Commerce.ReturnModel:
      type: object
      properties:
        id:
          type: string
        orderNumber:
          type: string
        orderDate:
          type: string
          format: date-time
        currencyCode:
          type: string
        currencySymbol:
          type: string
        email:
          type: string
        grandTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        subTotal:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        shippingCharge:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        tax:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        shipmentDate:
          type: string
          format: date-time
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnLineModel'
        statusLabel:
          type: string
        reasonForReturnId:
          type: string
        requiredActionId:
          type: string
        comment:
          type: string
        returnStatus:
          type: integer
          format: int32
        faultReason:
          type: string
        uploadFileUrls:
          type: array
          items:
            type: string
        reasonsForReturn:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MasterDataModelBasic'
        requiredActions:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.MasterDataModelBasic'
    Omnicx.API20.Models.Commerce.ReturnLineModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        productId:
          type: string
        productIid:
          type: string
        stockCode:
          type: string
        name:
          type: string
        manufacturer:
          type: string
        subManufacturer:
          type: string
        qty:
          type: integer
          format: int32
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        discountAmt:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        shippedQty:
          type: integer
          format: int32
        totalPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.AmountBasic'
        returnQtyRequested:
          type: integer
          format: int32
        returnQtyRecd:
          type: integer
          format: int32
        availableQty:
          type: integer
          format: int32
        slug:
          type: string
        image:
          type: string
        customInfo1:
          type: string
        status:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
          - 12
          - 15
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 30
          - 40
          - 102
          - 103
          - 104
          - 105
          - 107
          - 110
          - 200
          - 201
          - 202
          - 205
          - 206
          - 207
          - 208
          - 209
          - 210
        statusCode:
          type: string
        reasonForReturnId:
          type: string
        requiredActionId:
          type: string
        comment:
          type: string
    Omnicx.API20.Models.Commerce.MasterDataModelBasic:
      type: object
      properties:
        itemValue:
          type: string
        itemText:
          type: string
        displayOrder:
          type: integer
          format: int32
        parentItemValue:
          type: string
        isDefault:
          type: boolean
    Omnicx.API20.Models.Commerce.ReturnCreateModel:
      type: object
      properties:
        orderId:
          type: string
        comment:
          type: string
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Commerce.ReturnLineCreateModel'
        faultReason:
          type: string
        uploadFileUrls:
          type: array
          items:
            type: string
    Omnicx.API20.Models.Commerce.ReturnLineCreateModel:
      type: object
      properties:
        productId:
          type: string
        stockCode:
          type: string
        returnQtyRequested:
          type: integer
          format: int32
        returnQtyRecd:
          type: integer
          format: int32
        reasonForReturnId:
          type: string
        requiredActionId:
          type: string
        comment:
          type: string
    Omnicx.API20.Models.Commerce.ReturnUpdateModel:
      type: object
      properties:
        id:
          type: string
        returnStatus:
          type: integer
          format: int32
        comment:
          type: string
    Omnicx.API20.Models.Catalog.SearchModelBase:
      type: object
      properties:
        freeText:
          type: string
    Omnicx.Entities.SearchEnity.TypeAheadSearchResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.TypeAheadSearch'
    Omnicx.Entities.SearchEnity.TypeAheadSearch:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.EntityTypeAhead'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.EntityTypeAhead'
        blogs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.EntityTypeAhead'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.SearchEnity.EntityTypeAhead'
    Omnicx.Entities.SearchEnity.EntityTypeAhead:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        slug:
          type: string
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
    Omnicx.Entities.Catalog.ProductForIndexSuggestionResultListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductForIndexSuggestionResult'
    Omnicx.Entities.Catalog.ProductForIndexSuggestionResult:
      type: object
      properties:
        suggestion:
          type: string
        object:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductForIndex'
    Omnicx.Entities.Catalog.ProductForIndex:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        name:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        slug:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        seoName:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        brand:
          type: string
        brandId:
          type: string
        brandRecordId:
          type: string
        brandNoAnlz:
          type: string
        subBrandId:
          type: string
        subBrandRecordId:
          type: string
        subBrand:
          type: string
        shortDescription:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        description:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        stockCode:
          type: string
        sku:
          type: string
        barcode:
          type: string
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        price:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        costPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        uom:
          type: string
        uomValue:
          type: number
          format: double
        rating:
          type: number
          format: double
        soldCount:
          type: integer
          format: int32
        currentStock:
          type: integer
          format: int32
        displayInSearch:
          type: boolean
        isActive:
          type: boolean
        fulfilFromWarehouse:
          type: boolean
        fulfilFromstore:
          type: boolean
        fulfilFromSupplier:
          type: boolean
        fulfilFromWarehouseDays:
          type: integer
          format: int32
        fulfilFromSupplierDays:
          type: integer
          format: int32
        fulfilFromInstoreDays:
          type: integer
          format: int32
        isGiftWrapApplied:
          type: boolean
        giftWrapOption:
          type: string
        isDiscontinued:
          type: boolean
        discontinuationDate:
          type: string
          format: date-time
        displayOrder:
          type: integer
          format: int32
        isFeatured:
          type: boolean
        subscriptionEnabled:
          type: boolean
        subscriptionPlanType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        created:
          type: string
          format: date-time
        variant:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.VariantForIndex'
        mappedCategories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.CategoryItemForIndex'
        mappedCompanies:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.CompanyForIndex'
        hasCompanyMapping:
          type: boolean
        videoId:
          type: string
        classification:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.ClassficationForIndex'
        dimensions:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.DimensionsForIndex'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        metaTitle:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        metaDescription:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        metaKeywords:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        canonicalTags:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        flags:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.FlagForIndex'
        preOrder:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.PreOrderForIndex'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductAttributeForIndex'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductReviewForIndex'
        relatedProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.RelatedProductForIndex'
        relatedProductsList:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductForIndex'
        freeProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.FreeProductForIndex'
        image:
          type: string
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.CollectionForIndex'
        pricelist:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.PricelistForIndex'
        orgId:
          type: string
        domainId:
          type: string
        calculated:
          $ref: '#/components/schemas/Omnicx.Entities.Catalog.CalculatedForIndex'
        componentProducts:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.BundleProductForIndex'
        soldIndependently:
          type: boolean
        componentsInStock:
          type: boolean
        displayInBasket:
          type: boolean
        itemType:
          type: integer
          format: int32
        itemTypeValue:
          type: integer
          format: int32
          readOnly: true
          enum:
          - 1
          - 2
          - 4
          - 6
          - 7
          - 8
          - 10
          - 20
          - 189
          - 202
        groupName:
          type: string
        productCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.ProductCustomFieldMapping'
        priceRule:
          $ref: '#/components/schemas/Omnicx.Entities.B2b.CompanyPricelistRule'
        breadCrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.LocalizedSlugForIndex'
        isMasterStock:
          type: boolean
        isInheriteInfo:
          type: boolean
        isVisible:
          type: boolean
        isBrandExcludedInSearch:
          type: boolean
        isPriceListApplied:
          type: boolean
        itemGroupId:
          type: integer
          format: int32
        itemGroup:
          type: string
        suggest:
          type: array
          items:
            type: string
        displayTemplate:
          type: string
        searchTags:
          type: string
          readOnly: true
        brandLogo:
          type: string
        productDisplayName:
          type: string
        couponProvider:
          type: string
        hasVariant:
          type: boolean
        videos:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.VideosForIndex'
        pdf:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.PDFsForIndex'
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.PromotionsForIndex'
        stockAvailabilityConfigId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        stockAvailabilityMessage:
          type: string
        deliveryMessage:
          type: string
        bestSeller:
          type: boolean
        marginPct:
          type: number
          format: double
        color:
          type: string
        size:
          type: string
        season:
          type: string
        newLaunch:
          type: boolean
        launchDate:
          type: string
          format: date-time
        onSale:
          type: boolean
        colorCode:
          type: string
        gender:
          type: string
        occasion:
          type: string
        ageGroup:
          type: string
        pattern:
          type: string
        material:
          type: string
        trending:
          type: boolean
        finish:
          type: string
        style:
          type: string
        exclusive:
          type: boolean
        extendedDescription:
          type: string
        notes:
          type: string
        generatedAt:
          type: string
          format: date-time
        pricelistV2:
          type: object
          properties: {}
        productVariantGroupCode:
          type: string
        hsn:
          type: string
        originCountry:
          type: string
    Omnicx.Entities.Localization.LocalizedForIndex:
      type: object
      properties:
        lang:
          type: string
        value:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedImagesForIndex'
    Omnicx.Entities.Catalog.CategoryItemForIndex:
      type: object
      properties:
        categoryId:
          type: string
        categoryName:
          type: string
        parentCategoryId:
          type: string
        parentCategoryName:
          type: string
        level:
          type: integer
          format: int32
    Omnicx.Entities.Catalog.CompanyForIndex:
      type: object
      properties:
        companyId:
          type: string
    Omnicx.Entities.Catalog.DimensionsForIndex:
      type: object
      properties:
        weight:
          type: number
          format: double
        height:
          type: number
          format: double
        length:
          type: number
          format: double
        width:
          type: number
          format: double
    Omnicx.Entities.Catalog.PreOrderForIndex:
      type: object
      properties:
        isEnabled:
          type: boolean
        shortMessage:
          type: string
        message:
          type: string
        launchDateTime:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        maxStock:
          type: integer
          format: int32
        currentStock:
          type: integer
          format: int32
    Omnicx.Entities.Catalog.ProductAttributeForIndex:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        display:
          type: string
        displayOrder:
          type: integer
          format: int32
        groupDisplayOrder:
          type: integer
          format: int32
        orignalValue:
          type: string
        customkey:
          type: string
          readOnly: true
        isVariantAttribute:
          type: boolean
        displayInProductDetail:
          type: boolean
        displayInProductList:
          type: boolean
        useForVariant:
          type: boolean
        useInFacetSearch:
          type: boolean
        valueText:
          type: string
        displayInBasket:
          type: boolean
    Omnicx.Entities.Catalog.ProductReviewForIndex:
      type: object
      properties:
        title:
          type: string
        rating:
          type: integer
          format: int32
        comment:
          type: string
        postedBy:
          type: string
        postedOn:
          type: string
          format: date-time
        nickName:
          type: string
        reviewSections:
          type: string
        sections:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Cms.ProductReviewSection'
    Omnicx.Entities.Catalog.RelatedProductForIndex:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        stockCode:
          type: string
        relatedTypeCode:
          type: string
        relationDirectionCode:
          type: string
        autoSortBy:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 9
          - 10
    Omnicx.Entities.Catalog.FreeProductForIndex:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        name:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        slug:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        brand:
          type: string
        subBrand:
          type: string
        shortDescription:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        description:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        stockCode:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        image:
          type: string
    Omnicx.Entities.Catalog.CollectionForIndex:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Omnicx.Entities.Catalog.PricelistForIndex:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        currencyCode:
          type: string
        countryCode:
          type: string
        costPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        listPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        sellPrice:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
        worth:
          $ref: '#/components/schemas/Omnicx.Entities.Common.Amount'
    Omnicx.Entities.Catalog.CalculatedForIndex:
      type: object
      properties:
        saving:
          type: number
          format: double
        savingPercent:
          type: number
          format: double
    Omnicx.Entities.Catalog.BundleProductForIndex:
      type: object
      properties:
        productId:
          type: string
        qty:
          type: integer
          format: int32
        name:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        slug:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        brand:
          type: string
        subBrand:
          type: string
        shortDescription:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        description:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        stockCode:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedForIndex'
        image:
          type: string
        bundleType:
          type: integer
          format: int32
          enum:
          - 0
          - 1
    Omnicx.Entities.Catalog.ProductCustomFieldMapping:
      type: object
      properties:
        productId:
          type: string
        fieldId:
          type: string
        fieldValue:
          type: string
        fieldValueLabel:
          type: string
        groupName:
          type: string
        setName:
          type: string
        customFieldId:
          type: string
        customFieldSetId:
          type: string
        customFieldGroupId:
          type: string
        displayOrder:
          type: string
        groupDisplayOrder:
          type: string
        scopeType:
          type: integer
          format: int32
        isCustomGroup:
          type: boolean
        isUnique:
          type: boolean
        isRequired:
          type: boolean
        useInQuickSearch:
          type: boolean
        useInFacetSearch:
          type: boolean
        isComparable:
          type: boolean
        allowHtmlTag:
          type: boolean
        isVisibleOnViewPage:
          type: boolean
        isUsedInProductList:
          type: boolean
        queryStringParam:
          type: string
        inputType:
          type: integer
          format: int32
        fieldName:
          type: string
        defaultValue:
          type: string
        textOptions:
          type: string
        fieldCode:
          type: string
        fieldType:
          type: integer
          format: int32
        useForVariant:
          type: boolean
        displayInProductDetail:
          type: boolean
        isLocalized:
          type: boolean
        displayInBasket:
          type: boolean
        fieldOptionXml:
          type: string
        option:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Catalog.CustomFieldOption'
        slug:
          type: string
        allowedDomains:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Cms.ContentDomainMapping'
        localizedPropertySet:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedEntity'
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.Entities.B2b.CompanyPricelistRule:
      type: object
      properties:
        companyId:
          type: string
        ruleType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
        ruleTypeLabel:
          type: string
        multiplier:
          type: number
          format: double
        discountPct:
          type: number
          format: double
        entityIdCsv:
          type: string
        isActive:
          type: boolean
        priceListId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        localTextKey:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        ipAddress:
          type: string
        orgId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        branchId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        totalRecord:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        externalStatus:
          type: string
    Omnicx.Entities.Catalog.VideosForIndex:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        url:
          type: string
        isDefault:
          type: boolean
        displayOrder:
          type: integer
          format: int32
    Omnicx.Entities.Catalog.PDFsForIndex:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        url:
          type: string
        isDefault:
          type: boolean
        displayOrder:
          type: integer
          format: int32
    Omnicx.Entities.Catalog.PromotionsForIndex:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        code:
          type: string
        name:
          type: string
    Omnicx.Entities.Localization.LocalizedImagesForIndex:
      type: object
      properties:
        image:
          type: string
        title:
          type: string
        tag:
          type: string
    Omnicx.Entities.Catalog.CustomFieldOption:
      type: object
      properties:
        id:
          type: string
        customFieldId:
          type: string
        optionText:
          type: string
        optionValue:
          type: string
        isDefault:
          type: string
        displayOrder:
          type: string
    Omnicx.Entities.Cms.ContentDomainMapping:
      type: object
      properties:
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        microSiteId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainName:
          type: string
        domainUrl:
          type: string
        flagCss:
          type: string
        contentEntityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        className:
          type: string
        enabled:
          type: boolean
        domainGuid:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Omnicx.Entities.Localization.LocalizedEntity:
      type: object
      properties:
        entityId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        domainId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        langCulture:
          type: string
        className:
          type: string
        stockCode:
          type: string
        seoName:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        slug:
          type: string
        image1:
          type: string
        image2:
          type: string
        image3:
          type: string
        image4:
          type: string
        image5:
          type: string
        metaTitle:
          type: string
        metaDescription:
          type: string
        blogSummary:
          type: string
        metaKeywords:
          type: string
        canonical:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Localization.LocalizedEntityProperty'
    Omnicx.Entities.Localization.LocalizedEntityProperty:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    Omnicx.API20.Models.Catalog.SearchCriteriaModel:
      type: object
      properties:
        freeText:
          type: string
        collectionId:
          type: string
        brandId:
          type: string
        brand:
          type: string
        brandIds:
          type: array
          items:
            type: string
        excludedBrandIds:
          type: array
          items:
            type: string
        facet:
          type: string
        categoryId:
          type: string
        category:
          type: string
        barcode:
          type: string
        categoryIds:
          type: array
          items:
            type: string
        excludedCategoryIds:
          type: array
          items:
            type: string
        gender:
          type: string
        sortBy:
          type: string
        sortOrder:
          type: string
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        filters:
          type: array
          items:
            $ref: '#/components/schemas/System.StringSystem.StringKeyValuePair'
        allowFacet:
          type: boolean
        facetOnly:
          type: boolean
        includeFreeProduct:
          type: boolean
        includeExcludedBrand:
          type: boolean
        ignoreDisplayInSerach:
          type: boolean
        ignoreRollup:
          type: boolean
        promoCode:
          type: string
    Omnicx.API20.Models.Catalog.ProductModelPaginatedResultResponseModelWithSnippets:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModelPaginatedResult'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
    Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResultResponseModelWithSnippets:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductMinimalPaginatedResult'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
    Omnicx.API20.Models.Catalog.PhysicalStoreModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.PhysicalStoreModel'
    Omnicx.API20.Models.Content.SiteViewModelResponseModelWithSnippets:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewModel'
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SnippetModel'
        slugType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
    Omnicx.API20.Models.Content.SiteViewModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        viewType:
          type: string
        slug:
          type: string
        title:
          type: string
        layout:
          type: string
        hrefLang:
          type: string
        htmlBody:
          type: string
        canonical:
          type: string
        noFollow:
          type: boolean
        showInSitemap:
          type: boolean
        allowAnonymous:
          type: boolean
        components:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.SiteViewComponentModel'
        redirectTypeValue:
          type: integer
          format: int32
        metaTitle:
          type: string
        metaDescription:
          type: string
        metaKeywords:
          type: string
        versionNo:
          type: integer
          format: int32
        scheduleItems:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.ScheduleItemModel'
    Omnicx.API20.Models.Content.SiteViewComponentModel:
      type: object
      properties:
        componentId:
          type: string
        componentType:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 3
          - 5
          - 6
          - 7
          - 8
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 42
          - 51
          - 52
          - 53
          - 54
          - 55
          - 56
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
          - 78
          - 79
          - 80
          - 90
          - 101
          - 102
          - 103
          - 104
          - 105
          - 106
          - 107
          - 108
          - 109
          - 110
          - 111
          - 120
          - 1000
        content:
          type: string
        displayOrder:
          type: integer
          format: int32
        products:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ProductModel'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        subBrands:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.BrandModel'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.CategoryModel'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        banners:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.Entities.Cms.Banner'
        image:
          $ref: '#/components/schemas/Omnicx.API20.Models.Catalog.ImageModel'
        blogs:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.BlogModel'
        dataType:
          type: string
        dataNumItemsRow:
          type: string
        autoplay:
          type: boolean
        sliderTime:
          type: string
        link:
          type: string
        productListDisplayType:
          type: string
        categoryListDisplayType:
          type: string
        brandListDisplayType:
          type: string
        productEnableButton:
          type: string
        categoryEnableButton:
          type: string
        brandEnableButton:
          type: string
        viewType:
          type: string
        buttonText:
          type: string
        buttonType:
          type: string
        widgetPath:
          type: string
        title:
          type: string
        subTitle:
          type: string
        paragraph:
          type: string
        dataAlignment:
          type: string
        textAlignment:
          type: string
        textVerticalAlignment:
          type: string
        buttonClass:
          type: string
    Omnicx.API20.Models.Content.ScheduleItemModel:
      type: object
      properties:
        name:
          type: string
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        neverExpire:
          type: boolean
        versionNo:
          type: integer
          format: int32
    Omnicx.Entities.Cms.Banner:
      type: object
      properties:
        outputHtml:
          type: string
    System.StringListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            type: string
    Omnicx.API20.Models.Content.ScheduleModelListResponseModel:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        status:
          type: string
          readOnly: true
        errors:
          type: array
          items:
            type: string
        success:
          type: boolean
          readOnly: true
        message:
          type: string
        messageCode:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Omnicx.API20.Models.Content.ScheduleModel'
    Omnicx.API20.Models.Content.ScheduleModel:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        neverExpire:
          type: boolean
        comment:
          type: string
        isActive:
          type: boolean
        lastUpdatedBy:
          type: string
        lastUpdated:
          type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY 
      