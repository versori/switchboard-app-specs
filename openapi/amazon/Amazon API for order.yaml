openapi: 3.0.1
info:
  title: Selling Partner API for Orders
  description: The Selling Partner API for Orders helps you programmatically retrieve
    order information. These APIs let you develop fast, flexible, custom applications
    in areas like order synchronization, order research, and demand-based decision
    support tools.
  contact:
    name: Selling Partner API Developer Support
    url: https://sellercentral.amazon.com/gp/mws/contactus.html
  license:
    name: Apache License 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: v0
servers:
- url: https://sellingpartnerapi-na.amazon.com/
paths:
  /orders/v0/orders:
    get:
      tags:
      - ordersV0
      description: |-
        Returns orders created or updated during the time frame indicated by the specified parameters. You can also apply a range of filtering criteria to narrow the list of orders returned. If NextToken is present, that will be used to retrieve the orders instead of other criteria.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: getOrders
      parameters:
      - name: CreatedAfter
        in: query
        description: A date used for selecting orders created after (or at) a specified
          time. Only orders placed after the specified time are returned. Either the
          CreatedAfter parameter or the LastUpdatedAfter parameter is required. Both
          cannot be empty. The date must be in ISO 8601 format.
        schema:
          type: string
      - name: CreatedBefore
        in: query
        description: A date used for selecting orders created before (or at) a specified
          time. Only orders placed before the specified time are returned. The date
          must be in ISO 8601 format.
        schema:
          type: string
      - name: LastUpdatedAfter
        in: query
        description: A date used for selecting orders that were last updated after
          (or at) a specified time. An update is defined as any change in order status,
          including the creation of a new order. Includes updates made by Amazon and
          by the seller. The date must be in ISO 8601 format.
        schema:
          type: string
      - name: LastUpdatedBefore
        in: query
        description: A date used for selecting orders that were last updated before
          (or at) a specified time. An update is defined as any change in order status,
          including the creation of a new order. Includes updates made by Amazon and
          by the seller. The date must be in ISO 8601 format.
        schema:
          type: string
      - name: OrderStatuses
        in: query
        description: 'A list of OrderStatus values used to filter the results. Possible
          values: PendingAvailability (This status is available for pre-orders only.
          The order has been placed, payment has not been authorized, and the release
          date of the item is in the future.); Pending (The order has been placed
          but payment has not been authorized); Unshipped (Payment has been authorized
          and the order is ready for shipment, but no items in the order have been
          shipped); PartiallyShipped (One or more, but not all, items in the order
          have been shipped); Shipped (All items in the order have been shipped);
          InvoiceUnconfirmed (All items in the order have been shipped. The seller
          has not yet given confirmation to Amazon that the invoice has been shipped
          to the buyer.); Canceled (The order has been canceled); and Unfulfillable
          (The order cannot be fulfilled. This state applies only to Multi-Channel
          Fulfillment orders.).'
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: MarketplaceIds
        in: query
        description: |-
          A list of MarketplaceId values. Used to select orders that were placed in the specified marketplaces.

          See the [Selling Partner API Developer Guide](doc:marketplace-ids) for a complete list of marketplaceId values.
        required: true
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: string
      - name: FulfillmentChannels
        in: query
        description: 'A list that indicates how an order was fulfilled. Filters the
          results by fulfillment channel. Possible values: AFN (Fulfillment by Amazon);
          MFN (Fulfilled by the seller).'
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: PaymentMethods
        in: query
        description: 'A list of payment method values. Used to select orders paid
          using the specified payment methods. Possible values: COD (Cash on delivery);
          CVS (Convenience store payment); Other (Any payment method other than COD
          or CVS).'
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: BuyerEmail
        in: query
        description: The email address of a buyer. Used to select orders that contain
          the specified email address.
        schema:
          type: string
      - name: SellerOrderId
        in: query
        description: An order identifier that is specified by the seller. Used to
          select only the orders that match the order identifier. If SellerOrderId
          is specified, then FulfillmentChannels, OrderStatuses, PaymentMethod, LastUpdatedAfter,
          LastUpdatedBefore, and BuyerEmail cannot be specified.
        schema:
          type: string
      - name: MaxResultsPerPage
        in: query
        description: A number that indicates the maximum number of orders that can
          be returned per page. Value must be 1 - 100. Default 100.
        schema:
          type: integer
      - name: EasyShipShipmentStatuses
        in: query
        description: 'A list of EasyShipShipmentStatus values. Used to select Easy
          Ship orders with statuses that match the specified  values. If EasyShipShipmentStatus
          is specified, only Amazon Easy Ship orders are returned.Possible values:
          PendingPickUp (Amazon has not yet picked up the package from the seller).
          LabelCanceled (The seller canceled the pickup). PickedUp (Amazon has picked
          up the package from the seller). AtOriginFC (The packaged is at the origin
          fulfillment center). AtDestinationFC (The package is at the destination
          fulfillment center). OutForDelivery (The package is out for delivery). Damaged
          (The package was damaged by the carrier). Delivered (The package has been
          delivered to the buyer). RejectedByBuyer (The package has been rejected
          by the buyer). Undeliverable (The package cannot be delivered). ReturnedToSeller
          (The package was not delivered to the buyer and was returned to the seller).
          ReturningToSeller (The package was not delivered to the buyer and is being
          returned to the seller).'
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: NextToken
        in: query
        description: A string token returned in the response of your previous request.
        schema:
          type: string
      - name: AmazonOrderIds
        in: query
        description: A list of AmazonOrderId values. An AmazonOrderId is an Amazon-defined
          order identifier, in 3-7-7 format.
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: string
      - name: ActualFulfillmentSupplySourceId
        in: query
        description: Denotes the recommended sourceId where the order should be fulfilled
          from.
        schema:
          type: string
      - name: IsISPU
        in: query
        description: When true, this order is marked to be picked up from a store
          rather than delivered.
        schema:
          type: boolean
      - name: StoreChainStoreId
        in: query
        description: The store chain store identifier. Linked to a specific store
          in a store chain.
        schema:
          type: string
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
              example:
                payload:
                  NextToken: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
                  Orders:
                  - AmazonOrderId: 902-3159896-1390916
                    PurchaseDate: 2017-01-20T19:49:35Z
                    LastUpdateDate: 2017-01-20T19:49:35Z
                    OrderStatus: Pending
                    FulfillmentChannel: SellerFulfilled
                    NumberOfItemsShipped: 0
                    NumberOfItemsUnshipped: 0
                    PaymentMethod: Other
                    PaymentMethodDetails:
                    - CreditCard
                    - GiftCerificate
                    MarketplaceId: ATVPDKIKX0DER
                    ShipmentServiceLevelCategory: Standard
                    OrderType: StandardOrder
                    EarliestShipDate: 2017-01-20T19:51:16Z
                    LatestShipDate: 2017-01-25T19:49:35Z
                    IsBusinessOrder: false
                    IsPrime: false
                    IsGlobalExpressEnabled: false
                    IsPremiumOrder: false
                    IsSoldByAB: false
                    IsIBA: false
                    ShippingAddress:
                      Name: Michigan address
                      AddressLine1: 1 Cross St.
                      City: Canton
                      StateOrRegion: MI
                      PostalCode: "48817"
                      CountryCode: US
                    BuyerInfo:
                      BuyerEmail: user@example.com
                      BuyerName: John Doe
                      BuyerTaxInfo:
                        CompanyLegalName: A Company Name
                      PurchaseOrderNumber: "1234567890123"
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  CreatedAfter:
                    value: TEST_CASE_200
                  MarketplaceIds:
                    value:
                    - ATVPDKIKX0DER
              response:
                payload:
                  CreatedBefore: 1.569521782042E9
                  Orders:
                  - AmazonOrderId: 902-1845936-5435065
                    PurchaseDate: 1970-01-19T03:58:30Z
                    LastUpdateDate: 1970-01-19T03:58:32Z
                    OrderStatus: Unshipped
                    FulfillmentChannel: MFN
                    SalesChannel: Amazon.com
                    ShipServiceLevel: Std US D2D Dom
                    OrderTotal:
                      CurrencyCode: USD
                      Amount: "11.01"
                    NumberOfItemsShipped: 0
                    NumberOfItemsUnshipped: 1
                    PaymentMethod: Other
                    PaymentMethodDetails:
                    - Standard
                    IsReplacementOrder: false
                    MarketplaceId: ATVPDKIKX0DER
                    ShipmentServiceLevelCategory: Standard
                    OrderType: StandardOrder
                    EarliestShipDate: 1970-01-19T03:59:27Z
                    LatestShipDate: 1970-01-19T04:05:13Z
                    EarliestDeliveryDate: 1970-01-19T04:06:39Z
                    LatestDeliveryDate: 1970-01-19T04:15:17Z
                    IsBusinessOrder: false
                    IsPrime: false
                    IsGlobalExpressEnabled: false
                    IsPremiumOrder: false
                    IsSoldByAB: false
                    IsIBA: false
                    DefaultShipFromLocationAddress:
                      Name: MFNIntegrationTestMerchant
                      AddressLine1: 2201 WESTLAKE AVE
                      City: SEATTLE
                      StateOrRegion: WA
                      PostalCode: 98121-2778
                      CountryCode: US
                      Phone: +1 480-386-0930 ext. 73824
                      AddressType: Commercial
                    FulfillmentInstruction:
                      FulfillmentSupplySourceId: sampleSupplySourceId
                    IsISPU: false
                    AutomatedShippingSettings:
                      HasAutomatedShippingSettings: false
                  - AmazonOrderId: 902-8745147-1934268
                    PurchaseDate: 1970-01-19T03:58:30Z
                    LastUpdateDate: 1970-01-19T03:58:32Z
                    OrderStatus: Unshipped
                    FulfillmentChannel: MFN
                    SalesChannel: Amazon.com
                    ShipServiceLevel: Std US D2D Dom
                    OrderTotal:
                      CurrencyCode: USD
                      Amount: "11.01"
                    NumberOfItemsShipped: 0
                    NumberOfItemsUnshipped: 1
                    PaymentMethod: Other
                    PaymentMethodDetails:
                    - Standard
                    IsReplacementOrder: false
                    MarketplaceId: ATVPDKIKX0DER
                    ShipmentServiceLevelCategory: Standard
                    OrderType: StandardOrder
                    EarliestShipDate: 1970-01-19T03:59:27Z
                    LatestShipDate: 1970-01-19T04:05:13Z
                    EarliestDeliveryDate: 1970-01-19T04:06:39Z
                    LatestDeliveryDate: 1970-01-19T04:15:17Z
                    IsBusinessOrder: false
                    IsPrime: false
                    IsGlobalExpressEnabled: false
                    IsPremiumOrder: false
                    IsSoldByAB: false
                    IsIBA: false
            - request:
                parameters:
                  CreatedAfter:
                    value: TEST_CASE_200_NEXT_TOKEN
                  MarketplaceIds:
                    value:
                    - ATVPDKIKX0DER
              response:
                payload:
                  NextToken: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
                  Orders:
                  - AmazonOrderId: 902-3159896-1390916
                    PurchaseDate: 2017-01-20T19:49:35Z
                    LastUpdateDate: 2017-01-20T19:49:35Z
                    OrderStatus: Pending
                    FulfillmentChannel: SellerFulfilled
                    NumberOfItemsShipped: 0
                    NumberOfItemsUnshipped: 0
                    PaymentMethod: Other
                    PaymentMethodDetails:
                    - CreditCard
                    - GiftCerificate
                    MarketplaceId: ATVPDKIKX0DER
                    ShipmentServiceLevelCategory: Standard
                    OrderType: StandardOrder
                    EarliestShipDate: 2017-01-20T19:51:16Z
                    LatestShipDate: 2017-01-25T19:49:35Z
                    IsBusinessOrder: false
                    IsPrime: false
                    IsGlobalExpressEnabled: false
                    IsPremiumOrder: false
                    IsSoldByAB: false
                    IsIBA: false
            - request:
                parameters:
                  CreatedAfter:
                    value: TEST_CASE_200_NEXT_TOKEN
                  MarketplaceIds:
                    value:
                    - ATVPDKIKX0DER
                  NextToken:
                    value: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
              response:
                payload:
                  Orders:
                  - AmazonOrderId: 902-3159896-1390916
                    PurchaseDate: 2017-01-20T19:49:35Z
                    LastUpdateDate: 2017-01-20T19:49:35Z
                    OrderStatus: Pending
                    FulfillmentChannel: SellerFulfilled
                    NumberOfItemsShipped: 0
                    NumberOfItemsUnshipped: 0
                    PaymentMethod: Other
                    PaymentMethodDetails:
                    - CreditCard
                    - GiftCerificate
                    MarketplaceId: ATVPDKIKX0DER
                    ShipmentServiceLevelCategory: Standard
                    OrderType: StandardOrder
                    EarliestShipDate: 2017-01-20T19:51:16Z
                    LatestShipDate: 2017-01-25T19:49:35Z
                    IsBusinessOrder: false
                    IsPrime: false
                    IsGlobalExpressEnabled: false
                    IsPremiumOrder: false
                    IsSoldByAB: false
                    IsIBA: false
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  CreatedAfter:
                    value: TEST_CASE_400
              response:
                errors:
                - code: InvalidInput
                  message: Invalid Input
        403:
          description: Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
  /orders/v0/orders/{orderId}:
    get:
      tags:
      - ordersV0
      description: |-
        Returns the order indicated by the specified order ID.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: getOrder
      parameters:
      - name: orderId
        in: path
        description: An Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  PurchaseDate: 2017-01-20T19:49:35Z
                  LastUpdateDate: 2017-01-20T19:49:35Z
                  OrderStatus: Pending
                  FulfillmentChannel: SellerFulfilled
                  NumberOfItemsShipped: 0
                  NumberOfItemsUnshipped: 0
                  PaymentMethod: Other
                  PaymentMethodDetails:
                  - CreditCard
                  - GiftCerificate
                  MarketplaceId: ATVPDKIKX0DER
                  ShipmentServiceLevelCategory: Standard
                  OrderType: StandardOrder
                  EarliestShipDate: 2017-01-20T19:51:16Z
                  LatestShipDate: 2017-01-25T19:49:35Z
                  IsBusinessOrder: false
                  IsPrime: false
                  IsGlobalExpressEnabled: false
                  IsPremiumOrder: false
                  IsSoldByAB: false
                  IsIBA: false
                  DefaultShipFromLocationAddress:
                    Name: MFNIntegrationTestMerchant
                    AddressLine1: 2201 WESTLAKE AVE
                    City: SEATTLE
                    StateOrRegion: WA
                    PostalCode: 98121-2778
                    CountryCode: US
                    Phone: +1 480-386-0930 ext. 73824
                    AddressType: Commercial
                  FulfillmentInstruction:
                    FulfillmentSupplySourceId: sampleSupplySourceId
                  IsISPU: false
                  ShippingAddress:
                    Name: Michigan address
                    AddressLine1: 1 Cross St.
                    City: Canton
                    StateOrRegion: MI
                    PostalCode: "48817"
                    CountryCode: US
                  BuyerInfo:
                    BuyerEmail: user@example.com
                    BuyerName: John Doe
                    BuyerTaxInfo:
                      CompanyLegalName: A Company Name
                    PurchaseOrderNumber: "1234567890123"
                  AutomatedShippingSettings:
                    HasAutomatedShippingSettings: false
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_200
              response:
                payload:
                  AmazonOrderId: 902-1845936-5435065
                  PurchaseDate: 1970-01-19T03:58:30Z
                  LastUpdateDate: 1970-01-19T03:58:32Z
                  OrderStatus: Unshipped
                  FulfillmentChannel: MFN
                  SalesChannel: Amazon.com
                  ShipServiceLevel: Std US D2D Dom
                  OrderTotal:
                    CurrencyCode: USD
                    Amount: "11.01"
                  NumberOfItemsShipped: 0
                  NumberOfItemsUnshipped: 1
                  PaymentMethod: Other
                  PaymentMethodDetails:
                  - Standard
                  IsReplacementOrder: false
                  MarketplaceId: ATVPDKIKX0DER
                  ShipmentServiceLevelCategory: Standard
                  OrderType: StandardOrder
                  EarliestShipDate: 1970-01-19T03:59:27Z
                  LatestShipDate: 1970-01-19T04:05:13Z
                  EarliestDeliveryDate: 1970-01-19T04:06:39Z
                  LatestDeliveryDate: 1970-01-19T04:15:17Z
                  IsBusinessOrder: false
                  IsPrime: false
                  IsGlobalExpressEnabled: false
                  IsPremiumOrder: false
                  IsSoldByAB: false
                  IsIBA: false
                  DefaultShipFromLocationAddress:
                    Name: MFNIntegrationTestMerchant
                    AddressLine1: 2201 WESTLAKE AVE
                    City: SEATTLE
                    StateOrRegion: WA
                    PostalCode: 98121-2778
                    CountryCode: US
                    Phone: +1 480-386-0930 ext. 73824
                    AddressType: Commercial
                  FulfillmentInstruction:
                    FulfillmentSupplySourceId: sampleSupplySourceId
                  IsISPU: false
                  AutomatedShippingSettings:
                    HasAutomatedShippingSettings: false
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_IBA_200
              response:
                payload:
                  AmazonOrderId: 921-3175655-0452641
                  PurchaseDate: 2019-05-07T15:42:57.058Z
                  LastUpdateDate: 2019-05-08T21:59:59Z
                  OrderStatus: Shipped
                  FulfillmentChannel: AFN
                  SalesChannel: Amazon.de
                  ShipServiceLevel: Standard
                  OrderTotal:
                    CurrencyCode: EUR
                    Amount: "100.00"
                  NumberOfItemsShipped: 1
                  NumberOfItemsUnshipped: 0
                  PaymentMethod: Other
                  PaymentMethodDetails:
                  - Invoice
                  IsReplacementOrder: false
                  MarketplaceId: A1PA6795UKMFR9
                  ShipmentServiceLevelCategory: Standard
                  OrderType: StandardOrder
                  EarliestShipDate: 1970-01-19T03:59:27Z
                  LatestShipDate: 2019-05-08T21:59:59Z
                  EarliestDeliveryDate: 2019-05-10T21:59:59Z
                  LatestDeliveryDate: 2019-05-12T21:59:59Z
                  IsBusinessOrder: true
                  IsPrime: false
                  IsGlobalExpressEnabled: false
                  IsPremiumOrder: false
                  IsSoldByAB: true
                  IsIBA: true
                  DefaultShipFromLocationAddress:
                    Name: MFNIntegrationTestMerchant
                    AddressLine1: 2201 WESTLAKE AVE
                    City: SEATTLE
                    StateOrRegion: WA
                    PostalCode: 98121-2778
                    CountryCode: US
                    Phone: +1 480-386-0930 ext. 73824
                    AddressType: Commercial
                  FulfillmentInstruction:
                    FulfillmentSupplySourceId: sampleSupplySourceId
                  IsISPU: false
                  AutomatedShippingSettings:
                    HasAutomatedShippingSettings: false
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_400
              response:
                errors:
                - code: InvalidInput
                  message: Invalid Input
        403:
          description: Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
  /orders/v0/orders/{orderId}/buyerInfo:
    get:
      tags:
      - ordersV0
      description: |-
        Returns buyer information for the specified order.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: getOrderBuyerInfo
      parameters:
      - name: orderId
        in: path
        description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  BuyerEmail: user@example.com
                  BuyerName: John Smith
                  BuyerTaxInfo:
                    CompanyLegalName: Company Name
                  PurchaseOrderNumber: "1234567890123"
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_200
              response:
                payload:
                  AmazonOrderId: 902-1845936-5435065
                  BuyerEmail: fzyrv6gwkhbb15c@example.com
                  BuyerName: MFNIntegrationTestMerchant
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_400
              response:
                errors:
                - code: InvalidInput
                  message: Invalid Input
        403:
          description: Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
  /orders/v0/orders/{orderId}/address:
    get:
      tags:
      - ordersV0
      description: |-
        Returns the shipping address for the specified order.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: getOrderAddress
      parameters:
      - name: orderId
        in: path
        description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderAddressResponse'
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  ShippingAddress:
                    Name: Michigan address
                    AddressLine1: 1 cross st
                    City: Canton
                    StateOrRegion: MI
                    PostalCode: "48817"
                    CountryCode: US
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_200
              response:
                payload:
                  AmazonOrderId: 902-1845936-5435065
                  ShippingAddress:
                    Name: MFNIntegrationTestMerchant
                    AddressLine1: 2201 WESTLAKE AVE
                    City: SEATTLE
                    StateOrRegion: WA
                    PostalCode: 98121-2778
                    CountryCode: US
                    Phone: +1 480-386-0930 ext. 73824
                    AddressType: Commercial
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderAddressResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_400
              response:
                errors:
                - code: InvalidInput
                  message: Invalid Input
        403:
          description: Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderAddressResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderAddressResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderAddressResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderAddressResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderAddressResponse'
  /orders/v0/orders/{orderId}/orderItems:
    get:
      tags:
      - ordersV0
      description: |-
        Returns detailed order item information for the order indicated by the specified order ID. If NextToken is provided, it's used to retrieve the next page of order items.

        Note: When an order is in the Pending state (the order has been placed but payment has not been authorized), the getOrderItems operation does not return information about pricing, taxes, shipping charges, gift status or promotions for the order items in the order. After an order leaves the Pending state (this occurs when payment has been authorized) and enters the Unshipped, Partially Shipped, or Shipped state, the getOrderItems operation returns information about pricing, taxes, shipping charges, gift status and promotions for the order items in the order.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: getOrderItems
      parameters:
      - name: orderId
        in: path
        description: An Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      - name: NextToken
        in: query
        description: A string token returned in the response of your previous request.
        schema:
          type: string
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsResponse'
              example:
                payload:
                  AmazonOrderId: 903-1671087-0812628
                  NextToken: 2YgYW55IGNhcm5hbCBwbGVhc3VyZS4
                  OrderItems:
                  - ASIN: BT0093TELA
                    OrderItemId: "68828574383266"
                    SellerSKU: CBA_OTF_1
                    Title: Example item name
                    QuantityOrdered: 1
                    QuantityShipped: 1
                    PointsGranted:
                      PointsNumber: 10
                      PointsMonetaryValue:
                        CurrencyCode: JPY
                        Amount: "10.00"
                    ItemPrice:
                      CurrencyCode: JPY
                      Amount: "25.99"
                    ShippingPrice:
                      CurrencyCode: JPY
                      Amount: "1.26"
                    ScheduledDeliveryEndDate: 2013-09-09T01:30:00Z
                    ScheduledDeliveryStartDate: 2013-09-07T02:00:00Z
                    CODFee:
                      CurrencyCode: JPY
                      Amount: "10.00"
                    CODFeeDiscount:
                      CurrencyCode: JPY
                      Amount: "1.00"
                    PriceDesignation: BusinessPrice
                    BuyerInfo:
                      BuyerCustomizedInfo:
                        CustomizedURL: https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                      GiftMessageText: For you!
                      GiftWrapPrice:
                        CurrencyCode: GBP
                        Amount: "41.99"
                      GiftWrapLevel: Classic
                    BuyerRequestedCancel:
                      IsBuyerRequestedCancel: true
                      BuyerCancelReason: Found cheaper somewhere else.
                  - ASIN: BCTU1104UEFB
                    OrderItemId: "79039765272157"
                    SellerSKU: CBA_OTF_5
                    Title: Example item name
                    QuantityOrdered: 2
                    ItemPrice:
                      CurrencyCode: JPY
                      Amount: "17.95"
                    PromotionIds:
                    - FREESHIP
                    ConditionId: Used
                    ConditionSubtypeId: Mint
                    ConditionNote: Example ConditionNote
                    PriceDesignation: BusinessPrice
                    BuyerInfo:
                      BuyerCustomizedInfo:
                        CustomizedURL: https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                      GiftMessageText: For you!
                      GiftWrapPrice:
                        CurrencyCode: JPY
                        Amount: "1.99"
                      GiftWrapLevel: Classic
                    BuyerRequestedCancel:
                      IsBuyerRequestedCancel: true
                      BuyerCancelReason: Found cheaper somewhere else.
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_200
              response:
                payload:
                  AmazonOrderId: 902-1845936-5435065
                  OrderItems:
                  - ASIN: B00551Q3CS
                    OrderItemId: "05015851154158"
                    SellerSKU: NABetaASINB00551Q3CS
                    Title: B00551Q3CS [Card Book]
                    QuantityOrdered: 1
                    QuantityShipped: 0
                    ProductInfo:
                      NumberOfItems: 1
                    ItemPrice:
                      CurrencyCode: USD
                      Amount: "10.00"
                    ItemTax:
                      CurrencyCode: USD
                      Amount: "1.01"
                    PromotionDiscount:
                      CurrencyCode: USD
                      Amount: "0.00"
                    IsGift: false
                    ConditionId: New
                    ConditionSubtypeId: New
                    IsTransparency: false
                    SerialNumberRequired: false
                    IossNumber: ""
                    DeemedResellerCategory: IOSS
                    StoreChainStoreId: ISPU_StoreId
                    BuyerRequestedCancel:
                      IsBuyerRequestedCancel: true
                      BuyerCancelReason: Found cheaper somewhere else.
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_400
              response:
                errors:
                - code: InvalidInput
                  message: Invalid Input
        403:
          description: Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsResponse'
  /orders/v0/orders/{orderId}/orderItems/buyerInfo:
    get:
      tags:
      - ordersV0
      description: |-
        Returns buyer information for the order items in the specified order.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: getOrderItemsBuyerInfo
      parameters:
      - name: orderId
        in: path
        description: An Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      - name: NextToken
        in: query
        description: A string token returned in the response of your previous request.
        schema:
          type: string
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsBuyerInfoResponse'
              example:
                payload:
                  OrderItemId: 903-1671087-0812628
                  BuyerCustomizedInfo:
                    CustomizedURL: https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                  GiftMessageText: For you!
                  GiftWrapPrice:
                    CurrencyCode: JPY
                    Amount: "1.99"
                  GiftWrapLevel: Classic
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_200
              response:
                payload:
                  AmazonOrderId: 902-1845936-5435065
                  OrderItems:
                  - BuyerCustomizedInfo:
                      CustomizedURL: https://zme-caps.amazon.com/t/bR6qHkzSOxuB/J8nbWhze0Bd3DkajkOdY-XQbWkFralegp2sr_QZiKEE/1
                    GiftMessageText: Et toi!
                    GiftWrapPrice:
                      CurrencyCode: JPY
                      Amount: "1.99"
                    GiftWrapLevel: Classic
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsBuyerInfoResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_400
              response:
                errors:
                - code: InvalidInput
                  message: Invalid Input
        403:
          description: Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsBuyerInfoResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsBuyerInfoResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsBuyerInfoResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsBuyerInfoResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: |-
                Your rate limit (requests per second) for this operation.
                _Note:_ For this status code, the rate limit header is deprecated and no longer returned.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderItemsBuyerInfoResponse'
  /orders/v0/orders/{orderId}/shipment:
    post:
      tags:
      - shipment
      description: Update the shipment status.
      operationId: updateShipmentStatus
      parameters:
      - name: orderId
        in: path
        description: An Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      requestBody:
        description: Request to update the shipment status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentStatusRequest'
        required: true
      responses:
        204:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content: {}
          x-amzn-api-sandbox:
            static:
            - request:
                parameters: {}
              response: {}
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body:
                    value:
                      marketplaceId: "1"
                      shipmentStatus: ReadyForPickup
              response:
                errors:
                - code: InvalidInput
                  message: Marketplace id is not defined
                  details: "1001"
        403:
          description: Indicates that access to the resource is forbidden. Possible
            reasons include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
        413:
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
        415:
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShipmentStatusErrorResponse'
      x-codegen-request-body-name: payload
  /orders/v0/orders/{orderId}/regulatedInfo:
    get:
      tags:
      - ordersV0
      description: |-
        Returns regulated information for the order indicated by the specified order ID.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: getOrderRegulatedInfo
      parameters:
      - name: orderId
        in: path
        description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderRegulatedInfoResponse'
            PendingOrder:
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  RequiresDosageLabel: false
                  RegulatedInformation:
                    Fields:
                    - FieldId: pet_prescription_name
                      FieldLabel: Name
                      FieldType: Text
                      FieldValue: Ruffus
                    - FieldId: pet_prescription_species
                      FieldLabel: Species
                      FieldType: Text
                      FieldValue: Dog
                  RegulatedOrderVerificationStatus:
                    Status: Pending
                    RequiresMerchantAction: true
                    ValidRejectionReasons:
                    - RejectionReasonId: shield_pom_vps_reject_product
                      RejectionReasonDescription: This medicine is not suitable for
                        your pet.
                    - RejectionReasonId: shield_pom_vps_reject_age
                      RejectionReasonDescription: Your pet is too young for this medicine.
                    - RejectionReasonId: shield_pom_vps_reject_incorrect_weight
                      RejectionReasonDescription: Your pet's weight does not match
                        ordered size.
            ApprovedOrder:
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  RequiresDosageLabel: false
                  RegulatedInformation:
                    Fields:
                    - FieldId: pet_prescription_name
                      FieldLabel: Name
                      FieldType: Text
                      FieldValue: Ruffus
                    - FieldId: pet_prescription_species
                      FieldLabel: Species
                      FieldType: Text
                      FieldValue: Dog
                  RegulatedOrderVerificationStatus:
                    Status: Approved
                    RequiresMerchantAction: false
                    ValidRejectionReasons: []
                    ExternalReviewerId: externalId
                    ReviewDate: 1970-01-19T03:59:27Z
            RejectedOrder:
              example:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  RequiresDosageLabel: false
                  RegulatedInformation:
                    Fields:
                    - FieldId: pet_prescription_name
                      FieldLabel: Name
                      FieldType: Text
                      FieldValue: Ruffus
                    - FieldId: pet_prescription_species
                      FieldLabel: Species
                      FieldType: Text
                      FieldValue: Dog
                  RegulatedOrderVerificationStatus:
                    Status: Rejected
                    RequiresMerchantAction: false
                    RejectionReason:
                      RejectionReasonId: shield_pom_vps_reject_species
                      RejectionReasonDescription: This medicine is not suitable for
                        this type of pet.
                    ValidRejectionReasons: []
                    ExternalReviewerId: externalId
                    ReviewDate: 1970-01-19T03:59:27Z
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: 902-3159896-1390916
              response:
                payload:
                  AmazonOrderId: 902-3159896-1390916
                  RequiresDosageLabel: false
                  RegulatedInformation:
                    Fields:
                    - FieldId: pet_prescription_name
                      FieldLabel: Name
                      FieldType: Text
                      FieldValue: Ruffus
                    - FieldId: pet_prescription_species
                      FieldLabel: Species
                      FieldType: Text
                      FieldValue: Dog
                  RegulatedOrderVerificationStatus:
                    Status: Pending
                    RequiresMerchantAction: true
                    ValidRejectionReasons:
                    - RejectionReasonId: shield_pom_vps_reject_product
                      RejectionReasonDescription: This medicine is not suitable for
                        your pet.
                    - RejectionReasonId: shield_pom_vps_reject_age
                      RejectionReasonDescription: Your pet is too young for this medicine.
                    - RejectionReasonId: shield_pom_vps_reject_incorrect_weight
                      RejectionReasonDescription: Your pet's weight does not match
                        ordered size.
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderRegulatedInfoResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: TEST_CASE_400
              response:
                errors:
                - code: InvalidInput
                  message: Invalid Input
        403:
          description: Indicates access to the resource is forbidden. Possible reasons
            include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderRegulatedInfoResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderRegulatedInfoResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderRegulatedInfoResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderRegulatedInfoResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderRegulatedInfoResponse'
    patch:
      tags:
      - ordersV0
      description: |-
        Updates (approves or rejects) the verification status of an order containing regulated products.

        **Usage Plans:**

        | Plan type | Rate (requests per second) | Burst |
        | ---- | ---- | ---- |
        |Default| 0.0055 | 20 |
        |Selling partner specific| Variable | Variable |

        The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation.
      operationId: updateVerificationStatus
      parameters:
      - name: orderId
        in: path
        description: An orderId is an Amazon-defined order identifier, in 3-7-7 format.
        required: true
        schema:
          type: string
      requestBody:
        description: Request to update the verification status of an order containing
          regulated products.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVerificationStatusRequest'
        required: true
      responses:
        204:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content: {}
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: 902-3159896-1390916
                  body:
                    value:
                      regulatedOrderVerificationStatus:
                        status: Rejected
                        externalReviewerId: reviewer1234
                        rejectionReasonId: shield_pom_vps_reject_incorrect_weight
              response: {}
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  orderId:
                    value: 902-3159896-1390916
                  body:
                    value:
                      regulatedOrderVerificationStatus:
                        status: Rejected
              response:
                errors:
                - code: InvalidInput
                  message: 'Missing request parameter: rejectionReasonId.'
                - code: InvalidInput
                  message: 'Missing request parameter: externalReviewerId.'
            - request:
                parameters:
                  orderId:
                    value: 902-3159896-1390916
                  body:
                    value:
                      regulatedOrderVerificationStatus:
                        status: Cancelled
                        externalReviewerId: reviewer1234
              response:
                errors:
                - code: InvalidInput
                  message: Invalid request parameter `status`. Must be one of [Approved,
                    Rejected].
        403:
          description: Indicates that access to the resource is forbidden. Possible
            reasons include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
        413:
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
        415:
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference ID.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVerificationStatusErrorResponse'
      x-codegen-request-body-name: payload
components:
  schemas:
    UpdateShipmentStatusRequest:
      required:
      - marketplaceId
      - shipmentStatus
      type: object
      properties:
        marketplaceId:
          $ref: '#/components/schemas/MarketplaceId'
        shipmentStatus:
          $ref: '#/components/schemas/ShipmentStatus'
        orderItems:
          $ref: '#/components/schemas/OrderItems'
      description: Request to update the status of shipment of an order.
    UpdateVerificationStatusRequest:
      required:
      - regulatedOrderVerificationStatus
      type: object
      properties:
        regulatedOrderVerificationStatus:
          $ref: '#/components/schemas/UpdateVerificationStatusRequestBody'
      description: Request to update the verification status of an order containing
        regulated products.
    UpdateVerificationStatusRequestBody:
      required:
      - externalReviewerId
      - status
      type: object
      properties:
        status:
          type: string
          description: The new verification status of the order.
          enum:
          - Approved
          - Rejected
          x-docgen-enum-table-extension:
          - value: Approved
            description: The order's regulated information has been reviewed and approved.
          - value: Rejected
            description: The order's regulated information has been reviewed and rejected.
        externalReviewerId:
          type: string
          description: The identifier for the order's regulated information reviewer.
        rejectionReasonId:
          type: string
          description: The unique identifier for the rejection reason used for rejecting
            the order's regulated information. Only required if the new status is
            rejected.
      description: The updated values of the VerificationStatus field.
    MarketplaceId:
      type: string
      description: the unobfuscated marketplace ID
    ShipmentStatus:
      type: string
      description: the status of the shipment of the order to be updated
      enum:
      - ReadyForPickup
      - PickedUp
      - RefusedPickup
    OrderItems:
      type: array
      description: the list of order items and quantities when the seller wants to
        partially update the shipment status of the order
      items:
        type: object
        properties:
          orderItemId:
            type: string
            description: the unique identifier for the order item
          quantity:
            type: integer
            description: the quantity of items that needs an update of the shipment
              status
    UpdateShipmentStatusErrorResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The error response schema for the UpdateShipmentStatus operation.
    UpdateVerificationStatusErrorResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The error response schema for the UpdateVerificationStatus operation.
    GetOrdersResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/OrdersList'
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The response schema for the getOrders operation.
    GetOrderResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/Order'
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The response schema for the getOrder operation.
    GetOrderBuyerInfoResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/OrderBuyerInfo'
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The response schema for the getOrderBuyerInfo operation.
    GetOrderRegulatedInfoResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/OrderRegulatedInfo'
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The response schema for the getOrderRegulatedInfo operation.
    GetOrderAddressResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/OrderAddress'
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The response schema for the getOrderAddress operation.
    GetOrderItemsResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/OrderItemsList'
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The response schema for the getOrderItems operation.
    GetOrderItemsBuyerInfoResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/OrderItemsBuyerInfoList'
        errors:
          $ref: '#/components/schemas/ErrorList'
      description: The response schema for the getOrderItemsBuyerInfo operation.
    OrdersList:
      required:
      - Orders
      type: object
      properties:
        Orders:
          $ref: '#/components/schemas/OrderList'
        NextToken:
          type: string
          description: When present and not empty, pass this string token in the next
            request to return the next response page.
        LastUpdatedBefore:
          type: string
          description: A date used for selecting orders that were last updated before
            (or at) a specified time. An update is defined as any change in order
            status, including the creation of a new order. Includes updates made by
            Amazon and by the seller. All dates must be in ISO 8601 format.
        CreatedBefore:
          type: string
          description: A date used for selecting orders created before (or at) a specified
            time. Only orders placed before the specified time are returned. The date
            must be in ISO 8601 format.
      description: A list of orders along with additional information to make subsequent
        API calls.
    OrderList:
      type: array
      description: A list of orders.
      items:
        $ref: '#/components/schemas/Order'
    Order:
      required:
      - AmazonOrderId
      - LastUpdateDate
      - OrderStatus
      - PurchaseDate
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        SellerOrderId:
          type: string
          description: A seller-defined order identifier.
        PurchaseDate:
          type: string
          description: The date when the order was created.
        LastUpdateDate:
          type: string
          description: |-
            The date when the order was last updated.

            Note: LastUpdateDate is returned with an incorrect date for orders that were last updated before 2009-04-01.
        OrderStatus:
          type: string
          description: The current order status.
          enum:
          - Pending
          - Unshipped
          - PartiallyShipped
          - Shipped
          - Canceled
          - Unfulfillable
          - InvoiceUnconfirmed
          - PendingAvailability
          x-docgen-enum-table-extension:
          - value: Pending
            description: The order has been placed but payment has not been authorized.
              The order is not ready for shipment. Note that for orders with OrderType
              = Standard, the initial order status is Pending. For orders with OrderType
              = Preorder, the initial order status is PendingAvailability, and the
              order passes into the Pending status when the payment authorization
              process begins.
          - value: Unshipped
            description: Payment has been authorized and order is ready for shipment,
              but no items in the order have been shipped.
          - value: PartiallyShipped
            description: One or more (but not all) items in the order have been shipped.
          - value: Shipped
            description: All items in the order have been shipped.
          - value: Canceled
            description: The order was canceled.
          - value: Unfulfillable
            description: The order cannot be fulfilled. This state applies only to
              Amazon-fulfilled orders that were not placed on Amazon's retail web
              site.
          - value: InvoiceUnconfirmed
            description: All items in the order have been shipped. The seller has
              not yet given confirmation to Amazon that the invoice has been shipped
              to the buyer.
          - value: PendingAvailability
            description: This status is available for pre-orders only. The order has
              been placed, payment has not been authorized, and the release date of
              the item is in the future. The order is not ready for shipment.
        FulfillmentChannel:
          type: string
          description: Whether the order was fulfilled by Amazon (AFN) or by the seller
            (MFN).
          enum:
          - MFN
          - AFN
          x-docgen-enum-table-extension:
          - value: MFN
            description: Fulfilled by the seller.
          - value: AFN
            description: Fulfilled by Amazon.
        SalesChannel:
          type: string
          description: The sales channel of the first item in the order.
        OrderChannel:
          type: string
          description: The order channel of the first item in the order.
        ShipServiceLevel:
          type: string
          description: The shipment service level of the order.
        OrderTotal:
          $ref: '#/components/schemas/Money'
        NumberOfItemsShipped:
          type: integer
          description: The number of items shipped.
        NumberOfItemsUnshipped:
          type: integer
          description: The number of items unshipped.
        PaymentExecutionDetail:
          $ref: '#/components/schemas/PaymentExecutionDetailItemList'
        PaymentMethod:
          type: string
          description: The payment method for the order. This property is limited
            to Cash On Delivery (COD) and Convenience Store (CVS) payment methods.
            Unless you need the specific COD payment information provided by the PaymentExecutionDetailItem
            object, we recommend using the PaymentMethodDetails property to get payment
            method information.
          enum:
          - COD
          - CVS
          - Other
          x-docgen-enum-table-extension:
          - value: COD
            description: Cash on delivery.
          - value: CVS
            description: Convenience store.
          - value: Other
            description: A payment method other than COD and CVS.
        PaymentMethodDetails:
          $ref: '#/components/schemas/PaymentMethodDetailItemList'
        MarketplaceId:
          type: string
          description: The identifier for the marketplace where the order was placed.
        ShipmentServiceLevelCategory:
          type: string
          description: |-
            The shipment service level category of the order.

            Possible values: Expedited, FreeEconomy, NextDay, SameDay, SecondDay, Scheduled, Standard.
        EasyShipShipmentStatus:
          type: string
          description: |-
            The status of the Amazon Easy Ship order. This property is included only for Amazon Easy Ship orders.

            Possible values: PendingPickUp, LabelCanceled, PickedUp, OutForDelivery, Damaged, Delivered, RejectedByBuyer, Undeliverable, ReturnedToSeller, ReturningToSeller.
        CbaDisplayableShippingLabel:
          type: string
          description: Custom ship label for Checkout by Amazon (CBA).
        OrderType:
          type: string
          description: The type of the order.
          enum:
          - StandardOrder
          - LongLeadTimeOrder
          - Preorder
          - BackOrder
          - SourcingOnDemandOrder
          x-docgen-enum-table-extension:
          - value: StandardOrder
            description: An order that contains items for which the selling partner
              currently has inventory in stock.
          - value: LongLeadTimeOrder
            description: An order that contains items that have a long lead time to
              ship.
          - value: Preorder
            description: An order that contains items with a release date that is
              in the future.
          - value: BackOrder
            description: An order that contains items that already have been released
              in the market but are currently out of stock and will be available in
              the future.
          - value: SourcingOnDemandOrder
            description: A Sourcing On Demand order.
        EarliestShipDate:
          type: string
          description: |-
            The start of the time period within which you have committed to ship the order. In ISO 8601 date time format. Returned only for seller-fulfilled orders.

            Note: EarliestShipDate might not be returned for orders placed before February 1, 2013.
        LatestShipDate:
          type: string
          description: |-
            The end of the time period within which you have committed to ship the order. In ISO 8601 date time format. Returned only for seller-fulfilled orders.

            Note: LatestShipDate might not be returned for orders placed before February 1, 2013.
        EarliestDeliveryDate:
          type: string
          description: The start of the time period within which you have committed
            to fulfill the order. In ISO 8601 date time format. Returned only for
            seller-fulfilled orders.
        LatestDeliveryDate:
          type: string
          description: The end of the time period within which you have committed
            to fulfill the order. In ISO 8601 date time format. Returned only for
            seller-fulfilled orders that do not have a PendingAvailability, Pending,
            or Canceled status.
        IsBusinessOrder:
          type: boolean
          description: When true, the order is an Amazon Business order. An Amazon
            Business order is an order where the buyer is a Verified Business Buyer.
        IsPrime:
          type: boolean
          description: When true, the order is a seller-fulfilled Amazon Prime order.
        IsPremiumOrder:
          type: boolean
          description: When true, the order has a Premium Shipping Service Level Agreement.
            For more information about Premium Shipping orders, see "Premium Shipping
            Options" in the Seller Central Help for your marketplace.
        IsGlobalExpressEnabled:
          type: boolean
          description: When true, the order is a GlobalExpress order.
        ReplacedOrderId:
          type: string
          description: The order ID value for the order that is being replaced. Returned
            only if IsReplacementOrder = true.
        IsReplacementOrder:
          type: boolean
          description: When true, this is a replacement order.
        PromiseResponseDueDate:
          type: string
          description: Indicates the date by which the seller must respond to the
            buyer with an estimated ship date. Returned only for Sourcing on Demand
            orders.
        IsEstimatedShipDateSet:
          type: boolean
          description: When true, the estimated ship date is set for the order. Returned
            only for Sourcing on Demand orders.
        IsSoldByAB:
          type: boolean
          description: When true, the item within this order was bought and re-sold
            by Amazon Business EU SARL (ABEU). By buying and instantly re-selling
            your items, ABEU becomes the seller of record, making your inventory available
            for sale to customers who would not otherwise purchase from a third-party
            seller.
        IsIBA:
          type: boolean
          description: When true, the item within this order was bought and re-sold
            by Amazon Business EU SARL (ABEU). By buying and instantly re-selling
            your items, ABEU becomes the seller of record, making your inventory available
            for sale to customers who would not otherwise purchase from a third-party
            seller.
        DefaultShipFromLocationAddress:
          $ref: '#/components/schemas/Address'
        BuyerInvoicePreference:
          type: string
          description: The buyer's invoicing preference. Available only in the TR
            marketplace.
          enum:
          - INDIVIDUAL
          - BUSINESS
          x-docgen-enum-table-extension:
          - value: INDIVIDUAL
            description: Buyer should be issued an individual invoice.
          - value: BUSINESS
            description: Buyer should be issued a business invoice. Tax information
              is available in BuyerTaxInformation structure.
        BuyerTaxInformation:
          $ref: '#/components/schemas/BuyerTaxInformation'
        FulfillmentInstruction:
          $ref: '#/components/schemas/FulfillmentInstruction'
        IsISPU:
          type: boolean
          description: When true, this order is marked to be picked up from a store
            rather than delivered.
        MarketplaceTaxInfo:
          $ref: '#/components/schemas/MarketplaceTaxInfo'
        SellerDisplayName:
          type: string
          description: The seller’s friendly name registered in the marketplace.
        ShippingAddress:
          $ref: '#/components/schemas/Address'
        BuyerInfo:
          $ref: '#/components/schemas/BuyerInfo'
        AutomatedShippingSettings:
          $ref: '#/components/schemas/AutomatedShippingSettings'
        HasRegulatedItems:
          type: boolean
          description: Whether the order contains regulated items which may require
            additional approval steps before being fulfilled.
      description: Order information.
    OrderBuyerInfo:
      required:
      - AmazonOrderId
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        BuyerEmail:
          type: string
          description: The anonymized email address of the buyer.
        BuyerName:
          type: string
          description: The name of the buyer.
        BuyerCounty:
          type: string
          description: The county of the buyer.
        BuyerTaxInfo:
          $ref: '#/components/schemas/BuyerTaxInfo'
        PurchaseOrderNumber:
          type: string
          description: The purchase order (PO) number entered by the buyer at checkout.
            Returned only for orders where the buyer entered a PO number at checkout.
      description: Buyer information for an order.
    OrderRegulatedInfo:
      required:
      - AmazonOrderId
      - RegulatedInformation
      - RegulatedOrderVerificationStatus
      - RequiresDosageLabel
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        RegulatedInformation:
          $ref: '#/components/schemas/RegulatedInformation'
        RequiresDosageLabel:
          type: boolean
          description: Whether the order requires attaching a dosage information label
            when shipped.
        RegulatedOrderVerificationStatus:
          $ref: '#/components/schemas/RegulatedOrderVerificationStatus'
      description: The order's regulated information along with its verification status.
    RegulatedOrderVerificationStatus:
      required:
      - RequiresMerchantAction
      - Status
      - ValidRejectionReasons
      type: object
      properties:
        Status:
          type: string
          description: The verification status of the order.
          enum:
          - Pending
          - Approved
          - Rejected
          - Expired
          - Cancelled
          x-docgen-enum-table-extension:
          - value: Pending
            description: The order is pending approval. Note the approval might be
              needed from someone other than the merchant as determined by the RequiresMerchantAction
              field.
          - value: Approved
            description: The order's regulated information has been reviewed and approved.
          - value: Rejected
            description: The order's regulated information has been reviewed and rejected.
          - value: Expired
            description: The time to review the order's regulated information has
              expired.
          - value: Cancelled
            description: The order was cancelled by the purchaser.
        RequiresMerchantAction:
          type: boolean
          description: Whether the regulated information provided in the order requires
            a review by the merchant.
        ValidRejectionReasons:
          type: array
          description: A list of valid rejection reasons that may be used to reject
            the order's regulated information.
          items:
            $ref: '#/components/schemas/RejectionReason'
        RejectionReason:
          $ref: '#/components/schemas/RejectionReason'
        ReviewDate:
          type: string
          description: The date the order was reviewed. In ISO 8601 date time format.
        ExternalReviewerId:
          type: string
          description: The identifier for the order's regulated information reviewer.
      description: The verification status of the order along with associated approval
        or rejection metadata.
    RejectionReason:
      required:
      - RejectionReasonDescription
      - RejectionReasonId
      type: object
      properties:
        RejectionReasonId:
          type: string
          description: The unique identifier for the rejection reason.
        RejectionReasonDescription:
          type: string
          description: The human-readable description of this rejection reason.
      description: The reason for rejecting the order's regulated information. Not
        present if the order isn't rejected.
    RegulatedInformation:
      required:
      - Fields
      type: object
      properties:
        Fields:
          type: array
          description: A list of regulated information fields as collected from the
            regulatory form.
          items:
            $ref: '#/components/schemas/RegulatedInformationField'
      description: The regulated information collected during purchase and used to
        verify the order.
    RegulatedInformationField:
      required:
      - FieldId
      - FieldLabel
      - FieldType
      - FieldValue
      type: object
      properties:
        FieldId:
          type: string
          description: The unique identifier for the field.
        FieldLabel:
          type: string
          description: The human-readable name for the field.
        FieldType:
          type: string
          description: The type of field the field.
          enum:
          - Text
          - FileAttachment
          x-docgen-enum-table-extension:
          - value: Text
            description: This field is a text representation of a response collected
              from the regulatory form.
          - value: FileAttachment
            description: This field contains the link to an attachment collected from
              the regulatory form.
        FieldValue:
          type: string
          description: The content of the field as collected in regulatory form. Note
            that FileAttachment type fields will contain an URL to download the attachment
            here.
      description: A field collected from the regulatory form.
    OrderAddress:
      required:
      - AmazonOrderId
      type: object
      properties:
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
        ShippingAddress:
          $ref: '#/components/schemas/Address'
      description: The shipping address for the order.
    Address:
      required:
      - Name
      type: object
      properties:
        Name:
          type: string
          description: The name.
        AddressLine1:
          type: string
          description: The street address.
        AddressLine2:
          type: string
          description: Additional street address information, if required.
        AddressLine3:
          type: string
          description: Additional street address information, if required.
        City:
          type: string
          description: 'The city '
        County:
          type: string
          description: The county.
        District:
          type: string
          description: The district.
        StateOrRegion:
          type: string
          description: The state or region.
        Municipality:
          type: string
          description: The municipality.
        PostalCode:
          type: string
          description: The postal code.
        CountryCode:
          type: string
          description: The country code. A two-character country code, in ISO 3166-1
            alpha-2 format.
        Phone:
          type: string
          description: The phone number. Not returned for Fulfillment by Amazon (FBA)
            orders.
        AddressType:
          type: string
          description: The address type of the shipping address.
          enum:
          - Residential
          - Commercial
          x-docgen-enum-table-extension:
          - value: Residential
            description: The shipping address is a residential address.
          - value: Commercial
            description: The shipping address is a commercial address.
      description: The shipping address for the order.
    Money:
      type: object
      properties:
        CurrencyCode:
          type: string
          description: The three-digit currency code. In ISO 4217 format.
        Amount:
          type: string
          description: The currency amount.
      description: The monetary value of the order.
    PaymentMethodDetailItemList:
      type: array
      description: A list of payment method detail items.
      items:
        type: string
    PaymentExecutionDetailItemList:
      type: array
      description: A list of payment execution detail items.
      items:
        $ref: '#/components/schemas/PaymentExecutionDetailItem'
    PaymentExecutionDetailItem:
      required:
      - Payment
      - PaymentMethod
      type: object
      properties:
        Payment:
          $ref: '#/components/schemas/Money'
        PaymentMethod:
          type: string
          description: |-
            A sub-payment method for a COD order.

            Possible values:

            * COD - Cash On Delivery.

            * GC - Gift Card.

            * PointsAccount - Amazon Points.
      description: Information about a sub-payment method used to pay for a COD order.
    BuyerTaxInfo:
      type: object
      properties:
        CompanyLegalName:
          type: string
          description: The legal name of the company.
        TaxingRegion:
          type: string
          description: The country or region imposing the tax.
        TaxClassifications:
          type: array
          description: A list of tax classifications that apply to the order.
          items:
            $ref: '#/components/schemas/TaxClassification'
      description: Tax information about the buyer.
    MarketplaceTaxInfo:
      type: object
      properties:
        TaxClassifications:
          type: array
          description: A list of tax classifications that apply to the order.
          items:
            $ref: '#/components/schemas/TaxClassification'
      description: Tax information about the marketplace.
    TaxClassification:
      type: object
      properties:
        Name:
          type: string
          description: The type of tax.
        Value:
          type: string
          description: The buyer's tax identifier.
      description: The tax classification for the order.
    OrderItemsList:
      required:
      - AmazonOrderId
      - OrderItems
      type: object
      properties:
        OrderItems:
          $ref: '#/components/schemas/OrderItemList'
        NextToken:
          type: string
          description: When present and not empty, pass this string token in the next
            request to return the next response page.
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
      description: The order items list along with the order ID.
    OrderItemList:
      type: array
      description: A list of order items.
      items:
        $ref: '#/components/schemas/OrderItem'
    OrderItem:
      required:
      - ASIN
      - OrderItemId
      - QuantityOrdered
      type: object
      properties:
        ASIN:
          type: string
          description: The Amazon Standard Identification Number (ASIN) of the item.
        SellerSKU:
          type: string
          description: The seller stock keeping unit (SKU) of the item.
        OrderItemId:
          type: string
          description: An Amazon-defined order item identifier.
        Title:
          type: string
          description: The name of the item.
        QuantityOrdered:
          type: integer
          description: 'The number of items in the order. '
        QuantityShipped:
          type: integer
          description: The number of items shipped.
        ProductInfo:
          $ref: '#/components/schemas/ProductInfoDetail'
        PointsGranted:
          $ref: '#/components/schemas/PointsGrantedDetail'
        ItemPrice:
          $ref: '#/components/schemas/Money'
        ShippingPrice:
          $ref: '#/components/schemas/Money'
        ItemTax:
          $ref: '#/components/schemas/Money'
        ShippingTax:
          $ref: '#/components/schemas/Money'
        ShippingDiscount:
          $ref: '#/components/schemas/Money'
        ShippingDiscountTax:
          $ref: '#/components/schemas/Money'
        PromotionDiscount:
          $ref: '#/components/schemas/Money'
        PromotionDiscountTax:
          $ref: '#/components/schemas/Money'
        PromotionIds:
          $ref: '#/components/schemas/PromotionIdList'
        CODFee:
          $ref: '#/components/schemas/Money'
        CODFeeDiscount:
          $ref: '#/components/schemas/Money'
        IsGift:
          type: boolean
          description: When true, the item is a gift.
        ConditionNote:
          type: string
          description: The condition of the item as described by the seller.
        ConditionId:
          type: string
          description: |-
            The condition of the item.

            Possible values: New, Used, Collectible, Refurbished, Preorder, Club.
        ConditionSubtypeId:
          type: string
          description: |-
            The subcondition of the item.

            Possible values: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, Any, Other.
        ScheduledDeliveryStartDate:
          type: string
          description: The start date of the scheduled delivery window in the time
            zone of the order destination. In ISO 8601 date time format.
        ScheduledDeliveryEndDate:
          type: string
          description: The end date of the scheduled delivery window in the time zone
            of the order destination. In ISO 8601 date time format.
        PriceDesignation:
          type: string
          description: "Indicates that the selling price is a special price that is\
            \ available only for Amazon Business orders. For more information about\
            \ the Amazon Business Seller Program, see the [Amazon Business website](https://www.amazon.com/b2b/info/amazon-business).\
            \ \n\nPossible values: BusinessPrice - A special price that is available\
            \ only for Amazon Business orders."
        TaxCollection:
          $ref: '#/components/schemas/TaxCollection'
        SerialNumberRequired:
          type: boolean
          description: |-
            When true, the product type for this item has a serial number.

            Returned only for Amazon Easy Ship orders.
        IsTransparency:
          type: boolean
          description: When true, transparency codes are required.
        IossNumber:
          type: string
          description: The IOSS number for the marketplace. Sellers shipping to the
            European Union (EU) from outside of the EU must provide this IOSS number
            to their carrier when Amazon has collected the VAT on the sale.
        StoreChainStoreId:
          type: string
          description: The store chain store identifier. Linked to a specific store
            in a store chain.
        DeemedResellerCategory:
          type: string
          description: The category of deemed reseller. This applies to selling partners
            that are not based in the EU and is used to help them meet the VAT Deemed
            Reseller tax laws in the EU and UK.
          enum:
          - IOSS
          - UOSS
          x-docgen-enum-table-extension:
          - value: IOSS
            description: Import one stop shop. The item being purchased is not held
              in the EU for shipment.
          - value: UOSS
            description: Union one stop shop. The item being purchased is held in
              the EU for shipment.
        BuyerInfo:
          $ref: '#/components/schemas/ItemBuyerInfo'
        BuyerRequestedCancel:
          $ref: '#/components/schemas/BuyerRequestedCancel'
      description: A single order item.
    OrderItemsBuyerInfoList:
      required:
      - AmazonOrderId
      - OrderItems
      type: object
      properties:
        OrderItems:
          $ref: '#/components/schemas/OrderItemBuyerInfoList'
        NextToken:
          type: string
          description: When present and not empty, pass this string token in the next
            request to return the next response page.
        AmazonOrderId:
          type: string
          description: An Amazon-defined order identifier, in 3-7-7 format.
      description: A single order item's buyer information list with the order ID.
    OrderItemBuyerInfoList:
      type: array
      description: A single order item's buyer information list.
      items:
        $ref: '#/components/schemas/OrderItemBuyerInfo'
    OrderItemBuyerInfo:
      required:
      - OrderItemId
      type: object
      properties:
        OrderItemId:
          type: string
          description: An Amazon-defined order item identifier.
        BuyerCustomizedInfo:
          $ref: '#/components/schemas/BuyerCustomizedInfoDetail'
        GiftWrapPrice:
          $ref: '#/components/schemas/Money'
        GiftWrapTax:
          $ref: '#/components/schemas/Money'
        GiftMessageText:
          type: string
          description: A gift message provided by the buyer.
        GiftWrapLevel:
          type: string
          description: The gift wrap level specified by the buyer.
      description: A single order item's buyer information.
    PointsGrantedDetail:
      type: object
      properties:
        PointsNumber:
          type: integer
          description: The number of Amazon Points granted with the purchase of an
            item.
        PointsMonetaryValue:
          $ref: '#/components/schemas/Money'
      description: The number of Amazon Points offered with the purchase of an item,
        and their monetary value.
    ProductInfoDetail:
      type: object
      properties:
        NumberOfItems:
          type: integer
          description: The total number of items that are included in the ASIN.
      description: Product information on the number of items.
    PromotionIdList:
      type: array
      description: A list of promotion identifiers provided by the seller when the
        promotions were created.
      items:
        type: string
    BuyerCustomizedInfoDetail:
      type: object
      properties:
        CustomizedURL:
          type: string
          description: The location of a zip file containing Amazon Custom data.
      description: Buyer information for custom orders from the Amazon Custom program.
    TaxCollection:
      type: object
      properties:
        Model:
          type: string
          description: The tax collection model applied to the item.
          enum:
          - MarketplaceFacilitator
          x-docgen-enum-table-extension:
          - value: MarketplaceFacilitator
            description: Tax is withheld and remitted to the taxing authority by Amazon
              on behalf of the seller.
        ResponsibleParty:
          type: string
          description: The party responsible for withholding the taxes and remitting
            them to the taxing authority.
          enum:
          - Amazon Services, Inc.
          x-docgen-enum-table-extension:
          - value: Amazon Services, Inc.
            description: Amazon Services, Inc.
      description: Information about withheld taxes.
    BuyerTaxInformation:
      type: object
      properties:
        BuyerLegalCompanyName:
          type: string
          description: Business buyer's company legal name.
        BuyerBusinessAddress:
          type: string
          description: Business buyer's address.
        BuyerTaxRegistrationId:
          type: string
          description: Business buyer's tax registration ID.
        BuyerTaxOffice:
          type: string
          description: Business buyer's tax office.
      description: Contains the business invoice tax information. Available only in
        the TR marketplace.
    FulfillmentInstruction:
      type: object
      properties:
        FulfillmentSupplySourceId:
          type: string
          description: Denotes the recommended sourceId where the order should be
            fulfilled from.
      description: Contains the instructions about the fulfillment like where should
        it be fulfilled from.
    BuyerInfo:
      type: object
      properties:
        BuyerEmail:
          type: string
          description: The anonymized email address of the buyer.
        BuyerName:
          type: string
          description: The name of the buyer.
        BuyerCounty:
          type: string
          description: The county of the buyer.
        BuyerTaxInfo:
          $ref: '#/components/schemas/BuyerTaxInfo'
        PurchaseOrderNumber:
          type: string
          description: The purchase order (PO) number entered by the buyer at checkout.
            Returned only for orders where the buyer entered a PO number at checkout.
      description: Buyer information
    ItemBuyerInfo:
      type: object
      properties:
        BuyerCustomizedInfo:
          $ref: '#/components/schemas/BuyerCustomizedInfoDetail'
        GiftWrapPrice:
          $ref: '#/components/schemas/Money'
        GiftWrapTax:
          $ref: '#/components/schemas/Money'
        GiftMessageText:
          type: string
          description: A gift message provided by the buyer.
        GiftWrapLevel:
          type: string
          description: The gift wrap level specified by the buyer.
      description: A single item's buyer information.
    AutomatedShippingSettings:
      type: object
      properties:
        HasAutomatedShippingSettings:
          type: boolean
          description: If true, this order has automated shipping settings generated
            by Amazon. This order could be identified as an SSA order.
        AutomatedCarrier:
          type: string
          description: Auto-generated carrier for SSA orders.
        AutomatedShipMethod:
          type: string
          description: Auto-generated ship method for SSA orders.
      description: Contains information regarding the Shipping Settings Automation
        program, such as whether the order's shipping settings were generated automatically,
        and what those settings are.
    BuyerRequestedCancel:
      type: object
      properties:
        IsBuyerRequestedCancel:
          type: boolean
          description: When true, the buyer has requested cancellation.
        BuyerCancelReason:
          type: string
          description: Reason for buyer requesting cancel
      description: Information about whether or not a buyer requested cancellation.
    ErrorList:
      type: array
      description: A list of error responses returned when a request is unsuccessful.
      items:
        $ref: '#/components/schemas/Error'
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: A message that describes the error condition in a human-readable
            form.
        details:
          type: string
          description: Additional details that can help the caller understand or fix
            the issue.
      description: Error response returned when the request is unsuccessful.
