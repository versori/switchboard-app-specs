openapi: 3.0.1
info:
  title: Selling Partner API for Listings Items
  description: |-
    The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.

    For more information, see the [Listings Items API Use Case Guide](doc:listings-items-api-v2021-08-01-use-case-guide).
  contact:
    name: Selling Partner API Developer Support
    url: https://sellercentral.amazon.com/gp/mws/contactus.html
  license:
    name: Apache License 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: "2021-08-01"
servers:
- url: https://sellingpartnerapi-na.amazon.com/
paths:
  /listings/2021-08-01/items/{sellerId}/{sku}:
    get:
      tags:
      - listings
      description: |-
        Returns details about a listings item for a selling partner.

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: getListingsItem
      parameters:
      - name: sellerId
        in: path
        description: A selling partner identifier, such as a merchant account or vendor
          code.
        required: true
        schema:
          type: string
      - name: sku
        in: path
        description: A selling partner provided identifier for an Amazon listing.
        required: true
        schema:
          type: string
      - name: marketplaceIds
        in: query
        description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
        example: ATVPDKIKX0DER
      - name: issueLocale
        in: query
        description: 'A locale for localization of issues. When not provided, the
          default language code of the first marketplace is used. Examples: "en_US",
          "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization
          is not available in the specified locale.'
        schema:
          type: string
        example: en_US
      - name: includedData
        in: query
        description: 'A comma-delimited list of data sets to include in the response.
          Default: summaries.'
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - summaries
            - attributes
            - issues
            - offers
            - fulfillmentAvailability
            - procurement
            x-docgen-enum-table-extension:
            - value: summaries
              description: Summary details of the listing item.
            - value: attributes
              description: JSON object containing structured listing item attribute
                data keyed by attribute name.
            - value: issues
              description: Issues associated with the listing item.
            - value: offers
              description: Current offers for the listing item.
            - value: fulfillmentAvailability
              description: Fulfillment availability details for the listing item.
            - value: procurement
              description: 'Vendor procurement details for the listing item. '
        example: summaries
      responses:
        200:
          description: Success.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
              example:
                sku: GM-ZDPI-9B4E
                summaries:
                - marketplaceId: ATVPDKIKX0DER
                  asin: B071VG5N9D
                  productType: LUGGAGE
                  conditionType: new_new
                  status:
                  - BUYABLE
                  itemName: Hardside Carry-On Spinner Suitcase Luggage
                  createdDate: 2021-02-01T00:00:00Z
                  lastUpdatedDate: 2021-03-01T00:00:00Z
                  mainImage:
                    link: https://www.example.com/luggage.png
                    height: 500
                    width: 500
                offers:
                - marketplaceId: ATVPDKIKX0DER
                  offerType: B2C
                  price:
                    currencyCode: USD
                    amount: "100.00"
                fulfillmentAvailability:
                - fulfillmentChannelCode: DEFAULT
                  quantity: 100
                issues: []
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body: {}
              response:
                sku: GM-ZDPI-9B4E
                summaries:
                - marketplaceId: ATVPDKIKX0DER
                  asin: B071VG5N9D
                  productType: LUGGAGE
                  conditionType: new_new
                  status:
                  - BUYABLE
                  itemName: Hardside Carry-On Spinner Suitcase Luggage
                  createdDate: 2021-02-01T00:00:00Z
                  lastUpdatedDate: 2021-03-01T00:00:00Z
                  mainImage:
                    link: https://www.example.com/luggage.png
                    height: 500
                    width: 500
                offers:
                - marketplaceId: ATVPDKIKX0DER
                  offerType: B2C
                  price:
                    currencyCode: USD
                    amount: "100.00"
                fulfillmentAvailability:
                - fulfillmentChannelCode: DEFAULT
                  quantity: 100
                issues: []
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        403:
          description: Indicates that access to the resource is forbidden. Possible
            reasons include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        404:
          description: The resource specified does not exist.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        413:
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        415:
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
    put:
      tags:
      - listings
      description: |-
        Creates a new or fully-updates an existing listings item for a selling partner.

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: putListingsItem
      parameters:
      - name: sellerId
        in: path
        description: A selling partner identifier, such as a merchant account or vendor
          code.
        required: true
        schema:
          type: string
      - name: sku
        in: path
        description: A selling partner provided identifier for an Amazon listing.
        required: true
        schema:
          type: string
      - name: marketplaceIds
        in: query
        description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
        example: ATVPDKIKX0DER
      - name: issueLocale
        in: query
        description: 'A locale for localization of issues. When not provided, the
          default language code of the first marketplace is used. Examples: "en_US",
          "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization
          is not available in the specified locale.'
        schema:
          type: string
        example: en_US
      requestBody:
        description: The request body schema for the putListingsItem operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingsItemPutRequest'
        required: true
      responses:
        200:
          description: Successfully understood the request to create or fully-update
            a listings item. See the response to determine if the submission has been
            accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingsItemSubmissionResponse'
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body: {}
              response:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        403:
          description: Indicates that access to the resource is forbidden. Possible
            reasons include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        413:
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        415:
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      x-codegen-request-body-name: body
    delete:
      tags:
      - listings
      description: |-
        Delete a listings item for a selling partner.

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: deleteListingsItem
      parameters:
      - name: sellerId
        in: path
        description: A selling partner identifier, such as a merchant account or vendor
          code.
        required: true
        schema:
          type: string
      - name: sku
        in: path
        description: A selling partner provided identifier for an Amazon listing.
        required: true
        schema:
          type: string
      - name: marketplaceIds
        in: query
        description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
        example: ATVPDKIKX0DER
      - name: issueLocale
        in: query
        description: 'A locale for localization of issues. When not provided, the
          default language code of the first marketplace is used. Examples: "en_US",
          "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization
          is not available in the specified locale.'
        schema:
          type: string
        example: en_US
      responses:
        200:
          description: Successfully understood the listings item delete request. See
            the response to determine whether the submission has been accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingsItemSubmissionResponse'
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
          x-amzn-api-sandbox:
            static:
            - request:
                parameters: {}
              response:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        403:
          description: Indicates that access to the resource is forbidden. Possible
            reasons include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        413:
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        415:
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
    patch:
      tags:
      - listings
      description: |-
        Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.

        **Usage Plan:**

        | Rate (requests per second) | Burst |
        | ---- | ---- |
        | 5 | 10 |

        The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
      operationId: patchListingsItem
      parameters:
      - name: sellerId
        in: path
        description: A selling partner identifier, such as a merchant account or vendor
          code.
        required: true
        schema:
          type: string
      - name: sku
        in: path
        description: A selling partner provided identifier for an Amazon listing.
        required: true
        schema:
          type: string
      - name: marketplaceIds
        in: query
        description: A comma-delimited list of Amazon marketplace identifiers for
          the request.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
        example: ATVPDKIKX0DER
      - name: issueLocale
        in: query
        description: 'A locale for localization of issues. When not provided, the
          default language code of the first marketplace is used. Examples: "en_US",
          "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization
          is not available in the specified locale.'
        schema:
          type: string
        example: en_US
      requestBody:
        description: The request body schema for the patchListingsItem operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingsItemPatchRequest'
        required: true
      responses:
        200:
          description: Successfully understood the listings item patch request. See
            the response to determine if the submission was accepted.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingsItemSubmissionResponse'
              example:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  body: {}
              response:
                sku: GM-ZDPI-9B4E
                status: ACCEPTED
                submissionId: f1dc2914-75dd-11ea-bc55-0242ac130003
                issues: []
        400:
          description: Request has missing or invalid parameters and cannot be parsed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
            x-amzn-RateLimit-Limit:
              description: Your rate limit (requests per second) for this operation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          x-amzn-api-sandbox:
            static:
            - request:
                parameters:
                  sku:
                    value: BadSKU
              response:
                errors:
                - code: BAD_REQUEST
                  message: Invalid input
                  details: Invalid input
        403:
          description: Indicates that access to the resource is forbidden. Possible
            reasons include Access Denied, Unauthorized, Expired Token, or Invalid
            Signature.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        413:
          description: The request size exceeded the maximum accepted size.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        415:
          description: The request payload is in an unsupported format.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        429:
          description: The frequency of requests was greater than allowed.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        500:
          description: An unexpected condition occurred that prevented the server
            from fulfilling the request.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        503:
          description: Temporary overloading or maintenance of the server.
          headers:
            x-amzn-RequestId:
              description: Unique request reference identifier.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      x-codegen-request-body-name: body
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: An error code that identifies the type of error that occurred.
        message:
          type: string
          description: A message that describes the error condition.
        details:
          type: string
          description: Additional details that can help the caller understand or fix
            the issue.
      description: Error response returned when the request is unsuccessful.
    ErrorList:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      description: A list of error responses returned when a request is unsuccessful.
    Item:
      required:
      - sku
      type: object
      properties:
        sku:
          type: string
          description: A selling partner provided identifier for an Amazon listing.
        summaries:
          $ref: '#/components/schemas/ItemSummaries'
        attributes:
          $ref: '#/components/schemas/ItemAttributes'
        issues:
          $ref: '#/components/schemas/ItemIssues'
        offers:
          $ref: '#/components/schemas/ItemOffers'
        fulfillmentAvailability:
          type: array
          description: Fulfillment availability for the listings item.
          items:
            $ref: '#/components/schemas/FulfillmentAvailability'
        procurement:
          $ref: '#/components/schemas/ItemProcurement'
      description: A listings item.
    ItemSummaries:
      type: array
      description: Summary details of a listings item.
      items:
        $ref: '#/components/schemas/ItemSummaryByMarketplace'
    ItemSummaryByMarketplace:
      required:
      - asin
      - createdDate
      - itemName
      - lastUpdatedDate
      - marketplaceId
      - productType
      - status
      type: object
      properties:
        marketplaceId:
          type: string
          description: A marketplace identifier. Identifies the Amazon marketplace
            for the listings item.
        asin:
          type: string
          description: Amazon Standard Identification Number (ASIN) of the listings
            item.
        productType:
          type: string
          description: The Amazon product type of the listings item.
        conditionType:
          type: string
          description: Identifies the condition of the listings item.
          enum:
          - new_new
          - new_open_box
          - new_oem
          - refurbished_refurbished
          - used_like_new
          - used_very_good
          - used_good
          - used_acceptable
          - collectible_like_new
          - collectible_very_good
          - collectible_good
          - collectible_acceptable
          - club_club
          x-docgen-enum-table-extension:
          - value: new_new
            description: New
          - value: new_open_box
            description: New - Open Box.
          - value: new_oem
            description: New - OEM.
          - value: refurbished_refurbished
            description: Refurbished
          - value: used_like_new
            description: Used - Like New.
          - value: used_very_good
            description: Used - Very Good.
          - value: used_good
            description: Used - Good.
          - value: used_acceptable
            description: Used - Acceptable.
          - value: collectible_like_new
            description: Collectible - Like New.
          - value: collectible_very_good
            description: Collectible - Very Good.
          - value: collectible_good
            description: Collectible - Good.
          - value: collectible_acceptable
            description: Collectible - Acceptable.
          - value: club_club
            description: Club
        status:
          type: array
          description: Statuses that apply to the listings item.
          items:
            type: string
            enum:
            - BUYABLE
            - DISCOVERABLE
            x-docgen-enum-table-extension:
            - value: BUYABLE
              description: The listings item can be purchased by shoppers. This status
                does not apply to vendor listings.
            - value: DISCOVERABLE
              description: The listings item is visible to shoppers.
        fnSku:
          type: string
          description: Fulfillment network stock keeping unit is an identifier used
            by Amazon fulfillment centers to identify each unique item.
        itemName:
          type: string
          description: Name, or title, associated with an Amazon catalog item.
        createdDate:
          type: string
          description: Date the listings item was created, in ISO 8601 format.
          format: date-time
        lastUpdatedDate:
          type: string
          description: Date the listings item was last updated, in ISO 8601 format.
          format: date-time
        mainImage:
          $ref: '#/components/schemas/ItemImage'
      description: Summary details of a listings item for an Amazon marketplace.
    ItemImage:
      required:
      - height
      - link
      - width
      type: object
      properties:
        link:
          type: string
          description: Link, or URL, for the image.
        height:
          type: integer
          description: Height of the image in pixels.
        width:
          type: integer
          description: Width of the image in pixels.
      description: Image for the listings item.
    ItemAttributes:
      type: object
      description: JSON object containing structured listings item attribute data
        keyed by attribute name.
    ItemIssues:
      type: array
      description: Issues associated with the listings item.
      items:
        $ref: '#/components/schemas/Issue'
    Issue:
      required:
      - code
      - message
      - severity
      type: object
      properties:
        code:
          type: string
          description: An issue code that identifies the type of issue.
        message:
          type: string
          description: A message that describes the issue.
        severity:
          type: string
          description: The severity of the issue.
          enum:
          - ERROR
          - WARNING
          - INFO
          x-docgen-enum-table-extension:
          - value: ERROR
            description: Indicates an issue has occurred preventing the submission
              from processing, such as a validation error.
          - value: WARNING
            description: Indicates an issue has occurred that should be reviewed,
              but has not prevented the submission from processing.
          - value: INFO
            description: Indicates additional information has been provided that should
              be reviewed.
        attributeNames:
          type: array
          description: Names of the attributes associated with the issue, if applicable.
          items:
            type: string
      description: An issue with a listings item.
    ItemOffers:
      type: array
      description: Offer details for the listings item.
      items:
        $ref: '#/components/schemas/ItemOfferByMarketplace'
    ItemOfferByMarketplace:
      required:
      - marketplaceId
      - offerType
      - price
      type: object
      properties:
        marketplaceId:
          type: string
          description: Amazon marketplace identifier.
        offerType:
          type: string
          description: Type of offer for the listings item.
          enum:
          - B2C
          - B2B
          x-docgen-enum-table-extension:
          - value: B2C
            description: The offer on this listings item is available for Business
              to Consumer purchase, meaning that it is available to shoppers on Amazon
              retail sites.
          - value: B2B
            description: The offer on this listings item is available for Business
              to Business purchase.
        price:
          $ref: '#/components/schemas/Money'
        points:
          $ref: '#/components/schemas/Points'
      description: Offer details of a listings item for an Amazon marketplace.
    ItemProcurement:
      required:
      - costPrice
      type: object
      properties:
        costPrice:
          $ref: '#/components/schemas/Money'
      description: Vendor procurement information for the listings item.
    FulfillmentAvailability:
      required:
      - fulfillmentChannelCode
      type: object
      properties:
        fulfillmentChannelCode:
          type: string
          description: Designates which fulfillment network will be used.
        quantity:
          minimum: 0
          type: integer
          description: The quantity of the item you are making available for sale.
      description: Fulfillment availability details for the listings item.
    Money:
      required:
      - amount
      - currencyCode
      type: object
      properties:
        currencyCode:
          type: string
          description: Three-digit currency code. In ISO 4217 format.
        amount:
          $ref: '#/components/schemas/Decimal'
      description: The currency type and the amount.
    Decimal:
      type: string
      description: A decimal number with no loss of precision. Useful when precision
        loss is unnaceptable, as with currencies. Follows RFC7159 for number representation.
    Points:
      required:
      - pointsNumber
      type: object
      properties:
        pointsNumber:
          type: integer
      description: The number of Amazon Points offered with the purchase of an item,
        and their monetary value. Note that the Points element is only returned in
        Japan (JP).
    PatchOperation:
      required:
      - op
      - path
      type: object
      properties:
        op:
          type: string
          description: Type of JSON Patch operation. Supported JSON Patch operations
            include add, replace, and delete. See <https://tools.ietf.org/html/rfc6902>.
          enum:
          - add
          - replace
          - delete
          x-docgen-enum-table-extension:
          - value: add
            description: The "add" operation adds or replaces the target property.
          - value: replace
            description: The "replace" operation adds or replaces the target property.
          - value: delete
            description: The "delete" operation removes the target property.
        path:
          type: string
          description: JSON Pointer path of the element to patch. See <https://tools.ietf.org/html/rfc6902>.
        value:
          type: array
          description: JSON value to add, replace, or delete.
          items:
            type: object
            properties: {}
      description: Individual JSON Patch operation for an HTTP PATCH request.
    ListingsItemPatchRequest:
      required:
      - patches
      - productType
      type: object
      properties:
        productType:
          type: string
          description: The Amazon product type of the listings item.
        patches:
          minItems: 1
          type: array
          description: One or more JSON Patch operations to perform on the listings
            item.
          items:
            $ref: '#/components/schemas/PatchOperation'
      description: The request body schema for the patchListingsItem operation.
    ListingsItemPutRequest:
      required:
      - attributes
      - productType
      type: object
      properties:
        productType:
          type: string
          description: The Amazon product type of the listings item.
        requirements:
          type: string
          description: The name of the requirements set for the provided data.
          enum:
          - LISTING
          - LISTING_PRODUCT_ONLY
          - LISTING_OFFER_ONLY
          x-docgen-enum-table-extension:
          - value: LISTING
            description: Indicates the submitted data contains product facts and sales
              terms.
          - value: LISTING_PRODUCT_ONLY
            description: Indicates the submitted data contains product facts only.
          - value: LISTING_OFFER_ONLY
            description: Indicates the submitted data contains sales terms only.
        attributes:
          type: object
          properties: {}
          description: JSON object containing structured listings item attribute data
            keyed by attribute name.
      description: The request body schema for the putListingsItem operation.
    ListingsItemSubmissionResponse:
      required:
      - sku
      - status
      - submissionId
      type: object
      properties:
        sku:
          type: string
          description: A selling partner provided identifier for an Amazon listing.
        status:
          type: string
          description: The status of the listings item submission.
          enum:
          - ACCEPTED
          - INVALID
          x-docgen-enum-table-extension:
          - value: ACCEPTED
            description: The listings submission was accepted for processing.
          - value: INVALID
            description: The listings submission was not valid and was not accepted
              for processing.
        submissionId:
          type: string
          description: The unique identifier of the listings item submission.
        issues:
          type: array
          description: Listings item issues related to the listings item submission.
          items:
            $ref: '#/components/schemas/Issue'
      description: Response containing the results of a submission to the Selling
        Partner API for Listings Items.
