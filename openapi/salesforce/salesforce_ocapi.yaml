openapi: 3.1.0
info:
  title: Salesforce B2C OCAPI
  description: |-
    The Salesforce B2C API.
servers:
  - url: https://{host}.dx.commercecloud.salesforce.com/s/-/dw/data/v23_2
    description: Sandbox server url.
    variables:
      host:
        description: The host name of the sandbox.
paths:
  /products/{productId}/variant_search:
    post:
      operationId: SearchVariants
      description: Search for variants.
      parameters:
        - name: productId
          in: path
          description: The ID of the product
          schema:
            type: string
        - name: site_id
          in: query
          description: The site context
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestBody'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of returned documents.
                  data:
                    type: array
                    items:
                      type: string
                  db_start_record_:
                    type: number
                    description: The zero based index of the record we want to start with.
                  expand:
                    type: array
                    description: List of expansions to be applied to each search results.
                    items:
                      type: string
                  hits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Variant'
                  next:
                    $ref: '#/components/schemas/Iterators'
                  previous:
                    $ref: '#/components/schemas/Iterators'
                  query:
                    type: object
                    description: Query passed into request.
                  select:
                    type: string
                    description: The fields that you want to select.
                  sorts:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: The name of the field to sort on.
                        sort_order:
                          type: string
                          enum: ['asc', 'desc']
                          description: The sort order. Defaults to asc.
                  start:
                    type: integer
                    description: The zero based index of the first search hit to include in the result.
                  total:
                    type: integer
                    description: The total number of documents.
  /products/{productId}:
    get:
      operationId: GetProduct
      summary: Action to get product information.
      parameters:
        - name: productId
          in: path
          description: The ID of the product
          schema:
            type: string
        - name: siteId
          in: query
          description: The site context
          schema:
            type: string
      responses:
        200:
          description: Retrieved Product Information successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /product_search:
    post:
      operationId: ProductSearch
      description: Search for products.
      parameters:
        - name: siteId
          in: query
          description: The site context
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestBody'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of returned documents.
                  data:
                    type: array
                    items:
                      type: string
                  db_start_record_:
                    type: number
                    description: The zero based index of the record we want to start with.
                  expand:
                    type: array
                    description: List of expansions to be applied to each search results.
                    items:
                      type: string
                  hits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  next:
                    $ref: '#/components/schemas/Iterators'
                  previous:
                    $ref: '#/components/schemas/Iterators'
                  query:
                    type: object
                    description: Query passed into request.
                  select:
                    type: string
                    description: The fields that you want to select.
                  sorts:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: The name of the field to sort on.
                        sort_order:
                          type: string
                          enum: ['asc', 'desc']
                          description: The sort order. Defaults to asc.
                  start:
                    type: integer
                    description: The zero based index of the first search hit to include in the result.
                  total:
                    type: integer
                    description: The total number of documents.
  /sites/{site_id}/store_search:
    post:
      operationId: SearchStores
      description: Searches for stores.
      parameters:
        - name: site_id
          in: path
          description: The site context
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestBody'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                      type: integer
                      description: The number of returned documents.
                  data:
                    type: array
                    items:
                      type: string
                  db_start_record_:
                    type: number
                    description: The zero based index of the record we want to start with.
                  expand:
                    type: array
                    description: List of expansions to be applied to each search results.
                    items:
                      type: string
                  hits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Store'
                  next:
                    $ref: '#/components/schemas/Iterators'
                  previous:
                    $ref: '#/components/schemas/Iterators'
                  query:
                    type: object
                    description: Query passed into request.
                  select:
                    type: string
                    description: The fields that you want to select.
                  sorts:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: The name of the field to sort on.
                        sort_order:
                          type: string
                          enum: ['asc', 'desc']
                          description: The sort order. Defaults to asc.
                  start:
                    type: integer
                    description: The zero based index of the first search hit to include in the result.
                  total:
                    type: integer
                    description: The total number of documents.
components:
  schemas:
    Product:
      type: object
      properties:
        assigned_categories:
          type: array
          items:
            $ref: '#/components/schemas/AssignedCategory'
        ats:
          type: number
          description: The available to sell (ATS) inventory value of the product. This is the calculated value.
        brand:
          type: string
          description: The brand of the product.
        bundled_products:
          type: array
          items:
            type: string
        classification_category:
          $ref: '#/components/schemas/AssignedCategory'
        creation_date:
          type: string
          format: date-time
        default_variant_id:
          type: string
          description: The ID of the product's default variant. Read only.
        ean:
          type: string
          description: The European Article Number of the product.
        id:
          type: string
          description: The ID (SKU) of the product.
          minLength: 1
          maxLength: 100
        image:
          $ref: '#/components/schemas/Image'
        image_groups:
          $ref: '#/components/schemas/ImageGroup'
        in_stock:
          type: boolean
          description: The flag that indicates if the product is in stock, or not.
        last_modified:
          type: string
          format: date-time
        localized_tax_class_id:
          $ref: '#/components/schemas/LocalizedNameString'
        long_description:
          $ref: '#/components/schemas/LocalizedMarkup'
        manufacturer_name:
          description: The name of the products manufacturer.
          type: string
        manufacturer_sku:
          description: The SKU of the products manufacturer.
          type: string
        master:
          $ref: '#/components/schemas/Master'
        name:
          description: The localized name of the product.
          $ref: '#/components/schemas/LocalizedNameString'
        online:
          type: boolean
          description: The flag that indicates if the product is online, or not.
        online_flag:
          description: The site specific online status of the product.
          $ref: '#/components/schemas/LocalizedMarkup'
        owning_catalog_id:
          type: string
          description: The ID of the catalog that owns the product.
        owning_catalog_name:
          $ref: '#/components/schemas/LocalizedMarkup'
        page_description:
          $ref: '#/components/schemas/LocalizedMarkup'
        page_keywords:
          $ref: '#/components/schemas/LocalizedMarkup'
        page_title:
          $ref: '#/components/schemas/LocalizedMarkup'
        price:
          type: number
          description: The price of the product.
        price_currency:
          type: string
          description: The currency code for a products price.
          example: GBP
        price_per_unit:
          type: number
          description: The price per unit of the product.
        primary_categories:
          type: array
          items:
            $ref: '#/components/schemas/AssignedCategory'
        primary_category_id:
          type: string
          description: The ID of the products primary category. Read only.
        product_bundles:
          type: array
          description: Thge array of product bundles which the product belongs to. It is read only.
          items:
            $ref: '#/components/schemas/Product' # TODO: not sure if this is correct
        product_options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOption'
        product_sets:
          type: array
          description: The array of product sets which the product belongs to. It is readonly.
          items:
            $ref: '#/components/schemas/Product' # TODO: not sure if this is correct
        searchable:
          type: object
          description: The site-specific searchable status of the product.
          additionalProperties:
            type: boolean
        set_products:
          type: array
          description: The array of set products which the product includes. It is read only.
          items:
            $ref: '#/components/schemas/Product' # TODO: not sure if this is correct
        short_description:
          $ref: '#/components/schemas/LocalizedMarkup'
        tax_class_id:
          type: string
        type:
          description: The type of the product. It can have one or more of the values item, master, variationGroup, variant, bundle and set. It is read only.
          $ref: '#/components/schemas/ProductType' 
        unit:
          type: string
          description: The sales unit of the product.
        unit_measure:
          type: string
          description: The unitMeasure of the product.
        unit_quantity:
          type: number
          description: The unitQuantity of the product
        upc:
          type: string
          description: The Universal Product Code (UPC) of the product.
        valid_from:
          type: object
          description: The valid/online from date of the product.
          properties:
            default:
              type: string
              format: date-time
          additionalProperties:
            type: string
        valid_to:
          type: object
          description: The valid/online to date of the product.
          properties:
            default:
              type: string
              format: date-time
          additionalProperties:
            type: string
        variants:
          type: array
          description: The array of variants of the product. This is applicable for product types master and variationGroup only. It is read only.
          items:
            $ref: '#/components/schemas/Variant'
        variation_attributes:
            type: array
            items:
              $ref: '#/components/schemas/VariationAttribute'
        variation_groups:
          type: array
          description: The array of variation groups in the product. This is applicable for product type master only. It is read only.
          items:
            $ref: '#/components/schemas/VariationGroup'
        variation_values:
          type: object
          description: The map of variation values in the product. This is applicable for product type variant and variationGroup only. It is read only.
          additionalProperties:
            type: string
    AssignedCategory:
      type: object
      properties:
        catalog_id:
          type: string
        category_id:
          type: string
    Image:
      type: object
      description: The image(s) assigned to the product.
      properties:
        title:
          type: object
          description: The image title.
        path:
          description: The raw media file path
          type: string
          example: '/images/apple0ipod-classic.jpg'
        alt:
          type: object
          description: The alternative image text.
        dis_base_url:
          type: string
          description: the Dynamic Image Service (DIS) base URL for product images only.
        abs_url:
          type: string
          description: The absolute URL with request protocol.
          example: https://www.dis-base-url/images/apple-ipod-classic.jpg
    ImageGroup:
      type: array
      items:
        type: object
        properties:
          images:
            type: array
            items:
              $ref: '#/components/schemas/Image'
          view_type:
            type: string
            example: hi-res
          variation_attributes:
            type: array
            items:
              $ref: '#/components/schemas/VariationAttribute'
    VariationAttribute:
      type: object
      properties:
        attribute_definition_id:
          type: string
          description: The ID of the requested attribute definition.
          example: color
        attribute_definition_name:
          $ref: '#/components/schemas/LocalizedNameString'
          description: The localized display name of the variation attribute definition.
        default_value:
          type: string
          description: Default variation attribute value
          example: black
        id:
          type: string
          description: The ID of the variation attribute.
        name:
          $ref: '#/components/schemas/LocalizedNameString'
          description: The localized display name of the variation attribute.
        shared:
          type: boolean
          description: Returns the value of attribute shared if attribute is local or shared.
        slicing:
          type: boolean
          description: Returns the value of attribute slicing.
        values:
          type: array
          items:
            $ref: '#/components/schemas/VariationAttributeValue'
        variation_attribute_type:
          type: string
          enum:
            - string
            - int
            - unknown
    VariationAttributeValue:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/LocalizedNameString'
        image:
          $ref: '#/components/schemas/Image'
        image_swatch:
          $ref: '#/components/schemas/Image'
        name:    
          $ref: '#/components/schemas/LocalizedNameString'
        orderable:
          type: boolean
          description: A flag indicating whether at least one variant with this variation attribute value is available to sell.
        position:
          type: number
          description: The position of the value among all values of a variation attribute.
        value:
          type: string
          example: red
    LocalizedNameString:
      type: object
      properties:
        default:
          type: string
      additionalProperties:
        type: string
    LocalizedMarkup:
      type: object
      properties:
        default:
          $ref: '#/components/schemas/Markup'
      additionalProperties:
        $ref: '#/components/schemas/Markup'
    Markup:
      type: object
      properties:
        markup:
          type: string
        source:
          type: string
    Master:
      type: object
      properties:
        master_id:
          type: string
          description: The ID (SKU) of the master product
          minLength: 1
          maxLength: 100
        orderable:
          type: boolean
          description: A flag indicating whether at least one of the variants is orderable.
        price:
          type: number
          description: The minimum sales price of the related variants.
        price_max:
          type: number
          description: The maximum sales price of related variants.
        prices:
          type: object
          properties:
            default:
              type: string
          additionalProperties:
            type: number
    ProductOption:
      type: object
      properties:
        customName:
          description: The localized custom name of the product option.
          $ref: '#/components/schemas/LocalizedNameString'
        default_product_option_value:
          type: string
          description: The default product option value.
        description:
          description: The localized description of the product option.
          $ref: '#/components/schemas/LocalizedNameString'
        id:
          type: string
          description: The object attribute definition ID which is also the identifier for the product option.
        image:
          $ref: '#/components/schemas/Image'
        name:
          type: string
          description: The name of the object attribute definition
        selected_option_value:
          type: string
          description: The selected option value of the product option.
        shared:
          type: boolean
          description: The flag that indicates if the product option is shared or local
        sorting_mode:
          type: string
          description: The sorting mode for the product option values.
          enum: [byexplicitorder, byoptionprice]
        values:
          type: array
          description: The sorted array of values of the product option.
          items:
            $ref: '#/components/schemas/ProductOptionValue'
    ProductOptionValue:
      type: object
      properties:
        default_product_option_value:
          type: boolean
          description: Flag indicating if the product option value is the default value.
        id:
          type: string
          description: The ID of the product option value.
          minLength: 1
        option_prices:
          type: array
          description: The list of prices in the product option value.
          items:
            $ref: '#/components/schemas/Price'
        sku_extension:
          type: string
          description: The SKU extension of the product option value.
        value:
          description: The localized value of the product option.
          $ref: '#/components/schemas/LocalizedNameString'
    Price:
      type: object
      properties:
        currency_mnemonic:
          type: string
          description: The currency mnemonic for the money.
          example: GBP
        value:
          type: number
          description: The value for the money.
          example: 199.99
    ProductType:
      type: object
      properties:
        bundle:
          type: boolean
          description: A flag indicating whether the product is a bundle.
        bundled:
          type: boolean
          description: A flag indicating whether the product is bundled.
        item:
          type: boolean
          description: A flag indicating whether the product is a standard item.
        master:
          type: boolean
          description: A flag indicating whether the product is a master.
        option:
          type: boolean
          description: A flag indicating whether the product is an option.
        part_of_product_set:
          type: boolean
          description: A flag indicating whether the product is a part of product set.
        part_of_retail_set:
          type: boolean
          description: A flag indicating whether the product is part of retail set.
        retail_set:
          type: boolean
          description: A flag indicating whether the product is a retail set.
        set:
          type: boolean
          description: A flag indicating whether the product is a set.
        variant:
          type: boolean
          description: A flag indicating whether the product is a variant.
        variation_group:
          type: boolean
          description: A flag indicating whether the product is a variation group.
    Variant:
      type: object
      properties:
        ats:
          type: number
          description: The Available To Sell (ATS) inventory value of the product.
        default_product_variation:
          type: boolean
          description: A flag indicating whether the variant is a default variant.
        image:
          $ref: '#/components/schemas/Image'
        in_stock:
          type: boolean
          description: True if the product is in stock, false if not.
        online:
          type: boolean
          description: If the product is currently online. True if online, false if not.
        orderable:
          type: boolean
          description: A flag indicating whether the variant is orderable.
        price:
          type: number
          description: The sales price of the variant.
        price_currency:
          type: string
          description: The currency code for the price of the product.
          example: GBP
        product_id:
          type: string
          description: The ID (SKU) of the variant.
          minLength: 1
          maxLength: 100
        searchable:
          type: object
          additional_properties:
            type: boolean
        variation_attributes:
          type: array
          items:
            $ref: '#/components/schemas/VariationAttribute'
        variation_values:
          type: object
          additional_properties:
            type: string
    VariationGroup:
      type: object
      properties:
        orderable:
          type: boolean
          description: A flag indicating whether the variation group is orderable.
        price:
          type: number
          description: The sales price of the variation group.
        product_id:
          type: string
          description: The ID (SKU) of the variation group.
          minLength: 1
          maxLength: 100
        variation_values:
          type: object
          additional_properties:
            type: string
    Store:
      type: object
      properties:
        address1:
          type: string
          description: The primary address of the store.
        address2:
          type: string
          description: The secondary address of the store.
        city:
          type: string
          description: The city of the store.
        country_code:
          type: string
          description: A two letter uppercase country code conforming to the ISO 3166-1 alpha-2 standard.
        distance:
          type: number
          description: The distance to the given geolocation where the stores will be searched, using the unit given in the attribute DistanceUnit (miles or kilometers).
        distance_unit:
          type: string
          description: The unit of distance used in the attribute Distance.
          enum: [mi, km]
        email:
          type: string
          description: The email address of the store.
        fax:
          type: string
          description: The fax number of the store.
        id:
          type: string
          description: The ID of the store.
          minLength: 1
          maxLength: 256
        image:
          type: string
          description: The store image.
        inventory_id:
          type: string
          description: The inventory list id associated with this store.
        latitude:
          type: number
          description: The latitude of the store.
        longitude:
          type: number
          description: The longitude of the store.
        name:
          type: string
          description: The name of the store.
        phone:
          type: string
          description: The phone number of the store.
        pos_enabled:
          type: boolean
          description: Whether this store uses Store Point-of-Sale
        postal_code:
          type: string
          description: The postal code of the store.
          minLength: 3
          maxLength: 10
        state_code:
          type: string
          description: The state code of the store.
        store_events:
          type: string
          description: The store events.
        store_hours:
          type: string
          description: The opening hours of the store.
        store_locator_enabled:
          type: boolean
          description: Whether this store should show up in store locator results.
    Iterators:
      type: object
      description: Data that can be used to get the next and previous page of a Data API results object
      properties:
        count:
          type: integer
          description: The number of returned documents.
        db_start_record_:
          type: integer
          description: The zero based index of the record that we want to start with.
        start:
          type: integer
          description: The zero based index of the first search hit to include in the result.
    Query:
      type: object
      properties:
        filtered_query:
          type: object
          properties:
            query:
              type: object
              properties:
                match_all_query:
                  type: object
                  properties:
                    leave_blank:
                      type: string
            filter:
              type: object
              properties:
                range_filter:
                  type: object
                  properties:
                    field:
                      type: string
                    from:
                      type: string
                term_filter:
                  type: object
                  properties:
                    field:
                      type: string
                    operator:
                      type: string
                    values:
                      type: array
                      items:
                        type: string
        term_query:
          type: object
          properties:
            fields:
              type: array
              items:
                type: string
            operator:
              type: string
        match_all_query:
          type: object
          properties:
            leave_blank:
              type: string
    SearchRequestBody:
      type: object
      properties:
        count:
          type: integer 
          description: The number of returned documents.
          minimum: 1
          maximum: 200
        db_start_record_:
          type: integer 
          description: The zero-based indesx of the record that we want to start with, used to optimize special handling.
          minimum: 0
        expand:
          type: array
          description: List of expansions to be applied to each search results. Expands are optional.
          items:
            type: string
        query:
          description: 'Document representing a query. A query contains a set of objects that define criteria used to select records. A query can contain one of the following: select, sort, start'
          $ref: '#/components/schemas/Query'
        select:
          type: string
          description: The field to be selected.
        sorts:
          type: array
          description: The list of sort clauses configured for the search request. Sort clauses are optional.
          items:
            type: object
            properties:
              field:
                type: string
              sort_order:
                type: string
        start:
          type: integer 
          description: The zero-based index of the first search hit to include in the result.
          minimum: 0
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorization_code:
          authorization_url: https://account.demandware.com/dwsso/oauth2/authorize
          token_url: https://account.demandware.com/dwsso/oauth2/access_token
